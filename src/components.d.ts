/* tslint:disable */
/**
 * This is an autogenerated file created by the Stencil compiler.
 * It contains typing information for all components that exist in this project.
 */


import { HTMLStencilElement, JSXBase } from '@stencil/core/internal';


export namespace Components {
  interface IsBadge {
    /**
    * The color options are: `"primary"`, `"secondary"`, `"success"`, `"warning"`, `"error"`, `"light"`, `"info"`, `"white"`, `"black"`, and `"dark"`.
    */
    'color'?: string;
    /**
    * If `true`, make the badge rounded.
    */
    'rounded'?: boolean;
    /**
    * The text to display in the badge.
    */
    'text': string;
  }
}

declare global {


  interface HTMLIsBadgeElement extends Components.IsBadge, HTMLStencilElement {}
  var HTMLIsBadgeElement: {
    prototype: HTMLIsBadgeElement;
    new (): HTMLIsBadgeElement;
  };
  interface HTMLElementTagNameMap {
    'is-badge': HTMLIsBadgeElement;
  }
}

declare namespace LocalJSX {
  interface IsBadge extends JSXBase.HTMLAttributes<HTMLIsBadgeElement> {
    /**
    * The color options are: `"primary"`, `"secondary"`, `"success"`, `"warning"`, `"error"`, `"light"`, `"info"`, `"white"`, `"black"`, and `"dark"`.
    */
    'color'?: string;
    /**
    * If `true`, make the badge rounded.
    */
    'rounded'?: boolean;
    /**
    * The text to display in the badge.
    */
    'text'?: string;
  }

  interface IntrinsicElements {
    'is-badge': IsBadge;
  }
}

export { LocalJSX as JSX };


declare module "@stencil/core" {
  export namespace JSX {
    interface IntrinsicElements extends LocalJSX.IntrinsicElements {}
  }
}


