var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.6","fields":["title","body"],"fieldVectors":[["title/components/Alert.html",[0,0.612,1,0.612]],["body/components/Alert.html",[0,0.564,1,1.064,2,0.995,3,0.842,4,0.536,5,0.536,6,1.148,7,0.932,8,1.195,9,1.444,10,2.285,11,1.444,12,1.529,13,0.444,14,0.564,15,2.651,16,2.176,17,2.176,18,1.884,19,2.176,20,1.781,21,2.796,22,2.176,23,2.176,24,1.781,25,1.195,26,3.149,27,3.149,28,1.99,29,2.202,30,1.475,31,1.218,32,0.073,33,1.778,34,1.475,35,1.475,36,0.791,37,1.309,38,1.309,39,2.277,40,2.52,41,2.697,42,1.475,43,3.022,44,2.45,45,1.475,46,1.778,47,1.144,48,0.83,49,1.475,50,1.778,51,0.625,52,1.778,53,1.475,54,1.778,55,1.778,56,0.83,57,1.475,58,0.83,59,1.195,60,1.195,61,1.195,62,1.195,63,1.195,64,1.195,65,1.195,66,1.195,67,1.195,68,2.45,69,2.176,70,1.475,71,2.285,72,1.767,73,1.475,74,2.176,75,1.218,76,1.475,77,1.195,78,1.778,79,0.83,80,1.475,81,1.195,82,0.932,83,0.932,84,0.932,85,0.932,86,0.932,87,0.932,88,1.778,89,1.475,90,1.475,91,1.475,92,1.475,93,1.767,94,1.475,95,1.475,96,1.475,97,1.475,98,1.475,99,1.475,100,1.475,101,1.475,102,1.475,103,1.475,104,1.647,105,0.932,106,0.625,107,1.767,108,0.228,109,0.293,110,0.932,111,0.932,112,0.022,113,0.034,114,0.022]],["title/components/Badge.html",[0,0.612,108,0.384]],["body/components/Badge.html",[0,0.766,1,0.552,2,1.353,3,1.073,4,0.813,5,0.813,7,1.414,8,1.623,9,1.962,11,1.962,12,1.398,13,0.674,14,0.766,18,2.013,20,2.114,24,2.114,25,1.623,28,2.433,29,2.013,31,0.975,32,0.072,36,0.707,37,1.127,38,0.813,39,1.414,40,2.253,41,2.712,51,0.764,56,1.469,58,1.127,59,1.623,60,1.623,61,1.623,62,1.623,63,1.623,64,1.623,65,1.623,66,1.623,67,1.623,79,1.127,81,1.623,82,1.414,83,1.414,84,1.414,85,1.414,86,1.414,87,1.414,93,1.414,104,2.013,105,1.414,106,0.764,107,2.253,108,0.697,109,0.444,110,1.414,111,1.414,112,0.033,113,0.046,114,0.033,115,1.741,116,3.104,117,2.238,118,2.238,119,2.238,120,2.238,121,1.623,122,2.238]],["title/interfaces/ILabelTo.html",[123,1.081,124,0.901]],["body/interfaces/ILabelTo.html",[3,0.991,4,1.195,5,1.195,13,0.991,14,0.984,32,0.07,36,0.791,47,1.195,51,0.933,106,0.653,112,0.048,113,0.059,114,0.048,123,1.738,124,1.449,125,2.08,126,2.08,127,2.334,128,1.945,129,1.195,130,2.08]],["title/interfaces/ISelectItem.html",[123,1.081,129,0.901]],["body/interfaces/ISelectItem.html",[3,0.991,4,1.195,5,1.195,13,0.991,14,0.984,32,0.07,36,0.791,47,1.559,51,0.907,106,0.885,112,0.048,113,0.059,114,0.048,123,1.738,124,1.195,125,2.08,126,2.08,127,1.72,128,1.434,129,1.449,130,2.821]],["title/components/Multiselect.html",[0,0.612,109,0.492]],["body/components/Multiselect.html",[0,0.334,1,0.193,2,0.591,3,0.236,4,0.284,5,0.284,7,0.495,8,0.709,9,0.857,11,0.857,12,1.032,13,0.236,14,0.334,18,0.938,22,1.055,25,0.709,28,1.352,29,2.14,31,1.154,32,0.073,33,1.664,36,0.76,37,0.962,38,1.295,39,2.253,40,2.486,41,2.54,47,0.878,48,0.492,51,0.649,56,0.492,58,0.962,68,2.061,69,2.632,72,0.857,74,1.395,75,0.932,77,0.709,79,1.032,82,0.495,83,0.495,84,0.495,85,0.495,86,0.495,87,0.495,88,2.451,93,1.901,104,1.118,105,0.495,106,0.564,107,1.133,108,0.121,109,0.564,110,0.495,111,0.495,112,0.012,113,0.02,114,0.012,121,1.118,124,0.492,127,1.385,128,1.311,129,1.444,131,0.609,132,1.356,133,1.793,134,1.356,135,1.395,136,1.793,137,2.982,138,1.793,139,1.395,140,1.395,141,2.212,142,1.882,143,1.395,144,1.395,145,1.395,146,3.277,147,1.395,148,1.793,149,1.793,150,2.139,151,1.664,152,1.356,153,1.356,154,1.356,155,0.782,156,1.793,157,0.782,158,1.055,159,1.356,160,1.793,161,1.356,162,1.356,163,1.356,164,0.782,165,1.395,166,0.782,167,1.356,168,3.008,169,1.356,170,0.782,171,2.418,172,1.356,173,1.356,174,0.782,175,0.782,176,1.055,177,1.055,178,0.782,179,0.782,180,1.055,181,0.782,182,1.055,183,0.782,184,2.212,185,1.055,186,1.664,187,0.782,188,0.782,189,1.055,190,1.055,191,1.055,192,1.352,193,0.782,194,1.055,195,1.055,196,1.055,197,1.055,198,1.055,199,0.782,200,1.055,201,0.782,202,1.055,203,1.055,204,0.782,205,0.782,206,0.782,207,1.055,208,1.055,209,0.782,210,2.418,211,0.782,212,0.782,213,0.782,214,1.395,215,0.609,216,0.782,217,1.793,218,2.843,219,3.274,220,1.356,221,1.356,222,1.793,223,1.356,224,0.782,225,0.782,226,0.782,227,0.782,228,0.782,229,0.782,230,0.782,231,0.782,232,3.008,233,0.782,234,0.782,235,1.055,236,0.782,237,0.782,238,1.356,239,3.008,240,0.782,241,0.782,242,0.782,243,0.782,244,2.061,245,1.793,246,1.793,247,1.356,248,0.782,249,2.139,250,0.782,251,1.356,252,1.356,253,0.782,254,0.782,255,0.782,256,0.782,257,0.782,258,0.782,259,1.356,260,0.782,261,0.782,262,1.356,263,0.782,264,0.782,265,0.782,266,0.782,267,0.495,268,0.782,269,0.782,270,0.782,271,0.782,272,0.782,273,0.782,274,0.782,275,0.782,276,0.782,277,0.782,278,0.782,279,0.782,280,0.782,281,0.782,282,0.782]],["title/coverage.html",[283,2.592]],["body/coverage.html",[0,1.05,1,0.795,5,1.171,6,2.508,32,0.07,36,0.639,108,0.499,109,0.639,112,0.047,113,0.058,114,0.047,115,2.508,123,1.717,124,1.171,126,2.49,129,1.171,131,2.508,192,2.037,244,3.311,283,2.508,284,2.037,285,3.224,286,3.224,287,3.224,288,3.224,289,3.224,290,3.224,291,3.94,292,3.224,293,3.224,294,2.508,295,2.508,296,3.224,297,2.508,298,3.224,299,2.508]],["title/miscellaneous/functions.html",[300,1.634,301,2.311]],["body/miscellaneous/functions.html",[13,1.06,18,1.841,31,1.535,32,0.067,51,0.699,106,0.699,112,0.052,113,0.061,114,0.052,165,2.74,294,2.74,295,3.233,300,2.74,301,2.74,302,3.522,303,3.522,304,4.155,305,4.155,306,3.522]],["title/index.html",[13,0.632,307,1.634,308,1.634]],["body/index.html",[0,0.846,1,0.639,2,1.494,4,0.941,8,1.793,32,0.069,48,1.245,72,1.638,104,1.793,106,0.762,108,0.531,109,0.68,112,0.038,113,0.05,114,0.038,128,1.129,130,2.429,235,2.668,284,1.638,297,2.668,299,2.017,309,4.458,310,2.591,311,2.591,312,2.591,313,2.591,314,1.638,315,1.355,316,2.591,317,3.429,318,2.591,319,2.591,320,2.591,321,3.429,322,3.429,323,3.429,324,2.591,325,2.591,326,2.591,327,2.591,328,2.591,329,3.429,330,2.591,331,2.591,332,2.591,333,2.591,334,2.017,335,2.591,336,2.591,337,2.591,338,2.591,339,2.591,340,2.591,341,4.253,342,2.668,343,2.591,344,2.591,345,2.591,346,2.591,347,4.09,348,3.429,349,3.843,350,2.591,351,2.591,352,3.429,353,2.591,354,2.591,355,3.429,356,2.591,357,2.591,358,2.591,359,2.591,360,2.591,361,2.591,362,2.591]],["title/license.html",[307,1.634,308,1.634,363,1.634]],["body/license.html",[32,0.053,75,1.215,112,0.041,113,0.053,114,0.041,284,1.763,334,2.799,363,2.17,364,2.789,365,3.982,366,2.789,367,2.789,368,3.597,369,2.789,370,2.789,371,2.789,372,2.789,373,2.789,374,2.789,375,3.597,376,4.644,377,2.789,378,2.789,379,2.789,380,3.982,381,2.789,382,3.597,383,2.789,384,2.789,385,2.789,386,2.789,387,2.789,388,2.789,389,2.789,390,2.789,391,2.789,392,3.597,393,2.789,394,2.789,395,2.789,396,2.789,397,2.789,398,2.789,399,2.789,400,3.597,401,3.597,402,2.789,403,2.789,404,2.789,405,2.789,406,2.789,407,2.789,408,2.789,409,2.789,410,2.789,411,2.789,412,2.789,413,2.789,414,2.789,415,2.789,416,2.789,417,2.789,418,2.789,419,2.789,420,2.789,421,2.789,422,2.789,423,2.789,424,2.789,425,2.789,426,2.789,427,2.789,428,2.789,429,2.789,430,2.789,431,2.789]],["title/modules.html",[432,2.592]],["body/modules.html",[32,0.064,112,0.056,113,0.064,114,0.056,432,2.948]],["title/overview.html",[433,2.592]],["body/overview.html",[2,1.625,32,0.063,48,1.354,112,0.055,113,0.063,114,0.055,125,2.357,342,2.902,433,2.902]],["title/additional-documentation/is-alert.html",[1,0.518,434,1.328,435,1.328]],["body/additional-documentation/is-alert.html",[1,1.162,3,0.744,12,1.52,14,0.819,15,2.584,16,2.584,17,1.922,19,1.922,20,2.303,23,1.922,24,2.098,32,0.049,36,0.659,37,1.363,38,0.897,43,3.355,44,2.584,46,1.922,47,1.206,48,0.897,50,1.922,51,0.659,52,1.922,54,1.922,55,1.922,56,1.566,58,0.897,59,1.292,60,1.292,61,1.292,62,1.292,63,1.292,64,1.292,65,1.292,66,1.292,67,1.292,75,1.076,77,1.292,78,1.922,79,0.897,81,1.292,106,0.49,108,0.383,112,0.036,113,0.049,114,0.036,314,2.099,315,1.292,436,1.561,437,1.561,438,2.371,439,2.47,440,2.47,441,1.561,442,1.922,443,1.922,444,1.922,445,1.922,446,2.584,447,2.584,448,2.584,449,3.355,450,2.584,451,2.584,452,2.584,453,3.484,454,2.584,455,2.584,456,2.584,457,1.561]],["title/additional-documentation/is-badge.html",[108,0.325,434,1.328,435,1.328]],["body/additional-documentation/is-badge.html",[3,0.787,12,0.949,14,0.85,20,2.336,24,2.145,32,0.057,36,0.518,37,0.949,38,0.949,51,0.684,56,1.622,58,0.949,59,1.366,60,1.366,61,1.366,62,1.366,63,1.366,64,1.366,65,1.366,66,1.366,67,1.366,79,0.949,81,1.366,106,0.518,108,0.741,109,0.684,112,0.038,113,0.051,114,0.038,121,1.366,267,1.651,314,2.179,315,1.366,436,1.651,437,1.651,438,2.179,441,2.179,444,2.033,445,2.033,446,2.683,447,2.683,448,2.683,449,3.409,450,2.683,451,2.683,452,2.683,453,3.528,454,2.683,455,2.683,456,2.683,457,1.651,458,3.447,459,2.033,460,2.613,461,2.683,462,2.033,463,2.033,464,2.033]],["title/additional-documentation/is-multiselect.html",[109,0.417,434,1.328,435,1.328]],["body/additional-documentation/is-multiselect.html",[12,1.194,14,0.6,25,1.272,29,1.272,31,1.06,32,0.069,36,0.738,37,1.194,38,0.883,47,1.352,48,0.883,51,0.738,56,0.883,58,1.194,75,1.06,77,1.272,79,1.194,108,0.577,109,0.738,112,0.036,113,0.048,114,0.036,121,1.719,124,0.883,127,1.946,128,1.737,129,1.194,135,2.558,137,3.472,139,1.893,140,1.893,141,3.102,142,2.558,143,2.558,144,1.893,145,2.558,146,3.639,147,1.893,151,1.893,158,2.558,176,1.893,177,1.893,180,1.893,182,1.893,184,2.897,185,1.893,186,2.558,189,1.893,190,1.893,191,1.893,192,2.077,194,1.893,195,1.893,196,1.893,197,1.893,198,1.893,200,1.893,202,1.893,203,1.893,207,1.893,208,2.558,214,2.558,215,1.893,267,1.537,315,1.272,436,1.537,437,1.537,438,2.077,441,1.537,442,1.893,443,1.893,457,1.537,459,1.893,461,2.558,462,1.893,463,1.893,464,1.893,465,2.432]]],"invertedIndex":[["",{"_index":32,"title":{},"body":{"components/Alert.html":{},"components/Badge.html":{},"interfaces/ILabelTo.html":{},"interfaces/ISelectItem.html":{},"components/Multiselect.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"additional-documentation/is-alert.html":{},"additional-documentation/is-badge.html":{},"additional-documentation/is-multiselect.html":{}}}],["0",{"_index":244,"title":{},"body":{"components/Multiselect.html":{},"coverage.html":{}}}],["0/1",{"_index":296,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":291,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":235,"title":{},"body":{"components/Multiselect.html":{},"index.html":{}}}],["1000",{"_index":100,"title":{},"body":{"components/Alert.html":{}}}],["12/22",{"_index":293,"title":{},"body":{"coverage.html":{}}}],["2",{"_index":342,"title":{},"body":{"index.html":{},"overview.html":{}}}],["200",{"_index":242,"title":{},"body":{"components/Multiselect.html":{}}}],["2018",{"_index":367,"title":{},"body":{"license.html":{}}}],["3",{"_index":48,"title":{},"body":{"components/Alert.html":{},"components/Multiselect.html":{},"index.html":{},"overview.html":{},"additional-documentation/is-alert.html":{},"additional-documentation/is-multiselect.html":{}}}],["3/5",{"_index":290,"title":{},"body":{"coverage.html":{}}}],["53",{"_index":287,"title":{},"body":{"coverage.html":{}}}],["54",{"_index":292,"title":{},"body":{"coverage.html":{}}}],["60",{"_index":289,"title":{},"body":{"coverage.html":{}}}],["7/13",{"_index":288,"title":{},"body":{"coverage.html":{}}}],["above",{"_index":399,"title":{},"body":{"license.html":{}}}],["action",{"_index":424,"title":{},"body":{"license.html":{}}}],["actual_component",{"_index":111,"title":{},"body":{"components/Alert.html":{},"components/Badge.html":{},"components/Multiselect.html":{}}}],["add",{"_index":354,"title":{},"body":{"index.html":{}}}],["additional",{"_index":434,"title":{"additional-documentation/is-alert.html":{},"additional-documentation/is-badge.html":{},"additional-documentation/is-multiselect.html":{}},"body":{}}],["alert",{"_index":1,"title":{"components/Alert.html":{},"additional-documentation/is-alert.html":{}},"body":{"components/Alert.html":{},"components/Badge.html":{},"components/Multiselect.html":{},"coverage.html":{},"index.html":{},"additional-documentation/is-alert.html":{}}}],["alert.scss",{"_index":10,"title":{},"body":{"components/Alert.html":{}}}],["and/or",{"_index":390,"title":{},"body":{"license.html":{}}}],["anywhere",{"_index":335,"title":{},"body":{"index.html":{}}}],["applications",{"_index":312,"title":{},"body":{"index.html":{}}}],["arising",{"_index":428,"title":{},"body":{"license.html":{}}}],["associated",{"_index":377,"title":{},"body":{"license.html":{}}}],["attribute",{"_index":437,"title":{},"body":{"additional-documentation/is-alert.html":{},"additional-documentation/is-badge.html":{},"additional-documentation/is-multiselect.html":{}}}],["authors",{"_index":417,"title":{},"body":{"license.html":{}}}],["auto",{"_index":439,"title":{},"body":{"additional-documentation/is-alert.html":{}}}],["autoclose",{"_index":15,"title":{},"body":{"components/Alert.html":{},"additional-documentation/is-alert.html":{}}}],["automatically",{"_index":44,"title":{},"body":{"components/Alert.html":{},"additional-documentation/is-alert.html":{}}}],["b",{"_index":351,"title":{},"body":{"index.html":{}}}],["background",{"_index":446,"title":{},"body":{"additional-documentation/is-alert.html":{},"additional-documentation/is-badge.html":{}}}],["badge",{"_index":108,"title":{"components/Badge.html":{},"additional-documentation/is-badge.html":{}},"body":{"components/Alert.html":{},"components/Badge.html":{},"components/Multiselect.html":{},"coverage.html":{},"index.html":{},"additional-documentation/is-alert.html":{},"additional-documentation/is-badge.html":{},"additional-documentation/is-multiselect.html":{}}}],["badge.scss",{"_index":116,"title":{},"body":{"components/Badge.html":{}}}],["badges",{"_index":207,"title":{},"body":{"components/Multiselect.html":{},"additional-documentation/is-multiselect.html":{}}}],["black",{"_index":66,"title":{},"body":{"components/Alert.html":{},"components/Badge.html":{},"additional-documentation/is-alert.html":{},"additional-documentation/is-badge.html":{}}}],["boolean",{"_index":37,"title":{},"body":{"components/Alert.html":{},"components/Badge.html":{},"components/Multiselect.html":{},"additional-documentation/is-alert.html":{},"additional-documentation/is-badge.html":{},"additional-documentation/is-multiselect.html":{}}}],["border",{"_index":447,"title":{},"body":{"additional-documentation/is-alert.html":{},"additional-documentation/is-badge.html":{}}}],["bottom",{"_index":454,"title":{},"body":{"additional-documentation/is-alert.html":{},"additional-documentation/is-badge.html":{}}}],["branch",{"_index":348,"title":{},"body":{"index.html":{}}}],["build",{"_index":313,"title":{},"body":{"index.html":{}}}],["building",{"_index":311,"title":{},"body":{"index.html":{}}}],["built",{"_index":457,"title":{},"body":{"additional-documentation/is-alert.html":{},"additional-documentation/is-badge.html":{},"additional-documentation/is-multiselect.html":{}}}],["button",{"_index":55,"title":{},"body":{"components/Alert.html":{},"additional-documentation/is-alert.html":{}}}],["c",{"_index":366,"title":{},"body":{"license.html":{}}}],["cdn",{"_index":326,"title":{},"body":{"index.html":{}}}],["changed",{"_index":202,"title":{},"body":{"components/Multiselect.html":{},"additional-documentation/is-multiselect.html":{}}}],["changes",{"_index":353,"title":{},"body":{"index.html":{}}}],["charge",{"_index":372,"title":{},"body":{"license.html":{}}}],["checkout",{"_index":350,"title":{},"body":{"index.html":{}}}],["claim",{"_index":420,"title":{},"body":{"license.html":{}}}],["class",{"_index":87,"title":{},"body":{"components/Alert.html":{},"components/Badge.html":{},"components/Multiselect.html":{}}}],["click",{"_index":186,"title":{},"body":{"components/Multiselect.html":{},"additional-documentation/is-multiselect.html":{}}}],["closable",{"_index":46,"title":{},"body":{"components/Alert.html":{},"additional-documentation/is-alert.html":{}}}],["close",{"_index":43,"title":{},"body":{"components/Alert.html":{},"additional-documentation/is-alert.html":{}}}],["closeable",{"_index":16,"title":{},"body":{"components/Alert.html":{},"additional-documentation/is-alert.html":{}}}],["closed",{"_index":78,"title":{},"body":{"components/Alert.html":{},"additional-documentation/is-alert.html":{}}}],["closesecs",{"_index":17,"title":{},"body":{"components/Alert.html":{},"additional-documentation/is-alert.html":{}}}],["closetext",{"_index":19,"title":{},"body":{"components/Alert.html":{},"additional-documentation/is-alert.html":{}}}],["color",{"_index":20,"title":{},"body":{"components/Alert.html":{},"components/Badge.html":{},"additional-documentation/is-alert.html":{},"additional-documentation/is-badge.html":{}}}],["commit",{"_index":352,"title":{},"body":{"index.html":{}}}],["component",{"_index":0,"title":{"components/Alert.html":{},"components/Badge.html":{},"components/Multiselect.html":{}},"body":{"components/Alert.html":{},"components/Badge.html":{},"components/Multiselect.html":{},"coverage.html":{},"index.html":{}}}],["component.isnur.com",{"_index":318,"title":{},"body":{"index.html":{}}}],["component.isnur.com/docs",{"_index":319,"title":{},"body":{"index.html":{}}}],["component_template",{"_index":105,"title":{},"body":{"components/Alert.html":{},"components/Badge.html":{},"components/Multiselect.html":{}}}],["componentdidload",{"_index":26,"title":{},"body":{"components/Alert.html":{}}}],["componentdidunload",{"_index":27,"title":{},"body":{"components/Alert.html":{}}}],["componentinterface",{"_index":133,"title":{},"body":{"components/Multiselect.html":{}}}],["components",{"_index":2,"title":{},"body":{"components/Alert.html":{},"components/Badge.html":{},"components/Multiselect.html":{},"index.html":{},"overview.html":{}}}],["componentusage",{"_index":328,"title":{},"body":{"index.html":{}}}],["componentwillload",{"_index":150,"title":{},"body":{"components/Multiselect.html":{}}}],["conditions",{"_index":398,"title":{},"body":{"license.html":{}}}],["connection",{"_index":430,"title":{},"body":{"license.html":{}}}],["const",{"_index":222,"title":{},"body":{"components/Multiselect.html":{}}}],["contract",{"_index":425,"title":{},"body":{"license.html":{}}}],["contributing",{"_index":344,"title":{},"body":{"index.html":{}}}],["copies",{"_index":392,"title":{},"body":{"license.html":{}}}],["copy",{"_index":375,"title":{},"body":{"license.html":{}}}],["copyright",{"_index":365,"title":{},"body":{"license.html":{}}}],["count",{"_index":214,"title":{},"body":{"components/Multiselect.html":{},"additional-documentation/is-multiselect.html":{}}}],["countdowntimerid",{"_index":21,"title":{},"body":{"components/Alert.html":{}}}],["coverage",{"_index":283,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["create",{"_index":346,"title":{},"body":{"index.html":{}}}],["css",{"_index":444,"title":{},"body":{"additional-documentation/is-alert.html":{},"additional-documentation/is-badge.html":{}}}],["custom",{"_index":445,"title":{},"body":{"additional-documentation/is-alert.html":{},"additional-documentation/is-badge.html":{}}}],["customevent",{"_index":443,"title":{},"body":{"additional-documentation/is-alert.html":{},"additional-documentation/is-multiselect.html":{}}}],["customized",{"_index":54,"title":{},"body":{"components/Alert.html":{},"additional-documentation/is-alert.html":{}}}],["damages",{"_index":421,"title":{},"body":{"license.html":{}}}],["dark",{"_index":67,"title":{},"body":{"components/Alert.html":{},"components/Badge.html":{},"additional-documentation/is-alert.html":{},"additional-documentation/is-badge.html":{}}}],["data",{"_index":341,"title":{},"body":{"index.html":{}}}],["deal",{"_index":379,"title":{},"body":{"license.html":{}}}],["dealings",{"_index":431,"title":{},"body":{"license.html":{}}}],["decorators",{"_index":40,"title":{},"body":{"components/Alert.html":{},"components/Badge.html":{},"components/Multiselect.html":{}}}],["default",{"_index":38,"title":{},"body":{"components/Alert.html":{},"components/Badge.html":{},"components/Multiselect.html":{},"additional-documentation/is-alert.html":{},"additional-documentation/is-badge.html":{},"additional-documentation/is-multiselect.html":{}}}],["defined",{"_index":29,"title":{},"body":{"components/Alert.html":{},"components/Badge.html":{},"components/Multiselect.html":{},"additional-documentation/is-multiselect.html":{}}}],["demo",{"_index":316,"title":{},"body":{"index.html":{}}}],["dependencies",{"_index":459,"title":{},"body":{"additional-documentation/is-badge.html":{},"additional-documentation/is-multiselect.html":{}}}],["depends",{"_index":465,"title":{},"body":{"additional-documentation/is-multiselect.html":{}}}],["description",{"_index":438,"title":{},"body":{"additional-documentation/is-alert.html":{},"additional-documentation/is-badge.html":{},"additional-documentation/is-multiselect.html":{}}}],["directives",{"_index":110,"title":{},"body":{"components/Alert.html":{},"components/Badge.html":{},"components/Multiselect.html":{}}}],["disabled",{"_index":135,"title":{},"body":{"components/Multiselect.html":{},"additional-documentation/is-multiselect.html":{}}}],["display",{"_index":121,"title":{},"body":{"components/Badge.html":{},"components/Multiselect.html":{},"additional-documentation/is-badge.html":{},"additional-documentation/is-multiselect.html":{}}}],["distribute",{"_index":388,"title":{},"body":{"license.html":{}}}],["document",{"_index":163,"title":{},"body":{"components/Multiselect.html":{}}}],["document.getelementbyid(\"select",{"_index":340,"title":{},"body":{"index.html":{}}}],["documentation",{"_index":284,"title":{},"body":{"coverage.html":{},"index.html":{},"license.html":{}}}],["el",{"_index":22,"title":{},"body":{"components/Alert.html":{},"components/Multiselect.html":{}}}],["element",{"_index":72,"title":{},"body":{"components/Alert.html":{},"components/Multiselect.html":{},"index.html":{}}}],["element.value",{"_index":261,"title":{},"body":{"components/Multiselect.html":{}}}],["elements",{"_index":197,"title":{},"body":{"components/Multiselect.html":{},"additional-documentation/is-multiselect.html":{}}}],["emitted",{"_index":77,"title":{},"body":{"components/Alert.html":{},"components/Multiselect.html":{},"additional-documentation/is-alert.html":{},"additional-documentation/is-multiselect.html":{}}}],["error",{"_index":63,"title":{},"body":{"components/Alert.html":{},"components/Badge.html":{},"additional-documentation/is-alert.html":{},"additional-documentation/is-badge.html":{}}}],["etc",{"_index":339,"title":{},"body":{"index.html":{}}}],["event",{"_index":75,"title":{},"body":{"components/Alert.html":{},"components/Multiselect.html":{},"license.html":{},"additional-documentation/is-alert.html":{},"additional-documentation/is-multiselect.html":{}}}],["eventemitter",{"_index":74,"title":{},"body":{"components/Alert.html":{},"components/Multiselect.html":{}}}],["events",{"_index":442,"title":{},"body":{"additional-documentation/is-alert.html":{},"additional-documentation/is-multiselect.html":{}}}],["export",{"_index":86,"title":{},"body":{"components/Alert.html":{},"components/Badge.html":{},"components/Multiselect.html":{}}}],["express",{"_index":408,"title":{},"body":{"license.html":{}}}],["false",{"_index":79,"title":{},"body":{"components/Alert.html":{},"components/Badge.html":{},"components/Multiselect.html":{},"additional-documentation/is-alert.html":{},"additional-documentation/is-badge.html":{},"additional-documentation/is-multiselect.html":{}}}],["family",{"_index":450,"title":{},"body":{"additional-documentation/is-alert.html":{},"additional-documentation/is-badge.html":{}}}],["feature",{"_index":347,"title":{},"body":{"index.html":{}}}],["file",{"_index":5,"title":{},"body":{"components/Alert.html":{},"components/Badge.html":{},"interfaces/ILabelTo.html":{},"interfaces/ISelectItem.html":{},"components/Multiselect.html":{},"coverage.html":{}}}],["files",{"_index":378,"title":{},"body":{"license.html":{}}}],["fill:#f9f,stroke:#333,stroke",{"_index":463,"title":{},"body":{"additional-documentation/is-badge.html":{},"additional-documentation/is-multiselect.html":{}}}],["filtereditems",{"_index":228,"title":{},"body":{"components/Multiselect.html":{}}}],["first",{"_index":306,"title":{},"body":{"miscellaneous/functions.html":{}}}],["fitness",{"_index":413,"title":{},"body":{"license.html":{}}}],["following",{"_index":397,"title":{},"body":{"license.html":{}}}],["font",{"_index":449,"title":{},"body":{"additional-documentation/is-alert.html":{},"additional-documentation/is-badge.html":{}}}],["fork",{"_index":345,"title":{},"body":{"index.html":{}}}],["format",{"_index":295,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["format(first",{"_index":303,"title":{},"body":{"miscellaneous/functions.html":{}}}],["found",{"_index":282,"title":{},"body":{"components/Multiselect.html":{}}}],["free",{"_index":371,"title":{},"body":{"license.html":{}}}],["function",{"_index":192,"title":{},"body":{"components/Multiselect.html":{},"coverage.html":{},"additional-documentation/is-multiselect.html":{}}}],["functions",{"_index":301,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["furnished",{"_index":395,"title":{},"body":{"license.html":{}}}],["getselected",{"_index":151,"title":{},"body":{"components/Multiselect.html":{},"additional-documentation/is-multiselect.html":{}}}],["getting",{"_index":307,"title":{"index.html":{},"license.html":{}},"body":{}}],["git",{"_index":349,"title":{},"body":{"index.html":{}}}],["granted",{"_index":370,"title":{},"body":{"license.html":{}}}],["graph",{"_index":461,"title":{},"body":{"additional-documentation/is-badge.html":{},"additional-documentation/is-multiselect.html":{}}}],["h",{"_index":84,"title":{},"body":{"components/Alert.html":{},"components/Badge.html":{},"components/Multiselect.html":{}}}],["handleclick",{"_index":152,"title":{},"body":{"components/Multiselect.html":{}}}],["handleclick(event",{"_index":159,"title":{},"body":{"components/Multiselect.html":{}}}],["head",{"_index":332,"title":{},"body":{"index.html":{}}}],["height",{"_index":458,"title":{},"body":{"additional-documentation/is-badge.html":{}}}],["hereby",{"_index":369,"title":{},"body":{"license.html":{}}}],["hidden",{"_index":190,"title":{},"body":{"components/Multiselect.html":{},"additional-documentation/is-multiselect.html":{}}}],["holders",{"_index":418,"title":{},"body":{"license.html":{}}}],["host",{"_index":83,"title":{},"body":{"components/Alert.html":{},"components/Badge.html":{},"components/Multiselect.html":{}}}],["html",{"_index":338,"title":{},"body":{"index.html":{}}}],["htmlelement",{"_index":71,"title":{},"body":{"components/Alert.html":{}}}],["htmlinputelement",{"_index":227,"title":{},"body":{"components/Multiselect.html":{}}}],["https://is",{"_index":317,"title":{},"body":{"index.html":{}}}],["https://unpkg.com/is",{"_index":327,"title":{},"body":{"index.html":{}}}],["id",{"_index":130,"title":{},"body":{"interfaces/ILabelTo.html":{},"interfaces/ISelectItem.html":{},"index.html":{}}}],["identifier",{"_index":285,"title":{},"body":{"coverage.html":{}}}],["ilabelto",{"_index":124,"title":{"interfaces/ILabelTo.html":{}},"body":{"interfaces/ILabelTo.html":{},"interfaces/ISelectItem.html":{},"components/Multiselect.html":{},"coverage.html":{},"additional-documentation/is-multiselect.html":{}}}],["implements",{"_index":132,"title":{},"body":{"components/Multiselect.html":{}}}],["implied",{"_index":409,"title":{},"body":{"license.html":{}}}],["import",{"_index":82,"title":{},"body":{"components/Alert.html":{},"components/Badge.html":{},"components/Multiselect.html":{}}}],["included",{"_index":402,"title":{},"body":{"license.html":{}}}],["including",{"_index":382,"title":{},"body":{"license.html":{}}}],["index",{"_index":13,"title":{"index.html":{}},"body":{"components/Alert.html":{},"components/Badge.html":{},"interfaces/ILabelTo.html":{},"interfaces/ISelectItem.html":{},"components/Multiselect.html":{},"miscellaneous/functions.html":{}}}],["index.html",{"_index":333,"title":{},"body":{"index.html":{}}}],["info",{"_index":3,"title":{},"body":{"components/Alert.html":{},"components/Badge.html":{},"interfaces/ILabelTo.html":{},"interfaces/ISelectItem.html":{},"components/Multiselect.html":{},"additional-documentation/is-alert.html":{},"additional-documentation/is-badge.html":{}}}],["install",{"_index":321,"title":{},"body":{"index.html":{}}}],["installation",{"_index":320,"title":{},"body":{"index.html":{}}}],["interact",{"_index":177,"title":{},"body":{"components/Multiselect.html":{},"additional-documentation/is-multiselect.html":{}}}],["interface",{"_index":123,"title":{"interfaces/ILabelTo.html":{},"interfaces/ISelectItem.html":{}},"body":{"interfaces/ILabelTo.html":{},"interfaces/ISelectItem.html":{},"coverage.html":{}}}],["interfaces",{"_index":125,"title":{},"body":{"interfaces/ILabelTo.html":{},"interfaces/ISelectItem.html":{},"overview.html":{}}}],["isclickinside",{"_index":223,"title":{},"body":{"components/Multiselect.html":{}}}],["iselectitem",{"_index":129,"title":{"interfaces/ISelectItem.html":{}},"body":{"interfaces/ILabelTo.html":{},"interfaces/ISelectItem.html":{},"components/Multiselect.html":{},"coverage.html":{},"additional-documentation/is-multiselect.html":{}}}],["isexpanded",{"_index":136,"title":{},"body":{"components/Multiselect.html":{}}}],["isselected",{"_index":248,"title":{},"body":{"components/Multiselect.html":{}}}],["item",{"_index":249,"title":{},"body":{"components/Multiselect.html":{}}}],["item.id",{"_index":252,"title":{},"body":{"components/Multiselect.html":{}}}],["item.name",{"_index":281,"title":{},"body":{"components/Multiselect.html":{}}}],["items",{"_index":137,"title":{},"body":{"components/Multiselect.html":{},"additional-documentation/is-multiselect.html":{}}}],["jsx",{"_index":337,"title":{},"body":{"index.html":{}}}],["keyword",{"_index":138,"title":{},"body":{"components/Multiselect.html":{}}}],["kind",{"_index":407,"title":{},"body":{"license.html":{}}}],["label",{"_index":184,"title":{},"body":{"components/Multiselect.html":{},"additional-documentation/is-multiselect.html":{}}}],["labelselected",{"_index":139,"title":{},"body":{"components/Multiselect.html":{},"additional-documentation/is-multiselect.html":{}}}],["labelto",{"_index":140,"title":{},"body":{"components/Multiselect.html":{},"additional-documentation/is-multiselect.html":{}}}],["last",{"_index":305,"title":{},"body":{"miscellaneous/functions.html":{}}}],["left",{"_index":455,"title":{},"body":{"additional-documentation/is-alert.html":{},"additional-documentation/is-badge.html":{}}}],["liability",{"_index":422,"title":{},"body":{"license.html":{}}}],["liable",{"_index":419,"title":{},"body":{"license.html":{}}}],["license",{"_index":363,"title":{"license.html":{}},"body":{"license.html":{}}}],["light",{"_index":64,"title":{},"body":{"components/Alert.html":{},"components/Badge.html":{},"additional-documentation/is-alert.html":{},"additional-documentation/is-badge.html":{}}}],["limit",{"_index":141,"title":{},"body":{"components/Multiselect.html":{},"additional-documentation/is-multiselect.html":{}}}],["limitation",{"_index":383,"title":{},"body":{"license.html":{}}}],["limited",{"_index":410,"title":{},"body":{"license.html":{}}}],["limittext",{"_index":142,"title":{},"body":{"components/Multiselect.html":{},"additional-documentation/is-multiselect.html":{}}}],["list",{"_index":180,"title":{},"body":{"components/Multiselect.html":{},"additional-documentation/is-multiselect.html":{}}}],["listen",{"_index":213,"title":{},"body":{"components/Multiselect.html":{}}}],["listen('click",{"_index":161,"title":{},"body":{"components/Multiselect.html":{}}}],["make",{"_index":81,"title":{},"body":{"components/Alert.html":{},"components/Badge.html":{},"additional-documentation/is-alert.html":{},"additional-documentation/is-badge.html":{}}}],["matching",{"_index":113,"title":{},"body":{"components/Alert.html":{},"components/Badge.html":{},"interfaces/ILabelTo.html":{},"interfaces/ISelectItem.html":{},"components/Multiselect.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"additional-documentation/is-alert.html":{},"additional-documentation/is-badge.html":{},"additional-documentation/is-multiselect.html":{}}}],["max",{"_index":143,"title":{},"body":{"components/Multiselect.html":{},"additional-documentation/is-multiselect.html":{}}}],["maximum",{"_index":200,"title":{},"body":{"components/Multiselect.html":{},"additional-documentation/is-multiselect.html":{}}}],["merchantability",{"_index":412,"title":{},"body":{"license.html":{}}}],["merge",{"_index":386,"title":{},"body":{"license.html":{}}}],["message",{"_index":195,"title":{},"body":{"components/Multiselect.html":{},"additional-documentation/is-multiselect.html":{}}}],["metadata",{"_index":7,"title":{},"body":{"components/Alert.html":{},"components/Badge.html":{},"components/Multiselect.html":{}}}],["method",{"_index":156,"title":{},"body":{"components/Multiselect.html":{}}}],["methods",{"_index":25,"title":{},"body":{"components/Alert.html":{},"components/Badge.html":{},"components/Multiselect.html":{},"additional-documentation/is-multiselect.html":{}}}],["middle",{"_index":304,"title":{},"body":{"miscellaneous/functions.html":{}}}],["miscellaneous",{"_index":300,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["mit",{"_index":364,"title":{},"body":{"license.html":{}}}],["modal",{"_index":360,"title":{},"body":{"index.html":{}}}],["modify",{"_index":385,"title":{},"body":{"license.html":{}}}],["modules",{"_index":432,"title":{"modules.html":{}},"body":{"modules.html":{}}}],["more",{"_index":215,"title":{},"body":{"components/Multiselect.html":{},"additional-documentation/is-multiselect.html":{}}}],["mouseevent",{"_index":160,"title":{},"body":{"components/Multiselect.html":{}}}],["multiselect",{"_index":109,"title":{"components/Multiselect.html":{},"additional-documentation/is-multiselect.html":{}},"body":{"components/Alert.html":{},"components/Badge.html":{},"components/Multiselect.html":{},"coverage.html":{},"index.html":{},"additional-documentation/is-badge.html":{},"additional-documentation/is-multiselect.html":{}}}],["multiselect.scss",{"_index":134,"title":{},"body":{"components/Multiselect.html":{}}}],["name",{"_index":106,"title":{},"body":{"components/Alert.html":{},"components/Badge.html":{},"interfaces/ILabelTo.html":{},"interfaces/ISelectItem.html":{},"components/Multiselect.html":{},"miscellaneous/functions.html":{},"index.html":{},"additional-documentation/is-alert.html":{},"additional-documentation/is-badge.html":{}}}],["new",{"_index":297,"title":{},"body":{"coverage.html":{},"index.html":{}}}],["newvalue",{"_index":171,"title":{},"body":{"components/Multiselect.html":{}}}],["noninfringement",{"_index":416,"title":{},"body":{"license.html":{}}}],["notice",{"_index":400,"title":{},"body":{"license.html":{}}}],["npm",{"_index":323,"title":{},"body":{"index.html":{}}}],["null",{"_index":68,"title":{},"body":{"components/Alert.html":{},"components/Multiselect.html":{}}}],["number",{"_index":47,"title":{},"body":{"components/Alert.html":{},"interfaces/ILabelTo.html":{},"interfaces/ISelectItem.html":{},"components/Multiselect.html":{},"additional-documentation/is-alert.html":{},"additional-documentation/is-multiselect.html":{}}}],["obj.id",{"_index":251,"title":{},"body":{"components/Multiselect.html":{}}}],["obj['name'].tolowercase().includes(this.keyword.tolowercase",{"_index":264,"title":{},"body":{"components/Multiselect.html":{}}}],["obtaining",{"_index":374,"title":{},"body":{"license.html":{}}}],["oldvalue",{"_index":168,"title":{},"body":{"components/Multiselect.html":{}}}],["onclose",{"_index":23,"title":{},"body":{"components/Alert.html":{},"additional-documentation/is-alert.html":{}}}],["onfiltereditems",{"_index":258,"title":{},"body":{"components/Multiselect.html":{}}}],["onselected",{"_index":144,"title":{},"body":{"components/Multiselect.html":{},"additional-documentation/is-multiselect.html":{}}}],["open",{"_index":310,"title":{},"body":{"index.html":{}}}],["option",{"_index":185,"title":{},"body":{"components/Multiselect.html":{},"additional-documentation/is-multiselect.html":{}}}],["optional",{"_index":18,"title":{},"body":{"components/Alert.html":{},"components/Badge.html":{},"components/Multiselect.html":{},"miscellaneous/functions.html":{}}}],["options",{"_index":58,"title":{},"body":{"components/Alert.html":{},"components/Badge.html":{},"components/Multiselect.html":{},"additional-documentation/is-alert.html":{},"additional-documentation/is-badge.html":{},"additional-documentation/is-multiselect.html":{}}}],["origin",{"_index":356,"title":{},"body":{"index.html":{}}}],["otherwise",{"_index":427,"title":{},"body":{"license.html":{}}}],["out",{"_index":429,"title":{},"body":{"license.html":{}}}],["outside",{"_index":238,"title":{},"body":{"components/Multiselect.html":{}}}],["overview",{"_index":433,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["padding",{"_index":453,"title":{},"body":{"additional-documentation/is-alert.html":{},"additional-documentation/is-badge.html":{}}}],["page",{"_index":435,"title":{"additional-documentation/is-alert.html":{},"additional-documentation/is-badge.html":{},"additional-documentation/is-multiselect.html":{}},"body":{}}],["pagination",{"_index":361,"title":{},"body":{"index.html":{}}}],["parameters",{"_index":165,"title":{},"body":{"components/Multiselect.html":{},"miscellaneous/functions.html":{}}}],["particular",{"_index":414,"title":{},"body":{"license.html":{}}}],["pass",{"_index":198,"title":{},"body":{"components/Multiselect.html":{},"additional-documentation/is-multiselect.html":{}}}],["permission",{"_index":368,"title":{},"body":{"license.html":{}}}],["permit",{"_index":393,"title":{},"body":{"license.html":{}}}],["person",{"_index":373,"title":{},"body":{"license.html":{}}}],["persons",{"_index":394,"title":{},"body":{"license.html":{}}}],["pick",{"_index":203,"title":{},"body":{"components/Multiselect.html":{},"additional-documentation/is-multiselect.html":{}}}],["placeholder",{"_index":145,"title":{},"body":{"components/Multiselect.html":{},"additional-documentation/is-multiselect.html":{}}}],["placeholder={this.placeholder",{"_index":270,"title":{},"body":{"components/Multiselect.html":{}}}],["portions",{"_index":404,"title":{},"body":{"license.html":{}}}],["primary",{"_index":59,"title":{},"body":{"components/Alert.html":{},"components/Badge.html":{},"additional-documentation/is-alert.html":{},"additional-documentation/is-badge.html":{}}}],["private",{"_index":88,"title":{},"body":{"components/Alert.html":{},"components/Multiselect.html":{}}}],["process",{"_index":194,"title":{},"body":{"components/Multiselect.html":{},"additional-documentation/is-multiselect.html":{}}}],["promise",{"_index":158,"title":{},"body":{"components/Multiselect.html":{},"additional-documentation/is-multiselect.html":{}}}],["promise.resolve(this.selected",{"_index":216,"title":{},"body":{"components/Multiselect.html":{}}}],["prop",{"_index":41,"title":{},"body":{"components/Alert.html":{},"components/Badge.html":{},"components/Multiselect.html":{}}}],["properties",{"_index":14,"title":{},"body":{"components/Alert.html":{},"components/Badge.html":{},"interfaces/ILabelTo.html":{},"interfaces/ISelectItem.html":{},"components/Multiselect.html":{},"additional-documentation/is-alert.html":{},"additional-documentation/is-badge.html":{},"additional-documentation/is-multiselect.html":{}}}],["property",{"_index":436,"title":{},"body":{"additional-documentation/is-alert.html":{},"additional-documentation/is-badge.html":{},"additional-documentation/is-multiselect.html":{}}}],["provided",{"_index":405,"title":{},"body":{"license.html":{}}}],["publish",{"_index":387,"title":{},"body":{"license.html":{}}}],["pull",{"_index":358,"title":{},"body":{"index.html":{}}}],["purpose",{"_index":415,"title":{},"body":{"license.html":{}}}],["push",{"_index":355,"title":{},"body":{"index.html":{}}}],["put",{"_index":330,"title":{},"body":{"index.html":{}}}],["radius",{"_index":448,"title":{},"body":{"additional-documentation/is-alert.html":{},"additional-documentation/is-badge.html":{}}}],["ref={el",{"_index":269,"title":{},"body":{"components/Multiselect.html":{}}}],["remove",{"_index":127,"title":{},"body":{"interfaces/ILabelTo.html":{},"interfaces/ISelectItem.html":{},"components/Multiselect.html":{},"additional-documentation/is-multiselect.html":{}}}],["remove={this.isselected(item",{"_index":277,"title":{},"body":{"components/Multiselect.html":{}}}],["render",{"_index":28,"title":{},"body":{"components/Alert.html":{},"components/Badge.html":{},"components/Multiselect.html":{}}}],["renderclosetext",{"_index":91,"title":{},"body":{"components/Alert.html":{}}}],["renderselecteditems",{"_index":229,"title":{},"body":{"components/Multiselect.html":{}}}],["request",{"_index":359,"title":{},"body":{"index.html":{}}}],["rest",{"_index":189,"title":{},"body":{"components/Multiselect.html":{},"additional-documentation/is-multiselect.html":{}}}],["restriction",{"_index":381,"title":{},"body":{"license.html":{}}}],["result",{"_index":112,"title":{},"body":{"components/Alert.html":{},"components/Badge.html":{},"interfaces/ILabelTo.html":{},"interfaces/ISelectItem.html":{},"components/Multiselect.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"additional-documentation/is-alert.html":{},"additional-documentation/is-badge.html":{},"additional-documentation/is-multiselect.html":{}}}],["results",{"_index":114,"title":{},"body":{"components/Alert.html":{},"components/Badge.html":{},"interfaces/ILabelTo.html":{},"interfaces/ISelectItem.html":{},"components/Multiselect.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"additional-documentation/is-alert.html":{},"additional-documentation/is-badge.html":{},"additional-documentation/is-multiselect.html":{}}}],["return",{"_index":93,"title":{},"body":{"components/Alert.html":{},"components/Badge.html":{},"components/Multiselect.html":{}}}],["returns",{"_index":31,"title":{},"body":{"components/Alert.html":{},"components/Badge.html":{},"components/Multiselect.html":{},"miscellaneous/functions.html":{},"additional-documentation/is-multiselect.html":{}}}],["right",{"_index":456,"title":{},"body":{"additional-documentation/is-alert.html":{},"additional-documentation/is-badge.html":{}}}],["rights",{"_index":384,"title":{},"body":{"license.html":{}}}],["rounded",{"_index":24,"title":{},"body":{"components/Alert.html":{},"components/Badge.html":{},"additional-documentation/is-alert.html":{},"additional-documentation/is-badge.html":{}}}],["saveyou",{"_index":324,"title":{},"body":{"index.html":{}}}],["scoped",{"_index":11,"title":{},"body":{"components/Alert.html":{},"components/Badge.html":{},"components/Multiselect.html":{}}}],["script",{"_index":329,"title":{},"body":{"index.html":{}}}],["secondary",{"_index":60,"title":{},"body":{"components/Alert.html":{},"components/Badge.html":{},"additional-documentation/is-alert.html":{},"additional-documentation/is-badge.html":{}}}],["seconds",{"_index":50,"title":{},"body":{"components/Alert.html":{},"additional-documentation/is-alert.html":{}}}],["secs",{"_index":440,"title":{},"body":{"additional-documentation/is-alert.html":{}}}],["select",{"_index":128,"title":{},"body":{"interfaces/ILabelTo.html":{},"interfaces/ISelectItem.html":{},"components/Multiselect.html":{},"index.html":{},"additional-documentation/is-multiselect.html":{}}}],["select.items",{"_index":343,"title":{},"body":{"index.html":{}}}],["select={!this.isselected(item",{"_index":279,"title":{},"body":{"components/Multiselect.html":{}}}],["selected",{"_index":146,"title":{},"body":{"components/Multiselect.html":{},"additional-documentation/is-multiselect.html":{}}}],["selected={this.isselected(item",{"_index":275,"title":{},"body":{"components/Multiselect.html":{}}}],["selected[this.limit",{"_index":234,"title":{},"body":{"components/Multiselect.html":{}}}],["selector",{"_index":107,"title":{},"body":{"components/Alert.html":{},"components/Badge.html":{},"components/Multiselect.html":{}}}],["sell",{"_index":391,"title":{},"body":{"license.html":{}}}],["setitems",{"_index":153,"title":{},"body":{"components/Multiselect.html":{}}}],["setitems(newvalue",{"_index":167,"title":{},"body":{"components/Multiselect.html":{}}}],["setselected",{"_index":154,"title":{},"body":{"components/Multiselect.html":{}}}],["setselected(newvalue",{"_index":172,"title":{},"body":{"components/Multiselect.html":{}}}],["settimeout",{"_index":240,"title":{},"body":{"components/Multiselect.html":{}}}],["shall",{"_index":401,"title":{},"body":{"license.html":{}}}],["show",{"_index":208,"title":{},"body":{"components/Multiselect.html":{},"additional-documentation/is-multiselect.html":{}}}],["shown",{"_index":196,"title":{},"body":{"components/Multiselect.html":{},"additional-documentation/is-multiselect.html":{}}}],["showselectedbadge",{"_index":147,"title":{},"body":{"components/Multiselect.html":{},"additional-documentation/is-multiselect.html":{}}}],["similar",{"_index":331,"title":{},"body":{"index.html":{}}}],["size",{"_index":451,"title":{},"body":{"additional-documentation/is-alert.html":{},"additional-documentation/is-badge.html":{}}}],["software",{"_index":376,"title":{},"body":{"license.html":{}}}],["source",{"_index":4,"title":{},"body":{"components/Alert.html":{},"components/Badge.html":{},"interfaces/ILabelTo.html":{},"interfaces/ISelectItem.html":{},"components/Multiselect.html":{},"index.html":{}}}],["src/.../utils.ts",{"_index":302,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/components/alert/alert.tsx",{"_index":6,"title":{},"body":{"components/Alert.html":{},"coverage.html":{}}}],["src/components/alert/alert.tsx:12",{"_index":57,"title":{},"body":{"components/Alert.html":{}}}],["src/components/alert/alert.tsx:17",{"_index":42,"title":{},"body":{"components/Alert.html":{}}}],["src/components/alert/alert.tsx:22",{"_index":49,"title":{},"body":{"components/Alert.html":{}}}],["src/components/alert/alert.tsx:27",{"_index":45,"title":{},"body":{"components/Alert.html":{}}}],["src/components/alert/alert.tsx:32",{"_index":53,"title":{},"body":{"components/Alert.html":{}}}],["src/components/alert/alert.tsx:37",{"_index":80,"title":{},"body":{"components/Alert.html":{}}}],["src/components/alert/alert.tsx:39",{"_index":70,"title":{},"body":{"components/Alert.html":{}}}],["src/components/alert/alert.tsx:41",{"_index":73,"title":{},"body":{"components/Alert.html":{}}}],["src/components/alert/alert.tsx:51",{"_index":76,"title":{},"body":{"components/Alert.html":{}}}],["src/components/alert/alert.tsx:60",{"_index":30,"title":{},"body":{"components/Alert.html":{}}}],["src/components/alert/alert.tsx:68",{"_index":34,"title":{},"body":{"components/Alert.html":{}}}],["src/components/alert/alert.tsx:74",{"_index":35,"title":{},"body":{"components/Alert.html":{}}}],["src/components/badge/badge.tsx",{"_index":115,"title":{},"body":{"components/Badge.html":{},"coverage.html":{}}}],["src/components/badge/badge.tsx:12",{"_index":118,"title":{},"body":{"components/Badge.html":{}}}],["src/components/badge/badge.tsx:17",{"_index":120,"title":{},"body":{"components/Badge.html":{}}}],["src/components/badge/badge.tsx:22",{"_index":119,"title":{},"body":{"components/Badge.html":{}}}],["src/components/badge/badge.tsx:24",{"_index":117,"title":{},"body":{"components/Badge.html":{}}}],["src/components/multiselect/multiselect.interface.tsx",{"_index":126,"title":{},"body":{"interfaces/ILabelTo.html":{},"interfaces/ISelectItem.html":{},"coverage.html":{}}}],["src/components/multiselect/multiselect.tsx",{"_index":131,"title":{},"body":{"components/Multiselect.html":{},"coverage.html":{}}}],["src/components/multiselect/multiselect.tsx:104",{"_index":174,"title":{},"body":{"components/Multiselect.html":{}}}],["src/components/multiselect/multiselect.tsx:111",{"_index":164,"title":{},"body":{"components/Multiselect.html":{}}}],["src/components/multiselect/multiselect.tsx:204",{"_index":155,"title":{},"body":{"components/Multiselect.html":{}}}],["src/components/multiselect/multiselect.tsx:214",{"_index":166,"title":{},"body":{"components/Multiselect.html":{}}}],["src/components/multiselect/multiselect.tsx:25",{"_index":175,"title":{},"body":{"components/Multiselect.html":{}}}],["src/components/multiselect/multiselect.tsx:30",{"_index":204,"title":{},"body":{"components/Multiselect.html":{}}}],["src/components/multiselect/multiselect.tsx:35",{"_index":179,"title":{},"body":{"components/Multiselect.html":{}}}],["src/components/multiselect/multiselect.tsx:40",{"_index":205,"title":{},"body":{"components/Multiselect.html":{}}}],["src/components/multiselect/multiselect.tsx:45",{"_index":187,"title":{},"body":{"components/Multiselect.html":{}}}],["src/components/multiselect/multiselect.tsx:53",{"_index":188,"title":{},"body":{"components/Multiselect.html":{}}}],["src/components/multiselect/multiselect.tsx:58",{"_index":193,"title":{},"body":{"components/Multiselect.html":{}}}],["src/components/multiselect/multiselect.tsx:63",{"_index":183,"title":{},"body":{"components/Multiselect.html":{}}}],["src/components/multiselect/multiselect.tsx:68",{"_index":206,"title":{},"body":{"components/Multiselect.html":{}}}],["src/components/multiselect/multiselect.tsx:73",{"_index":199,"title":{},"body":{"components/Multiselect.html":{}}}],["src/components/multiselect/multiselect.tsx:75",{"_index":178,"title":{},"body":{"components/Multiselect.html":{}}}],["src/components/multiselect/multiselect.tsx:76",{"_index":181,"title":{},"body":{"components/Multiselect.html":{}}}],["src/components/multiselect/multiselect.tsx:77",{"_index":211,"title":{},"body":{"components/Multiselect.html":{}}}],["src/components/multiselect/multiselect.tsx:78",{"_index":209,"title":{},"body":{"components/Multiselect.html":{}}}],["src/components/multiselect/multiselect.tsx:84",{"_index":157,"title":{},"body":{"components/Multiselect.html":{}}}],["src/components/multiselect/multiselect.tsx:91",{"_index":201,"title":{},"body":{"components/Multiselect.html":{}}}],["src/components/multiselect/multiselect.tsx:94",{"_index":170,"title":{},"body":{"components/Multiselect.html":{}}}],["src/utils/utils.ts",{"_index":294,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["started",{"_index":308,"title":{"index.html":{},"license.html":{}},"body":{}}],["state",{"_index":69,"title":{},"body":{"components/Alert.html":{},"components/Multiselect.html":{}}}],["statements",{"_index":286,"title":{},"body":{"coverage.html":{}}}],["stencil/core",{"_index":85,"title":{},"body":{"components/Alert.html":{},"components/Badge.html":{},"components/Multiselect.html":{}}}],["stenciljs",{"_index":315,"title":{},"body":{"index.html":{},"additional-documentation/is-alert.html":{},"additional-documentation/is-badge.html":{},"additional-documentation/is-multiselect.html":{}}}],["string",{"_index":51,"title":{},"body":{"components/Alert.html":{},"components/Badge.html":{},"interfaces/ILabelTo.html":{},"interfaces/ISelectItem.html":{},"components/Multiselect.html":{},"miscellaneous/functions.html":{},"additional-documentation/is-alert.html":{},"additional-documentation/is-badge.html":{},"additional-documentation/is-multiselect.html":{}}}],["style",{"_index":267,"title":{},"body":{"components/Multiselect.html":{},"additional-documentation/is-badge.html":{},"additional-documentation/is-multiselect.html":{}}}],["styleurl",{"_index":9,"title":{},"body":{"components/Alert.html":{},"components/Badge.html":{},"components/Multiselect.html":{}}}],["subject",{"_index":396,"title":{},"body":{"license.html":{}}}],["sublicense",{"_index":389,"title":{},"body":{"license.html":{}}}],["submit",{"_index":357,"title":{},"body":{"index.html":{}}}],["substantial",{"_index":403,"title":{},"body":{"license.html":{}}}],["success",{"_index":61,"title":{},"body":{"components/Alert.html":{},"components/Badge.html":{},"additional-documentation/is-alert.html":{},"additional-documentation/is-badge.html":{}}}],["table",{"_index":299,"title":{},"body":{"coverage.html":{},"index.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":298,"title":{},"body":{"coverage.html":{}}}],["tabs",{"_index":362,"title":{},"body":{"index.html":{}}}],["tag",{"_index":8,"title":{},"body":{"components/Alert.html":{},"components/Badge.html":{},"components/Multiselect.html":{},"index.html":{}}}],["tags",{"_index":148,"title":{},"body":{"components/Multiselect.html":{}}}],["target",{"_index":162,"title":{},"body":{"components/Multiselect.html":{}}}],["td",{"_index":462,"title":{},"body":{"additional-documentation/is-badge.html":{},"additional-documentation/is-multiselect.html":{}}}],["template",{"_index":336,"title":{},"body":{"index.html":{}}}],["text",{"_index":56,"title":{},"body":{"components/Alert.html":{},"components/Badge.html":{},"components/Multiselect.html":{},"additional-documentation/is-alert.html":{},"additional-documentation/is-badge.html":{},"additional-documentation/is-multiselect.html":{}}}],["textinput",{"_index":226,"title":{},"body":{"components/Multiselect.html":{}}}],["textselected",{"_index":149,"title":{},"body":{"components/Multiselect.html":{}}}],["this.autoclose",{"_index":101,"title":{},"body":{"components/Alert.html":{}}}],["this.close",{"_index":98,"title":{},"body":{"components/Alert.html":{}}}],["this.close()}>{this.closetext",{"_index":94,"title":{},"body":{"components/Alert.html":{}}}],["this.closeable",{"_index":92,"title":{},"body":{"components/Alert.html":{}}}],["this.closesecs",{"_index":99,"title":{},"body":{"components/Alert.html":{}}}],["this.countdowntimerid",{"_index":96,"title":{},"body":{"components/Alert.html":{}}}],["this.el.attributes['auto",{"_index":95,"title":{},"body":{"components/Alert.html":{}}}],["this.el.remove",{"_index":90,"title":{},"body":{"components/Alert.html":{}}}],["this.filtereditems",{"_index":262,"title":{},"body":{"components/Multiselect.html":{}}}],["this.filtereditems.length",{"_index":272,"title":{},"body":{"components/Multiselect.html":{}}}],["this.filtereditems.map((item",{"_index":273,"title":{},"body":{"components/Multiselect.html":{}}}],["this.isexpanded",{"_index":239,"title":{},"body":{"components/Multiselect.html":{}}}],["this.isselected(item",{"_index":254,"title":{},"body":{"components/Multiselect.html":{}}}],["this.items",{"_index":217,"title":{},"body":{"components/Multiselect.html":{}}}],["this.items.filter(obj",{"_index":263,"title":{},"body":{"components/Multiselect.html":{}}}],["this.keyword",{"_index":260,"title":{},"body":{"components/Multiselect.html":{}}}],["this.labelselected",{"_index":276,"title":{},"body":{"components/Multiselect.html":{}}}],["this.labelto.remove",{"_index":278,"title":{},"body":{"components/Multiselect.html":{}}}],["this.labelto.select",{"_index":280,"title":{},"body":{"components/Multiselect.html":{}}}],["this.limit",{"_index":233,"title":{},"body":{"components/Multiselect.html":{}}}],["this.limittext(count",{"_index":236,"title":{},"body":{"components/Multiselect.html":{}}}],["this.max",{"_index":256,"title":{},"body":{"components/Multiselect.html":{}}}],["this.multiselect",{"_index":265,"title":{},"body":{"components/Multiselect.html":{}}}],["this.multiselect.contains(event.target",{"_index":224,"title":{},"body":{"components/Multiselect.html":{}}}],["this.onclose.emit(true",{"_index":89,"title":{},"body":{"components/Alert.html":{}}}],["this.onfiltereditems",{"_index":220,"title":{},"body":{"components/Multiselect.html":{}}}],["this.onselected.emit(this.selected",{"_index":257,"title":{},"body":{"components/Multiselect.html":{}}}],["this.placeholder",{"_index":210,"title":{},"body":{"components/Multiselect.html":{}}}],["this.renderclosetext",{"_index":103,"title":{},"body":{"components/Alert.html":{}}}],["this.renderselecteditems",{"_index":247,"title":{},"body":{"components/Multiselect.html":{}}}],["this.selected",{"_index":219,"title":{},"body":{"components/Multiselect.html":{}}}],["this.selected.filter(obj",{"_index":255,"title":{},"body":{"components/Multiselect.html":{}}}],["this.selected.length",{"_index":232,"title":{},"body":{"components/Multiselect.html":{}}}],["this.selected.map((item",{"_index":230,"title":{},"body":{"components/Multiselect.html":{}}}],["this.selected.some(obj",{"_index":250,"title":{},"body":{"components/Multiselect.html":{}}}],["this.showselectedbadge",{"_index":245,"title":{},"body":{"components/Multiselect.html":{}}}],["this.tags",{"_index":246,"title":{},"body":{"components/Multiselect.html":{}}}],["this.text",{"_index":122,"title":{},"body":{"components/Badge.html":{}}}],["this.textinput",{"_index":259,"title":{},"body":{"components/Multiselect.html":{}}}],["this.textinput.focus",{"_index":241,"title":{},"body":{"components/Multiselect.html":{}}}],["this.textselected",{"_index":218,"title":{},"body":{"components/Multiselect.html":{}}}],["this.toggle(!this.isexpanded)}>&nbsp",{"_index":271,"title":{},"body":{"components/Multiselect.html":{}}}],["this.toggle(false",{"_index":225,"title":{},"body":{"components/Multiselect.html":{}}}],["this.toggle(true",{"_index":266,"title":{},"body":{"components/Multiselect.html":{}}}],["this.updateitems(item",{"_index":274,"title":{},"body":{"components/Multiselect.html":{}}}],["this.updateitems(item)}>x",{"_index":231,"title":{},"body":{"components/Multiselect.html":{}}}],["this.updateplaceholder",{"_index":221,"title":{},"body":{"components/Multiselect.html":{}}}],["toggle",{"_index":237,"title":{},"body":{"components/Multiselect.html":{}}}],["top",{"_index":314,"title":{},"body":{"index.html":{},"additional-documentation/is-alert.html":{},"additional-documentation/is-badge.html":{}}}],["tort",{"_index":426,"title":{},"body":{"license.html":{}}}],["true",{"_index":12,"title":{},"body":{"components/Alert.html":{},"components/Badge.html":{},"components/Multiselect.html":{},"additional-documentation/is-alert.html":{},"additional-documentation/is-badge.html":{},"additional-documentation/is-multiselect.html":{}}}],["type",{"_index":36,"title":{},"body":{"components/Alert.html":{},"components/Badge.html":{},"interfaces/ILabelTo.html":{},"interfaces/ISelectItem.html":{},"components/Multiselect.html":{},"coverage.html":{},"additional-documentation/is-alert.html":{},"additional-documentation/is-badge.html":{},"additional-documentation/is-multiselect.html":{}}}],["u2713",{"_index":182,"title":{},"body":{"components/Multiselect.html":{},"additional-documentation/is-multiselect.html":{}}}],["ud83d\\uddd9",{"_index":52,"title":{},"body":{"components/Alert.html":{},"additional-documentation/is-alert.html":{}}}],["undefined",{"_index":441,"title":{},"body":{"additional-documentation/is-alert.html":{},"additional-documentation/is-badge.html":{},"additional-documentation/is-multiselect.html":{}}}],["unpkg",{"_index":325,"title":{},"body":{"index.html":{}}}],["updateitems",{"_index":253,"title":{},"body":{"components/Multiselect.html":{}}}],["updateplaceholder",{"_index":243,"title":{},"body":{"components/Multiselect.html":{}}}],["use",{"_index":334,"title":{},"body":{"index.html":{},"license.html":{}}}],["used",{"_index":460,"title":{},"body":{"additional-documentation/is-badge.html":{}}}],["user",{"_index":176,"title":{},"body":{"components/Multiselect.html":{},"additional-documentation/is-multiselect.html":{}}}],["using",{"_index":322,"title":{},"body":{"index.html":{}}}],["value",{"_index":39,"title":{},"body":{"components/Alert.html":{},"components/Badge.html":{},"components/Multiselect.html":{}}}],["var",{"_index":104,"title":{},"body":{"components/Alert.html":{},"components/Badge.html":{},"components/Multiselect.html":{},"index.html":{}}}],["void",{"_index":33,"title":{},"body":{"components/Alert.html":{},"components/Multiselect.html":{}}}],["warning",{"_index":62,"title":{},"body":{"components/Alert.html":{},"components/Badge.html":{},"additional-documentation/is-alert.html":{},"additional-documentation/is-badge.html":{}}}],["warranties",{"_index":411,"title":{},"body":{"license.html":{}}}],["warranty",{"_index":406,"title":{},"body":{"license.html":{}}}],["watch",{"_index":212,"title":{},"body":{"components/Multiselect.html":{}}}],["watch('items",{"_index":169,"title":{},"body":{"components/Multiselect.html":{}}}],["watch('selected",{"_index":173,"title":{},"body":{"components/Multiselect.html":{}}}],["web",{"_index":309,"title":{},"body":{"index.html":{}}}],["weight",{"_index":452,"title":{},"body":{"additional-documentation/is-alert.html":{},"additional-documentation/is-badge.html":{}}}],["whether",{"_index":423,"title":{},"body":{"license.html":{}}}],["white",{"_index":65,"title":{},"body":{"components/Alert.html":{},"components/Badge.html":{},"additional-documentation/is-alert.html":{},"additional-documentation/is-badge.html":{}}}],["width:4px",{"_index":464,"title":{},"body":{"additional-documentation/is-badge.html":{},"additional-documentation/is-multiselect.html":{}}}],["window.clearinterval(this.countdowntimerid",{"_index":102,"title":{},"body":{"components/Alert.html":{}}}],["window.settimeout",{"_index":97,"title":{},"body":{"components/Alert.html":{}}}],["within",{"_index":191,"title":{},"body":{"components/Multiselect.html":{},"additional-documentation/is-multiselect.html":{}}}],["without",{"_index":380,"title":{},"body":{"license.html":{}}}],["zindex",{"_index":268,"title":{},"body":{"components/Multiselect.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"components/Alert.html":{"url":"components/Alert.html","title":"component - Alert","body":"\n                   \n\n\n\n\n\n  Components\n  Alert\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n    File\n\n\n    src/components/alert/alert.tsx\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n            \n                tag\n                is-alert\n            \n\n            \n                styleUrl\n                alert.scss\n            \n\n\n            \n                scoped\n                true\n            \n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                autoClose\n                            \n                            \n                                closeable\n                            \n                            \n                                closeSecs\n                            \n                            \n                                    Optional\n                                closeText\n                            \n                            \n                                    Optional\n                                color\n                            \n                            \n                                countDownTimerId\n                            \n                            \n                                el\n                            \n                            \n                                onClose\n                            \n                            \n                                    Optional\n                                rounded\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                componentDidLoad\n                            \n                            \n                                componentDidUnload\n                            \n                            \n                                render\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            componentDidLoad\n                        \n                        \n                    \n                \n            \n            \n                \ncomponentDidLoad()\n                \n            \n\n\n            \n                \n                    Defined in src/components/alert/alert.tsx:60\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            componentDidUnload\n                        \n                        \n                    \n                \n            \n            \n                \ncomponentDidUnload()\n                \n            \n\n\n            \n                \n                    Defined in src/components/alert/alert.tsx:68\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            render\n                        \n                        \n                    \n                \n            \n            \n                \nrender()\n                \n            \n\n\n            \n                \n                    Defined in src/components/alert/alert.tsx:74\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            autoClose\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : true\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Prop()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/components/alert/alert.tsx:17\n                            \n                        \n\n                \n                    \n                        If true alert will close automatically.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            closeable\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : true\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Prop()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/components/alert/alert.tsx:27\n                            \n                        \n\n                \n                    \n                        If closable or not.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            closeSecs\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 3\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Prop()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/components/alert/alert.tsx:22\n                            \n                        \n\n                \n                    \n                        Number of seconds to close alert automatically if autoClose true.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            closeText\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : '\\uD83D\\uDDD9'\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Prop()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/components/alert/alert.tsx:32\n                            \n                        \n\n                \n                    \n                        Customized close button text.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            color\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Prop()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/components/alert/alert.tsx:12\n                            \n                        \n\n                \n                    \n                        The color options are: \"primary\", \"secondary\", \"success\", \"warning\", \"error\", \"light\", \"info\", \"white\", \"black\", and \"dark\".\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            countDownTimerId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     null\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @State()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/components/alert/alert.tsx:39\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            el\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     HTMLElement\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Element()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/components/alert/alert.tsx:41\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            onClose\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         EventEmitter\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Event()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/components/alert/alert.tsx:51\n                            \n                        \n\n                \n                    \n                        Emitted when the alert is closed.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            rounded\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Prop()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/components/alert/alert.tsx:37\n                            \n                        \n\n                \n                    \n                        If true, make the alert rounded.\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, Host, Prop, State, Event, EventEmitter, Element, h } from '@stencil/core';\n\n@Component({\n  tag: 'is-alert',\n  styleUrl: 'alert.scss',\n  scoped: true\n})\nexport class Alert {\n  /**\n     * The color options are: `\"primary\"`, `\"secondary\"`, `\"success\"`, `\"warning\"`, `\"error\"`, `\"light\"`, `\"info\"`, `\"white\"`, `\"black\"`, and `\"dark\"`.\n     */\n  @Prop() color?: string;\n\n  /**\n   * If `true` alert will close automatically.\n   */\n  @Prop() autoClose: boolean = true;\n\n  /**\n   * Number of seconds to close alert automatically if autoClose `true`.\n   */\n  @Prop() closeSecs: number = 3;\n\n  /**\n   * If closable or not.\n   */\n  @Prop() closeable: boolean = true;\n\n  /**\n   * Customized close button text.\n   */\n  @Prop() closeText?: string = '\\uD83D\\uDDD9';\n\n  /**\n   * If `true`, make the alert rounded.\n   */\n  @Prop() rounded?: boolean = false;\n\n  @State() countDownTimerId = null;\n\n  @Element() el: HTMLElement;\n\n  private close = () => {\n    this.onClose.emit(true);\n    this.el.remove()\n  }\n\n  /**\n   * Emitted when the alert is closed.\n   */\n  @Event() onClose: EventEmitter;\n\n  private renderCloseText = () => {\n    if (this.closeable) {\n      return  this.close()}>{this.closeText}\n    }\n    return null;\n  };\n\n  componentDidLoad() {\n    if (this.el.attributes['auto-close']) {\n      this.countDownTimerId = window.setTimeout(() => {\n        this.close()\n      }, this.closeSecs * 1000)\n    }\n  }\n\n  componentDidUnload() {\n    if (this.autoClose) {\n      window.clearInterval(this.countDownTimerId);\n    }\n  }\n\n  render() {\n    return (\n      \n        \n          \n        \n        {this.renderCloseText()}\n      \n    );\n  }\n}\n\n    \n\n\n\n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'Alert', 'selector': ''},{'name': 'Badge', 'selector': ''},{'name': 'Multiselect', 'selector': ''}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'Alert'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/Badge.html":{"url":"components/Badge.html","title":"component - Badge","body":"\n                   \n\n\n\n\n\n  Components\n  Badge\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n    File\n\n\n    src/components/badge/badge.tsx\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n            \n                tag\n                is-badge\n            \n\n            \n                styleUrl\n                badge.scss\n            \n\n\n            \n                scoped\n                true\n            \n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                color\n                            \n                            \n                                    Optional\n                                rounded\n                            \n                            \n                                text\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                render\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            render\n                        \n                        \n                    \n                \n            \n            \n                \nrender()\n                \n            \n\n\n            \n                \n                    Defined in src/components/badge/badge.tsx:24\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            color\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Prop()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/components/badge/badge.tsx:12\n                            \n                        \n\n                \n                    \n                        The color options are: \"primary\", \"secondary\", \"success\", \"warning\", \"error\", \"light\", \"info\", \"white\", \"black\", and \"dark\".\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            rounded\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Prop()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/components/badge/badge.tsx:22\n                            \n                        \n\n                \n                    \n                        If true, make the badge rounded.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            text\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Prop()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/components/badge/badge.tsx:17\n                            \n                        \n\n                \n                    \n                        The text to display in the badge.\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, Host, Prop, h } from '@stencil/core';\n\n@Component({\n  tag: 'is-badge',\n  styleUrl: 'badge.scss',\n  scoped: true\n})\nexport class Badge {\n  /**\n     * The color options are: `\"primary\"`, `\"secondary\"`, `\"success\"`, `\"warning\"`, `\"error\"`, `\"light\"`, `\"info\"`, `\"white\"`, `\"black\"`, and `\"dark\"`.\n     */\n  @Prop() color?: string;\n\n  /**\n   * The text to display in the badge.\n   */\n  @Prop() text: string;\n\n  /**\n   * If `true`, make the badge rounded.\n   */\n  @Prop() rounded?: boolean = false;\n\n  render() {\n    return (\n      \n        {this.text}\n      \n    );\n  }\n}\n\n    \n\n\n\n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'Alert', 'selector': ''},{'name': 'Badge', 'selector': ''},{'name': 'Multiselect', 'selector': ''}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'Badge'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ILabelTo.html":{"url":"interfaces/ILabelTo.html","title":"interface - ILabelTo","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ILabelTo\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/components/multiselect/multiselect.interface.tsx\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        remove\n                                \n                                \n                                        select\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        remove\n                                    \n                                \n                                \n                                    \n                                        remove:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        select\n                                    \n                                \n                                \n                                    \n                                        select:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        interface ISelectItem {\n  id: number;\n  name: string;\n}\n\ninterface ILabelTo {\n  remove: string;\n  select: string;\n}\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ISelectItem.html":{"url":"interfaces/ISelectItem.html","title":"interface - ISelectItem","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ISelectItem\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/components/multiselect/multiselect.interface.tsx\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        id\n                                \n                                \n                                        name\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        interface ISelectItem {\n  id: number;\n  name: string;\n}\n\ninterface ILabelTo {\n  remove: string;\n  select: string;\n}\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/Multiselect.html":{"url":"components/Multiselect.html","title":"component - Multiselect","body":"\n                   \n\n\n\n\n\n  Components\n  Multiselect\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n    File\n\n\n    src/components/multiselect/multiselect.tsx\n\n\n\n\n    \n        Implements\n    \n    \n                ComponentInterface\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n            \n                tag\n                is-multiselect\n            \n\n            \n                styleUrl\n                multiselect.scss\n            \n\n\n            \n                scoped\n                true\n            \n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                disabled\n                            \n                            \n                                isExpanded\n                            \n                            \n                                items\n                            \n                            \n                                keyword\n                            \n                            \n                                labelSelected\n                            \n                            \n                                labelTo\n                            \n                            \n                                limit\n                            \n                            \n                                limitText\n                            \n                            \n                                max\n                            \n                            \n                                onSelected\n                            \n                            \n                                placeholder\n                            \n                            \n                                selected\n                            \n                            \n                                showSelectedBadge\n                            \n                            \n                                tags\n                            \n                            \n                                textSelected\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                componentWillLoad\n                            \n                            \n                                getSelected\n                            \n                            \n                                handleClick\n                            \n                            \n                                render\n                            \n                            \n                                setItems\n                            \n                            \n                                setSelected\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            componentWillLoad\n                        \n                        \n                    \n                \n            \n            \n                \ncomponentWillLoad()\n                \n            \n\n\n            \n                \n                    Defined in src/components/multiselect/multiselect.tsx:204\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getSelected\n                        \n                        \n                    \n                \n            \n            \n                \ngetSelected()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Method()\n                \n            \n\n            \n                \n                    Defined in src/components/multiselect/multiselect.tsx:84\n                \n            \n\n\n            \n                \n                    Get the selected items.\n\n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            handleClick\n                        \n                        \n                    \n                \n            \n            \n                \nhandleClick(event: MouseEvent)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Listen('click', {target: 'document'})\n                \n            \n\n            \n                \n                    Defined in src/components/multiselect/multiselect.tsx:111\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                            MouseEvent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            render\n                        \n                        \n                    \n                \n            \n            \n                \nrender()\n                \n            \n\n\n            \n                \n                    Defined in src/components/multiselect/multiselect.tsx:214\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setItems\n                        \n                        \n                    \n                \n            \n            \n                \nsetItems(newValue: ISelectItem[], oldValue: ISelectItem[])\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Watch('items')\n                \n            \n\n            \n                \n                    Defined in src/components/multiselect/multiselect.tsx:94\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    newValue\n                                    \n                                                ISelectItem[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    oldValue\n                                    \n                                                ISelectItem[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setSelected\n                        \n                        \n                    \n                \n            \n            \n                \nsetSelected(newValue: ISelectItem[], oldValue: ISelectItem[])\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Watch('selected')\n                \n            \n\n            \n                \n                    Defined in src/components/multiselect/multiselect.tsx:104\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    newValue\n                                    \n                                                ISelectItem[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    oldValue\n                                    \n                                                ISelectItem[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            disabled\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Prop()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/components/multiselect/multiselect.tsx:25\n                            \n                        \n\n                \n                    \n                        If true, the user cannot interact with the select.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isExpanded\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @State()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/components/multiselect/multiselect.tsx:75\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            items\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ISelectItem[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Prop()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/components/multiselect/multiselect.tsx:35\n                            \n                        \n\n                \n                    \n                        The options list items.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            keyword\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : ''\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @State()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/components/multiselect/multiselect.tsx:76\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            labelSelected\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : '\\u2713'\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Prop()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/components/multiselect/multiselect.tsx:63\n                            \n                        \n\n                \n                    \n                        The label when option is selected.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            labelTo\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ILabelTo\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    remove: 'Click to Remove',\n    select: 'Click to Select'\n  }\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Prop()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/components/multiselect/multiselect.tsx:45\n                            \n                        \n\n                \n                    \n                        The label to remove or select.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            limit\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 3\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Prop()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/components/multiselect/multiselect.tsx:53\n                            \n                        \n\n                \n                    \n                        Limit the display of selected options. The rest will be hidden within the limitText string.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            limitText\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Function\n\n                        \n                    \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Prop()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/components/multiselect/multiselect.tsx:58\n                            \n                        \n\n                \n                    \n                        Function that process the message shown when selected elements pass the defined limit.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            max\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Prop()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/components/multiselect/multiselect.tsx:73\n                            \n                        \n\n                \n                    \n                        Maximum selected items can be selected.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            onSelected\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         EventEmitter\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Event()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/components/multiselect/multiselect.tsx:91\n                            \n                        \n\n                \n                    \n                        Emitted when the selected items has changed.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            placeholder\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : \"Pick some\"\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Prop()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/components/multiselect/multiselect.tsx:30\n                            \n                        \n\n                \n                    \n                        The text to display when not selected items.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            selected\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ISelectItem[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Prop()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/components/multiselect/multiselect.tsx:40\n                            \n                        \n\n                \n                    \n                        The selected items.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            showSelectedBadge\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Prop()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/components/multiselect/multiselect.tsx:68\n                            \n                        \n\n                \n                    \n                        If true, The badges will show selected items.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            tags\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     null\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @State()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/components/multiselect/multiselect.tsx:78\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            textSelected\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : this.placeholder\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @State()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/components/multiselect/multiselect.tsx:77\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import {\n  Component,\n  ComponentInterface,\n  Host,\n  Prop,\n  State,\n  Method,\n  Watch,\n  Listen,\n  Event,\n  EventEmitter,\n  h\n} from '@stencil/core';\n\n@Component({\n  tag: 'is-multiselect',\n  styleUrl: 'multiselect.scss',\n  scoped: true\n})\nexport class Multiselect implements ComponentInterface {\n\n  /**\n   * If `true`, the user cannot interact with the select.\n   */\n  @Prop() disabled = false;\n\n  /**\n   * The text to display when not selected items.\n   */\n  @Prop() placeholder: string = \"Pick some\";\n\n  /**\n   * The options list items.\n   */\n  @Prop() items: ISelectItem[] = [];\n\n  /**\n   * The selected items.\n   */\n  @Prop() selected: ISelectItem[] = [];\n\n  /**\n   * The label to remove or select.\n   */\n  @Prop() labelTo: ILabelTo = {\n    remove: 'Click to Remove',\n    select: 'Click to Select'\n  };\n\n  /**\n   * Limit the display of selected options. The rest will be hidden within the limitText string.\n   */\n  @Prop() limit: number = 3;\n\n  /**\n   * Function that process the message shown when selected elements pass the defined limit.\n   */\n  @Prop() limitText: Function = (count: number) => 'and ' + count + ' more';\n\n  /**\n   * The label when option is selected.\n   */\n  @Prop() labelSelected: string = '\\u2713';\n\n  /**\n   * If `true`, The badges will show selected items.\n   */\n  @Prop() showSelectedBadge: boolean = false;\n\n  /**\n   * Maximum selected items can be selected.\n   */\n  @Prop() max: number;\n\n  @State() isExpanded: boolean = false;\n  @State() keyword: string = '';\n  @State() textSelected: string = this.placeholder;\n  @State() tags = null;\n\n  /**\n   * Get the selected items.\n   */\n  @Method()\n  getSelected(): Promise {\n    return Promise.resolve(this.selected);\n  }\n\n  /**\n   * Emitted when the selected items has changed.\n   */\n  @Event() onSelected: EventEmitter;\n\n  @Watch('items')\n  setItems(newValue: ISelectItem[], oldValue: ISelectItem[]) {\n    if (newValue !== oldValue) {\n      this.items = newValue;\n      this.textSelected = this.placeholder;\n      this.selected = [];\n      this.onFilteredItems();\n    }\n  }\n\n  @Watch('selected')\n  setSelected(newValue: ISelectItem[], oldValue: ISelectItem[]) {\n    if (newValue !== oldValue) {\n      this.updatePlaceholder();\n    }\n  }\n\n  @Listen('click', {target: 'document'})\n  handleClick(event: MouseEvent) {\n    const isClickInside = this.multiselect.contains(event.target);\n\n    if (!isClickInside) {\n      this.toggle(false, true);\n    }\n  }\n\n  private textInput?: HTMLInputElement;\n  private multiselect?: any;\n  private filteredItems: ISelectItem[] = this.items;\n\n  private renderSelectedItems = () => {\n    let selected = [];\n    if (this.selected) {\n      this.selected.map((item, i) => {\n        if (i \n              \n               this.updateItems(item)}>x\n            \n          );\n        } else {\n          const count = this.selected.length - this.limit;\n          selected[this.limit + 1] = {this.limitText(count)}\n        }\n      });\n    }\n    return selected;\n  };\n\n  private toggle = (state: boolean, outside?: boolean) => {\n    this.isExpanded = state;\n    this.updatePlaceholder();\n    if (!outside) {\n      if (this.isExpanded) {\n        setTimeout(() => {\n          this.textInput.focus();\n        }, 200);\n      }\n    }\n  };\n\n  private updatePlaceholder() {\n    this.textSelected = this.placeholder;\n    if (this.selected && this.selected.length > 0 && !this.isExpanded) {\n      this.textSelected = this.selected.length + ' options selected';\n    }\n    if (this.showSelectedBadge) {\n      this.tags = this.renderSelectedItems();\n    }\n    if (this.isExpanded) {\n      this.textSelected = '';\n    }\n  }\n\n  private isSelected = (item: ISelectItem) => {\n    if (this.selected) {\n      return this.selected.some(obj => obj.id === item.id)\n    }\n    return false;\n  };\n\n  private updateItems = (item: ISelectItem) => {\n    if (this.isSelected(item)) {\n      this.selected = this.selected.filter(obj => {\n        return obj.id !== item.id;\n      });\n    } else {\n      if (this.selected.length !== this.max) {\n        if (this.selected && this.selected.length > 0) {\n          this.selected = [...this.selected, item];\n        } else {\n          this.selected = [item];\n        }\n      }\n    }\n    this.onSelected.emit(this.selected);\n  };\n\n  private onFilteredItems = () => {\n    const element = this.textInput;\n    if (element) {\n      this.keyword = element.value;\n      this.filteredItems = this.items.filter(obj => {\n        return obj['name'].toLowerCase().includes(this.keyword.toLowerCase());\n      });\n    } else {\n      this.filteredItems = this.items;\n    }\n  };\n\n  componentWillLoad() {\n    this.textSelected = this.placeholder;\n    if (this.selected.length > 0 && !this.isExpanded) {\n      this.textSelected = this.selected.length + ' options selected';\n    }\n    if (this.showSelectedBadge) {\n      this.tags = this.renderSelectedItems();\n    }\n  }\n\n  render() {\n    return (\n       this.multiselect = el}>\n        \n\n           this.toggle(true)} style={{\n            zIndex: this.isExpanded ? '-1' : '0'\n          }}>\n          \n\n          \n            {this.showSelectedBadge && this.selected && this.selected.length > 0 ? this.tags : this.textSelected}\n          \n\n          {this.isExpanded &&\n          \n               this.onFilteredItems()}\n                  ref={el => this.textInput = el}\n                  placeholder={this.placeholder}\n              />\n          \n          }\n           this.toggle(!this.isExpanded)}>&nbsp;\n        \n        {\n          this.isExpanded &&\n          \n              \n                {\n                  this.filteredItems.length > 0 ? this.filteredItems.map((item: ISelectItem, i) => {\n                    return (\n                       this.updateItems(item)}\n                          label-selected={this.isSelected(item) ? this.labelSelected : null}\n                          label-to-remove={this.isSelected(item) ? this.labelTo.remove : null}\n                          label-to-select={!this.isSelected(item) ? this.labelTo.select : null}\n                      >{item.name}\n                    )\n                  }) : Not found\n                }\n              \n          \n        }\n      \n    );\n  }\n}\n\n    \n\n\n\n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'Alert', 'selector': ''},{'name': 'Badge', 'selector': ''},{'name': 'Multiselect', 'selector': ''}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'Multiselect'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/components/alert/alert.tsx\n            \n            component\n            Alert\n            \n                53 %\n                (7/13)\n            \n        \n        \n            \n                \n                src/components/badge/badge.tsx\n            \n            component\n            Badge\n            \n                60 %\n                (3/5)\n            \n        \n        \n            \n                \n                src/components/multiselect/multiselect.interface.tsx\n            \n            interface\n            ILabelTo\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/components/multiselect/multiselect.interface.tsx\n            \n            interface\n            ISelectItem\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/components/multiselect/multiselect.tsx\n            \n            component\n            Multiselect\n            \n                54 %\n                (12/22)\n            \n        \n        \n            \n                \n                src/utils/utils.ts\n            \n            function\n            format\n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            format   (src/.../utils.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/utils/utils.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            format\n                        \n                        \n                    \n                \n            \n            \n                \nformat(first, middle, last)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    first\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    middle\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    last\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nIs-Web-Component\n  \n    \nOpen source web components for building web applications. Build on top StencilJS.\nDemo\nhttps://is-web-component.isnur.com/\nDocumentation\nhttps://is-web-component.isnur.com/docs/\nInstallation\nYou can install using NPM:\nnpm i is-web-component --saveYou can install using unpkg cdn:\nhttps://unpkg.com/is-web-componentUsage\nScript tag\n\nPut a script tag similar to this\n  in the head of your index.html\n\nThen you can use the element anywhere in your template, JSX, html etc.\n  is-badge\n  \n\n  is-multiselect\n  \n\n  \n    var select = document.getElementById(\"select\");\n    var data = [{\n      id: 1,\n      name: 'Data 1'\n    }, {\n      id: 2,\n      name: 'Data 2'\n    }, {\n      id: 3,\n      name: 'Data 3'\n    }];\n    select.items = data;\n  \n\nContributing\n\nFork it!\nCreate your feature branch: git checkout -b my-new-feature\nCommit your changes: git commit -am 'Add some feature'\nPush to the branch: git push origin my-new-feature\nSubmit a pull request\n\nComponents\n\n is-alert\n is-badge\n is-modal\n is-multiselect\n is-pagination\n is-table\n is-tabs\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"license.html":{"url":"license.html","title":"getting-started - license","body":"\n                   \n\nMIT License\nCopyright (c) 2018\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n\n\n    \n        \n            \n                \n                    \n                    3 Components\n                \n            \n        \n        \n            \n                \n                    \n                    2 Interfaces\n                \n            \n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/is-alert.html":{"url":"additional-documentation/is-alert.html","title":"additional-page - is-alert","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\nis-alert\n\n\n\nProperties\n\n\n\nProperty\nAttribute\nDescription\nType\nDefault\n\n\n\n\nautoClose\nauto-close\nIf true alert will close automatically.\nboolean\ntrue\n\n\ncloseSecs\nclose-secs\nNumber of seconds to close alert automatically if autoClose true.\nnumber\n3\n\n\ncloseText\nclose-text\nCustomized close button text.\nstring\n'\\uD83D\\uDDD9'\n\n\ncloseable\ncloseable\nIf closable or not.\nboolean\ntrue\n\n\ncolor\ncolor\nThe color options are: \"primary\", \"secondary\", \"success\", \"warning\", \"error\", \"light\", \"info\", \"white\", \"black\", and \"dark\".\nstring\nundefined\n\n\nrounded\nrounded\nIf true, make the alert rounded.\nboolean\nfalse\n\n\n\nEvents\n\n\n\nEvent\nDescription\nType\n\n\n\n\nonClose\nEmitted when the alert is closed.\nCustomEvent\n\n\n\nCSS Custom Properties\n\n\n\nName\nDescription\n\n\n\n\n--background-color\nBackground color of the alert\n\n\n--border-radius\nBorder radius of the badge if is rounded\n\n\n--color\nText color of the alert\n\n\n--font-family\nFont family of the alert text\n\n\n--font-size\nFont size of the alert text\n\n\n--font-weight\nFont weight of the alert text\n\n\n--padding-bottom\nPadding bottom of the alert\n\n\n--padding-left\nPadding left of the alert\n\n\n--padding-right\nPadding right of the alert\n\n\n--padding-top\nPadding top of the alert\n\n\n\n\nBuilt with StencilJS\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/is-badge.html":{"url":"additional-documentation/is-badge.html","title":"additional-page - is-badge","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\nis-badge\n\n\n\nProperties\n\n\n\nProperty\nAttribute\nDescription\nType\nDefault\n\n\n\n\ncolor\ncolor\nThe color options are: \"primary\", \"secondary\", \"success\", \"warning\", \"error\", \"light\", \"info\", \"white\", \"black\", and \"dark\".\nstring\nundefined\n\n\nrounded\nrounded\nIf true, make the badge rounded.\nboolean\nfalse\n\n\ntext\ntext\nThe text to display in the badge.\nstring\nundefined\n\n\n\nCSS Custom Properties\n\n\n\nName\nDescription\n\n\n\n\n--background-color\nBackground color of the badge\n\n\n--border-radius\nBorder radius of the badge if is rounded\n\n\n--color\nText color of the badge\n\n\n--font-family\nFont family of the badge text\n\n\n--font-size\nFont size of the badge text\n\n\n--font-weight\nFont weight of the badge text\n\n\n--height\nHeight of the badge\n\n\n--padding-bottom\nPadding bottom of the badge\n\n\n--padding-left\nPadding left of the badge\n\n\n--padding-right\nPadding right of the badge\n\n\n--padding-top\nPadding top of the badge\n\n\n\nDependencies\nUsed by\n\nis-multiselect\n\nGraph\ngraph TD;\n  is-multiselect --> is-badge\n  style is-badge fill:#f9f,stroke:#333,stroke-width:4px\nBuilt with StencilJS\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/is-multiselect.html":{"url":"additional-documentation/is-multiselect.html","title":"additional-page - is-multiselect","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\nis-multiselect\n\n\n\nProperties\n\n\n\nProperty\nAttribute\nDescription\nType\nDefault\n\n\n\n\ndisabled\ndisabled\nIf true, the user cannot interact with the select.\nboolean\nfalse\n\n\nitems\n--\nThe options list items.\nISelectItem[]\n[]\n\n\nlabelSelected\nlabel-selected\nThe label when option is selected.\nstring\n'\\u2713'\n\n\nlabelTo\n--\nThe label to remove or select.\nILabelTo\n{     remove: 'Click to Remove',     select: 'Click to Select'   }\n\n\nlimit\nlimit\nLimit the display of selected options. The rest will be hidden within the limitText string.\nnumber\n3\n\n\nlimitText\n--\nFunction that process the message shown when selected elements pass the defined limit.\nFunction\n(count: number) => 'and ' + count + ' more'\n\n\nmax\nmax\nMaximum selected items can be selected.\nnumber\nundefined\n\n\nplaceholder\nplaceholder\nThe text to display when not selected items.\nstring\n\"Pick some\"\n\n\nselected\n--\nThe selected items.\nISelectItem[]\n[]\n\n\nshowSelectedBadge\nshow-selected-badge\nIf true, The badges will show selected items.\nboolean\nfalse\n\n\n\nEvents\n\n\n\nEvent\nDescription\nType\n\n\n\n\nonSelected\nEmitted when the selected items has changed.\nCustomEvent\n\n\n\nMethods\ngetSelected() => Promise\nGet the selected items.\nReturns\nType: Promise\nDependencies\nDepends on\n\nis-badge\n\nGraph\ngraph TD;\n  is-multiselect --> is-badge\n  style is-multiselect fill:#f9f,stroke:#333,stroke-width:4px\nBuilt with StencilJS\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
