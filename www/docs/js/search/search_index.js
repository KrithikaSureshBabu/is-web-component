var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.7","fields":["title","body"],"fieldVectors":[["title/components/Alert.html",[0,0.641,1,0.749]],["body/components/Alert.html",[0,0.561,1,1.282,2,0.88,3,0.693,4,0.485,5,0.485,6,1.223,7,0.868,8,1.173,9,1.363,10,2.403,11,1.601,12,1.933,13,0.418,14,0.475,15,2.917,16,2.37,17,2.917,18,2.37,19,2.198,20,2.37,21,2.071,22,2.966,23,2.37,24,2.071,25,1.173,26,2.684,27,3.36,28,1.906,29,2.234,30,1.531,31,1.253,32,0.057,33,1.601,34,1.531,35,1.531,36,0.712,37,1.419,38,1.228,39,2.198,40,2.448,41,2.632,42,1.531,43,2.381,44,2.684,45,1.531,46,1.919,47,2.37,48,1.448,49,1.531,50,1.363,51,1.42,52,1.015,53,1.531,54,1.919,55,0.785,56,1.919,57,1.531,58,1.919,59,1.919,60,0.761,61,1.531,62,0.761,63,1.363,64,1.363,65,1.363,66,1.363,67,1.363,68,1.363,69,1.363,70,1.363,71,1.363,72,2.684,73,1.976,74,1.531,75,2.403,76,1.976,77,1.531,78,0.88,79,1.531,80,1.173,81,0.868,82,0.868,83,0.868,84,0.868,85,0.747,86,0.868,87,1.919,88,1.531,89,1.531,90,1.531,91,1.531,92,1.683,93,1.531,94,1.531,95,1.531,96,1.531,97,1.531,98,1.531,99,1.531,100,1.531,101,1.531,102,1.531,103,1.641,104,0.868,105,0.853,106,1.906,107,0.303,108,0.647,109,0.358,110,0.868,111,0.868,112,0.016,113,0.025,114,0.016]],["title/components/Badge.html",[0,0.641,107,0.542]],["body/components/Badge.html",[0,0.774,1,0.643,2,1.214,3,0.896,4,0.747,5,0.747,7,1.337,8,1.619,9,1.881,11,2.209,12,1.758,13,0.643,14,0.656,19,2.36,21,2.487,24,2.487,25,1.619,28,2.36,29,2.032,31,0.996,32,0.057,36,0.632,37,1.214,38,0.747,39,1.337,40,2.175,41,2.65,55,0.972,60,1.389,62,1.05,63,1.881,64,1.881,65,1.881,66,1.881,67,1.881,68,1.881,69,1.881,70,1.881,71,1.881,78,1.214,80,1.619,81,1.337,82,1.337,83,1.337,84,1.337,85,1.151,86,1.337,92,1.337,103,2.032,104,1.337,105,1.024,106,2.36,107,0.972,108,0.996,109,0.551,110,1.337,111,1.337,112,0.025,113,0.035,114,0.025,115,1.883,116,3.315,117,2.357,118,2.357,119,2.357,120,2.357,121,1.881,122,2.357]],["title/components/HomeAbout.html",[0,0.641,108,1.159]],["body/components/HomeAbout.html",[0,0.726,1,0.587,2,1.137,3,0.502,4,0.681,5,0.681,7,1.22,8,1.517,9,1.762,13,0.587,14,0.614,25,1.517,26,3.189,28,2.265,29,2.154,31,1.687,32,0.057,33,2.07,36,0.512,37,1.137,38,0.681,39,1.22,40,1.762,41,2.068,43,1.762,60,0.984,62,0.984,73,2.429,78,0.788,81,1.762,82,1.22,83,1.22,84,1.22,85,1.05,86,1.22,92,2.265,103,1.949,104,1.22,105,0.989,106,2.265,107,0.425,108,1.687,109,0.502,110,1.22,111,1.22,112,0.023,113,0.033,114,0.023,123,1.718,124,2.07,125,3.106,126,3.645,127,2.912,128,3.992,129,2.939,130,2.151,131,2.151,132,2.151,133,4.412,134,2.429,135,3.645,136,2.265,137,2.151,138,2.151,139,1.78,140,2.07,141,2.07,142,2.07,143,2.07,144,2.07,145,2.151,146,2.481,147,2.151,148,3.992,149,3.106,150,2.151,151,2.151,152,2.151]],["title/interfaces/ILabelTo.html",[153,1.004,154,1.159]],["body/interfaces/ILabelTo.html",[3,0.835,4,1.133,5,1.133,13,0.976,14,0.862,32,0.055,36,0.719,51,1.511,55,1.208,105,0.835,112,0.038,113,0.046,114,0.038,153,1.597,154,1.842,155,2.029,156,2.383,157,2.779,158,2.392,159,1.511,160,2.383]],["title/interfaces/ISelectItem.html",[153,1.004,159,1.159]],["body/interfaces/ISelectItem.html",[3,0.835,4,1.133,5,1.133,13,0.976,14,0.862,32,0.055,36,0.719,51,1.988,55,1.173,105,1.144,112,0.038,113,0.046,114,0.038,153,1.597,154,1.511,155,2.029,156,2.383,157,2.029,158,1.746,159,1.842,160,3.263]],["title/interfaces/IToggleOptions.html",[139,1.339,153,1.004]],["body/interfaces/IToggleOptions.html",[3,0.803,4,1.089,5,1.089,13,0.938,14,0.841,32,0.054,36,0.797,55,1.24,85,1.678,112,0.036,113,0.045,114,0.036,139,2.077,140,3.218,142,3.218,143,3.218,144,3.218,153,1.258,155,1.949,161,2.745]],["title/components/Multiselect.html",[0,0.641,109,0.641]],["body/components/Multiselect.html",[0,0.327,1,0.219,2,0.513,3,0.187,4,0.254,5,0.254,7,0.455,8,0.684,9,0.795,11,0.934,12,1.274,13,0.219,14,0.277,19,1.06,23,1.12,25,0.684,28,1.271,29,2.165,31,1.183,32,0.058,33,1.493,36,0.682,37,1.025,38,1.213,39,2.172,40,2.411,41,2.467,47,1.492,48,1.094,50,0.795,51,1.076,52,0.592,55,0.817,60,0.444,62,0.887,72,2.237,73,2.412,76,0.934,78,1.104,81,0.455,82,0.455,83,0.455,84,0.455,85,0.391,86,0.455,87,2.683,92,1.815,103,1.094,104,0.455,105,0.747,106,1.271,107,0.158,108,0.339,109,0.704,110,0.455,111,0.455,112,0.008,113,0.015,114,0.008,121,1.271,129,0.534,154,0.592,157,1.588,158,1.562,159,1.817,162,0.64,163,1.402,164,1.868,165,1.402,166,1.492,167,1.868,168,3.302,169,1.868,170,1.492,171,1.492,172,2.408,173,2.034,174,1.492,175,1.492,176,3.654,177,1.492,178,1.492,179,1.868,180,1.868,181,2.241,182,1.79,183,1.402,184,1.402,185,1.402,186,0.801,187,1.868,188,0.801,189,1.12,190,1.402,191,1.868,192,1.402,193,1.402,194,1.402,195,0.801,196,1.492,197,0.801,198,1.402,199,3.199,200,1.402,201,0.801,202,2.546,203,1.402,204,1.402,205,0.801,206,0.801,207,1.12,208,1.12,209,0.801,210,0.801,211,1.12,212,0.801,213,1.12,214,0.801,215,2.408,216,1.12,217,1.79,218,0.801,219,0.801,220,1.12,221,1.12,222,1.12,223,1.493,224,0.801,225,1.12,226,1.12,227,1.12,228,1.12,229,1.12,230,0.801,231,1.12,232,1.12,233,0.801,234,0.801,235,0.801,236,1.12,237,0.801,238,1.12,239,1.12,240,0.801,241,2.546,242,0.801,243,0.801,244,0.801,245,1.492,246,0.64,247,0.801,248,1.868,249,3.015,250,3.498,251,1.402,252,1.402,253,1.868,254,1.402,255,0.801,256,0.801,257,0.801,258,0.801,259,0.801,260,0.801,261,0.801,262,0.801,263,3.199,264,0.801,265,0.801,266,1.12,267,0.801,268,1.402,269,3.199,270,0.801,271,0.801,272,0.801,273,0.801,274,2.237,275,1.868,276,1.868,277,1.402,278,0.801,279,2.241,280,0.801,281,1.402,282,1.402,283,0.801,284,0.801,285,0.801,286,0.801,287,0.801,288,0.801,289,1.402,290,0.801,291,0.801,292,1.402,293,0.801,294,0.801,295,0.801,296,0.801,297,0.534,298,0.801,299,0.801,300,0.801,301,0.801,302,0.801,303,0.801,304,0.801,305,0.801,306,0.801,307,0.801,308,0.801,309,0.801,310,0.801,311,0.801,312,0.801]],["title/contributing.html",[313,1.548,314,1.548,315,1.548]],["body/contributing.html",[2,1.422,32,0.045,80,1.454,112,0.031,113,0.041,114,0.031,315,1.984,316,2.978,317,3.885,318,2.978,319,2.978,320,2.978,321,2.978,322,2.978,323,2.978,324,4.753,325,3.885,326,4.583,327,2.978,328,2.978,329,3.797,330,2.978,331,3.885,332,3.454,333,3.454,334,4.583,335,3.103,336,2.978,337,2.978,338,2.978,339,2.978,340,4.324,341,4.583,342,4.324,343,2.978,344,3.885,345,2.978,346,2.978,347,2.978,348,2.978,349,2.978,350,2.978,351,2.978,352,2.978,353,2.978,354,2.978,355,2.978,356,2.978,357,2.978,358,2.379,359,2.978,360,2.978,361,2.978,362,3.885,363,2.978,364,2.978,365,2.978,366,2.978,367,2.379,368,2.379,369,2.978,370,1.454,371,2.978,372,2.978]],["title/coverage.html",[373,2.939]],["body/coverage.html",[0,1.118,1,0.915,5,1.062,6,2.678,32,0.055,36,0.553,107,0.663,108,1.416,109,0.783,112,0.035,113,0.044,114,0.035,115,2.678,123,2.678,139,1.637,153,1.673,154,1.416,156,2.792,159,1.416,161,2.678,162,2.678,223,2.233,274,3.825,329,2.678,373,2.678,374,2.233,375,3.352,376,3.352,377,3.352,378,3.352,379,3.352,380,3.352,381,4.19,382,3.352,383,3.352,384,3.352,385,3.352,386,3.352,387,2.678,388,2.678,389,3.352,390,3.352,391,2.678]],["title/miscellaneous/functions.html",[392,1.856,393,2.621]],["body/miscellaneous/functions.html",[13,1.051,19,2.184,31,1.626,32,0.053,55,0.899,105,0.899,112,0.04,113,0.048,114,0.04,196,3.075,387,3.075,388,3.641,392,3.075,393,3.075,394,3.849,395,3.849,396,4.558,397,4.558,398,3.849]],["title/index.html",[13,0.634,313,1.548,314,1.548]],["body/index.html",[0,0.884,1,0.782,2,1.386,3,0.669,4,0.907,8,1.848,32,0.054,52,1.599,76,1.907,103,1.848,105,0.991,107,0.749,109,0.884,112,0.03,113,0.04,114,0.03,124,1.907,141,1.907,158,1.398,160,2.826,266,3.024,315,1.907,332,2.287,333,3.024,358,3.928,367,2.287,368,3.024,374,1.907,391,2.287,399,2.863,400,1.907,401,1.398,402,2.863,403,3.785,404,2.863,405,2.863,406,2.863,407,3.785,408,3.785,409,2.863,410,2.863,411,2.863,412,2.863,413,2.863,414,3.785,415,2.863,416,2.863,417,2.863,418,2.863,419,2.287,420,2.863,421,2.863,422,2.863,423,2.863,424,2.863,425,2.863,426,4.693,427,3.785,428,2.863,429,2.863,430,2.863,431,2.863,432,2.863,433,2.863,434,2.863,435,2.863,436,2.863,437,2.863,438,2.863,439,2.863,440,2.863,441,2.863]],["title/license.html",[313,1.548,314,1.548,442,1.856]],["body/license.html",[32,0.041,48,1.463,112,0.031,113,0.041,114,0.031,335,2.394,374,1.997,419,3.116,442,2.394,443,2.997,444,4.337,445,2.997,446,2.997,447,3.901,448,2.997,449,2.997,450,2.997,451,2.997,452,2.997,453,2.997,454,3.901,455,5.096,456,2.997,457,2.997,458,4.337,459,2.997,460,3.901,461,2.997,462,2.997,463,2.997,464,2.997,465,2.997,466,2.997,467,2.997,468,2.997,469,2.997,470,3.901,471,2.997,472,2.997,473,2.997,474,2.997,475,2.997,476,2.997,477,2.997,478,3.901,479,3.901,480,2.997,481,2.997,482,2.997,483,2.997,484,2.997,485,2.997,486,2.997,487,2.997,488,2.997,489,2.997,490,2.997,491,2.997,492,2.997,493,2.997,494,2.997,495,2.997,496,2.997,497,2.997,498,2.997,499,2.997,500,2.997,501,2.997,502,2.997,503,2.997,504,2.997,505,2.997,506,2.997,507,2.997,508,2.997,509,2.997]],["title/modules.html",[510,2.939]],["body/modules.html",[32,0.05,112,0.044,113,0.05,114,0.044,510,3.328]],["title/overview.html",[511,2.939]],["body/overview.html",[2,1.499,32,0.05,52,1.73,112,0.043,113,0.05,114,0.043,155,2.323,511,3.271,512,4.095]],["title/additional-documentation/is-alert.html",[1,0.634,513,1.318,514,1.318]],["body/additional-documentation/is-alert.html",[1,1.412,3,0.615,12,1.928,14,0.708,15,2.86,16,2.86,17,2.86,18,2.105,20,2.105,21,2.732,24,2.476,32,0.038,36,0.591,37,1.489,38,0.835,43,2.67,44,2.86,46,2.105,48,1.287,50,1.495,51,1.513,52,1.113,54,2.105,55,0.836,56,2.105,58,2.105,59,2.105,60,1.491,62,0.835,63,1.495,64,1.495,65,1.495,66,1.495,67,1.495,68,1.495,69,1.495,70,1.495,71,1.495,78,0.965,80,1.287,105,0.615,107,0.521,112,0.028,113,0.038,114,0.028,134,2.386,136,2.031,370,1.287,400,2.386,401,1.287,515,1.495,516,2.307,517,2.635,518,2.635,519,1.756,520,2.105,521,2.105,522,2.105,523,2.105,524,2.86,525,2.86,526,2.86,527,3.76,528,2.86,529,2.86,530,2.86,531,3.914,532,2.86,533,1.495]],["title/additional-documentation/is-badge.html",[107,0.459,513,1.318,514,1.318]],["body/additional-documentation/is-badge.html",[3,0.653,12,1.181,14,0.737,21,2.773,24,2.536,32,0.044,36,0.461,37,1.024,38,0.886,55,0.87,60,1.549,62,0.886,63,1.586,64,1.586,65,1.586,66,1.586,67,1.586,68,1.586,69,1.586,70,1.586,71,1.586,78,1.024,80,1.365,105,0.653,107,1.04,109,0.87,112,0.029,113,0.039,114,0.029,121,1.586,134,2.483,136,2.114,297,1.863,370,1.365,400,2.483,401,1.365,515,1.586,516,2.114,519,2.483,522,2.233,523,2.233,524,2.977,525,2.977,526,2.977,527,3.826,528,2.977,529,2.977,530,2.977,531,3.967,532,2.977,533,1.586,534,3.727,535,2.233,536,2.796,537,2.977,538,2.233,539,2.233,540,2.233]],["title/additional-documentation/is-multiselect.html",[109,0.543,513,1.318,514,1.318]],["body/additional-documentation/is-multiselect.html",[12,1.496,14,0.513,25,1.266,29,1.266,31,1.095,32,0.054,36,0.665,37,1.296,38,0.821,48,1.266,50,1.471,51,1.704,52,1.095,55,0.942,60,0.821,62,1.122,78,1.296,107,0.798,109,0.942,112,0.027,113,0.037,114,0.027,121,2.009,154,1.095,157,2.288,158,2.116,159,1.496,166,2.829,168,3.899,170,2.071,171,2.071,172,3.462,173,2.829,174,2.829,175,2.829,176,4.098,177,2.071,178,2.071,182,2.071,189,2.829,207,2.071,208,2.071,211,2.071,213,2.071,215,3.222,216,2.071,217,2.829,220,2.071,221,2.071,222,2.071,223,2.359,225,2.071,226,2.071,227,2.071,228,2.071,229,2.071,231,2.071,232,2.071,236,2.071,238,2.071,239,2.829,245,2.829,246,2.071,297,1.727,370,1.266,401,1.266,515,1.471,516,2.009,519,1.727,520,2.071,521,2.071,533,1.471,535,2.071,537,2.829,538,2.071,539,2.071,540,2.071,541,2.592]],["title/additional-documentation/is-readmore.html",[124,1.548,513,1.318,514,1.318]],["body/additional-documentation/is-readmore.html",[14,0.746,32,0.054,36,0.622,38,1.195,43,2.141,60,1.195,62,1.195,112,0.04,113,0.047,114,0.04,127,3.014,129,2.514,136,2.141,139,1.842,140,2.514,141,2.514,142,2.514,143,2.514,144,2.514,146,3.014,370,1.842,401,1.842,515,2.141,516,2.141,533,2.141,542,3.773]]],"invertedIndex":[["",{"_index":32,"title":{},"body":{"components/Alert.html":{},"components/Badge.html":{},"components/HomeAbout.html":{},"interfaces/ILabelTo.html":{},"interfaces/ISelectItem.html":{},"interfaces/IToggleOptions.html":{},"components/Multiselect.html":{},"contributing.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"additional-documentation/is-alert.html":{},"additional-documentation/is-badge.html":{},"additional-documentation/is-multiselect.html":{},"additional-documentation/is-readmore.html":{}}}],["0",{"_index":274,"title":{},"body":{"components/Multiselect.html":{},"coverage.html":{}}}],["0/1",{"_index":389,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":381,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":384,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":266,"title":{},"body":{"components/Multiselect.html":{},"index.html":{}}}],["1/7",{"_index":386,"title":{},"body":{"coverage.html":{}}}],["1000",{"_index":99,"title":{},"body":{"components/Alert.html":{}}}],["12/22",{"_index":383,"title":{},"body":{"coverage.html":{}}}],["14",{"_index":385,"title":{},"body":{"coverage.html":{}}}],["2",{"_index":427,"title":{},"body":{"index.html":{}}}],["200",{"_index":272,"title":{},"body":{"components/Multiselect.html":{}}}],["2018",{"_index":446,"title":{},"body":{"license.html":{}}}],["3",{"_index":52,"title":{},"body":{"components/Alert.html":{},"components/Multiselect.html":{},"index.html":{},"overview.html":{},"additional-documentation/is-alert.html":{},"additional-documentation/is-multiselect.html":{}}}],["3/5",{"_index":380,"title":{},"body":{"coverage.html":{}}}],["4",{"_index":512,"title":{},"body":{"overview.html":{}}}],["53",{"_index":377,"title":{},"body":{"coverage.html":{}}}],["54",{"_index":382,"title":{},"body":{"coverage.html":{}}}],["60",{"_index":379,"title":{},"body":{"coverage.html":{}}}],["7/13",{"_index":378,"title":{},"body":{"coverage.html":{}}}],["above",{"_index":477,"title":{},"body":{"license.html":{}}}],["accidentally",{"_index":350,"title":{},"body":{"contributing.html":{}}}],["action",{"_index":502,"title":{},"body":{"license.html":{}}}],["actual_component",{"_index":111,"title":{},"body":{"components/Alert.html":{},"components/Badge.html":{},"components/HomeAbout.html":{},"components/Multiselect.html":{}}}],["add",{"_index":341,"title":{},"body":{"contributing.html":{}}}],["additional",{"_index":513,"title":{"additional-documentation/is-alert.html":{},"additional-documentation/is-badge.html":{},"additional-documentation/is-multiselect.html":{},"additional-documentation/is-readmore.html":{}},"body":{}}],["again",{"_index":354,"title":{},"body":{"contributing.html":{}}}],["alert",{"_index":1,"title":{"components/Alert.html":{},"additional-documentation/is-alert.html":{}},"body":{"components/Alert.html":{},"components/Badge.html":{},"components/HomeAbout.html":{},"components/Multiselect.html":{},"coverage.html":{},"index.html":{},"additional-documentation/is-alert.html":{}}}],["alert.scss",{"_index":10,"title":{},"body":{"components/Alert.html":{}}}],["align",{"_index":133,"title":{},"body":{"components/HomeAbout.html":{}}}],["and/or",{"_index":468,"title":{},"body":{"license.html":{}}}],["another",{"_index":435,"title":{},"body":{"index.html":{}}}],["anywhere",{"_index":420,"title":{},"body":{"index.html":{}}}],["applications",{"_index":399,"title":{},"body":{"index.html":{}}}],["arising",{"_index":506,"title":{},"body":{"license.html":{}}}],["associated",{"_index":456,"title":{},"body":{"license.html":{}}}],["attribute",{"_index":370,"title":{},"body":{"contributing.html":{},"additional-documentation/is-alert.html":{},"additional-documentation/is-badge.html":{},"additional-documentation/is-multiselect.html":{},"additional-documentation/is-readmore.html":{}}}],["authors",{"_index":495,"title":{},"body":{"license.html":{}}}],["auto",{"_index":517,"title":{},"body":{"additional-documentation/is-alert.html":{}}}],["autoclose",{"_index":15,"title":{},"body":{"components/Alert.html":{},"additional-documentation/is-alert.html":{}}}],["automatically",{"_index":44,"title":{},"body":{"components/Alert.html":{},"additional-documentation/is-alert.html":{}}}],["awesome",{"_index":331,"title":{},"body":{"contributing.html":{}}}],["b",{"_index":328,"title":{},"body":{"contributing.html":{}}}],["background",{"_index":524,"title":{},"body":{"additional-documentation/is-alert.html":{},"additional-documentation/is-badge.html":{}}}],["badge",{"_index":107,"title":{"components/Badge.html":{},"additional-documentation/is-badge.html":{}},"body":{"components/Alert.html":{},"components/Badge.html":{},"components/HomeAbout.html":{},"components/Multiselect.html":{},"coverage.html":{},"index.html":{},"additional-documentation/is-alert.html":{},"additional-documentation/is-badge.html":{},"additional-documentation/is-multiselect.html":{}}}],["badge.scss",{"_index":116,"title":{},"body":{"components/Badge.html":{}}}],["badges",{"_index":238,"title":{},"body":{"components/Multiselect.html":{},"additional-documentation/is-multiselect.html":{}}}],["before",{"_index":352,"title":{},"body":{"contributing.html":{}}}],["beside",{"_index":336,"title":{},"body":{"contributing.html":{}}}],["black",{"_index":70,"title":{},"body":{"components/Alert.html":{},"components/Badge.html":{},"additional-documentation/is-alert.html":{},"additional-documentation/is-badge.html":{}}}],["boolean",{"_index":37,"title":{},"body":{"components/Alert.html":{},"components/Badge.html":{},"components/HomeAbout.html":{},"components/Multiselect.html":{},"additional-documentation/is-alert.html":{},"additional-documentation/is-badge.html":{},"additional-documentation/is-multiselect.html":{}}}],["border",{"_index":525,"title":{},"body":{"additional-documentation/is-alert.html":{},"additional-documentation/is-badge.html":{}}}],["bottom",{"_index":532,"title":{},"body":{"additional-documentation/is-alert.html":{},"additional-documentation/is-badge.html":{}}}],["branch",{"_index":325,"title":{},"body":{"contributing.html":{}}}],["browse",{"_index":355,"title":{},"body":{"contributing.html":{}}}],["build",{"_index":332,"title":{},"body":{"contributing.html":{},"index.html":{}}}],["building",{"_index":367,"title":{},"body":{"contributing.html":{},"index.html":{}}}],["building_construction",{"_index":366,"title":{},"body":{"contributing.html":{}}}],["built",{"_index":533,"title":{},"body":{"additional-documentation/is-alert.html":{},"additional-documentation/is-badge.html":{},"additional-documentation/is-multiselect.html":{},"additional-documentation/is-readmore.html":{}}}],["button",{"_index":59,"title":{},"body":{"components/Alert.html":{},"additional-documentation/is-alert.html":{}}}],["c",{"_index":445,"title":{},"body":{"license.html":{}}}],["cdn",{"_index":411,"title":{},"body":{"index.html":{}}}],["center",{"_index":135,"title":{},"body":{"components/HomeAbout.html":{}}}],["changed",{"_index":236,"title":{},"body":{"components/Multiselect.html":{},"additional-documentation/is-multiselect.html":{}}}],["changes",{"_index":340,"title":{},"body":{"contributing.html":{}}}],["charge",{"_index":451,"title":{},"body":{"license.html":{}}}],["checkout",{"_index":327,"title":{},"body":{"contributing.html":{}}}],["claim",{"_index":498,"title":{},"body":{"license.html":{}}}],["class",{"_index":86,"title":{},"body":{"components/Alert.html":{},"components/Badge.html":{},"components/HomeAbout.html":{},"components/Multiselect.html":{}}}],["click",{"_index":217,"title":{},"body":{"components/Multiselect.html":{},"additional-documentation/is-multiselect.html":{}}}],["clone",{"_index":319,"title":{},"body":{"contributing.html":{}}}],["closable",{"_index":46,"title":{},"body":{"components/Alert.html":{},"additional-documentation/is-alert.html":{}}}],["close",{"_index":43,"title":{},"body":{"components/Alert.html":{},"components/HomeAbout.html":{},"additional-documentation/is-alert.html":{},"additional-documentation/is-readmore.html":{}}}],["closeable",{"_index":16,"title":{},"body":{"components/Alert.html":{},"additional-documentation/is-alert.html":{}}}],["closed",{"_index":17,"title":{},"body":{"components/Alert.html":{},"additional-documentation/is-alert.html":{}}}],["closesecs",{"_index":18,"title":{},"body":{"components/Alert.html":{},"additional-documentation/is-alert.html":{}}}],["closetext",{"_index":20,"title":{},"body":{"components/Alert.html":{},"additional-documentation/is-alert.html":{}}}],["code",{"_index":430,"title":{},"body":{"index.html":{}}}],["color",{"_index":21,"title":{},"body":{"components/Alert.html":{},"components/Badge.html":{},"additional-documentation/is-alert.html":{},"additional-documentation/is-badge.html":{}}}],["commit",{"_index":342,"title":{},"body":{"contributing.html":{}}}],["committing",{"_index":353,"title":{},"body":{"contributing.html":{}}}],["component",{"_index":0,"title":{"components/Alert.html":{},"components/Badge.html":{},"components/HomeAbout.html":{},"components/Multiselect.html":{}},"body":{"components/Alert.html":{},"components/Badge.html":{},"components/HomeAbout.html":{},"components/Multiselect.html":{},"coverage.html":{},"index.html":{}}}],["component.isnur.com",{"_index":404,"title":{},"body":{"index.html":{}}}],["component.isnur.com/docs",{"_index":405,"title":{},"body":{"index.html":{}}}],["component/issues",{"_index":359,"title":{},"body":{"contributing.html":{}}}],["component_template",{"_index":104,"title":{},"body":{"components/Alert.html":{},"components/Badge.html":{},"components/HomeAbout.html":{},"components/Multiselect.html":{}}}],["componentdidload",{"_index":26,"title":{},"body":{"components/Alert.html":{},"components/HomeAbout.html":{}}}],["componentdidunload",{"_index":27,"title":{},"body":{"components/Alert.html":{}}}],["componentinterface",{"_index":164,"title":{},"body":{"components/Multiselect.html":{}}}],["components",{"_index":2,"title":{},"body":{"components/Alert.html":{},"components/Badge.html":{},"components/HomeAbout.html":{},"components/Multiselect.html":{},"contributing.html":{},"index.html":{},"overview.html":{}}}],["componentusage",{"_index":413,"title":{},"body":{"index.html":{}}}],["componentwillload",{"_index":181,"title":{},"body":{"components/Multiselect.html":{}}}],["conditions",{"_index":476,"title":{},"body":{"license.html":{}}}],["conduct",{"_index":431,"title":{},"body":{"index.html":{}}}],["config",{"_index":146,"title":{},"body":{"components/HomeAbout.html":{},"additional-documentation/is-readmore.html":{}}}],["connection",{"_index":508,"title":{},"body":{"license.html":{}}}],["const",{"_index":253,"title":{},"body":{"components/Multiselect.html":{}}}],["contentexpanded",{"_index":126,"title":{},"body":{"components/HomeAbout.html":{}}}],["contract",{"_index":503,"title":{},"body":{"license.html":{}}}],["contribute",{"_index":438,"title":{},"body":{"index.html":{}}}],["contributing",{"_index":315,"title":{"contributing.html":{}},"body":{"contributing.html":{},"index.html":{}}}],["contributing.md",{"_index":437,"title":{},"body":{"index.html":{}}}],["copies",{"_index":470,"title":{},"body":{"license.html":{}}}],["copy",{"_index":454,"title":{},"body":{"license.html":{}}}],["copyright",{"_index":444,"title":{},"body":{"license.html":{}}}],["count",{"_index":245,"title":{},"body":{"components/Multiselect.html":{},"additional-documentation/is-multiselect.html":{}}}],["countdowntimerid",{"_index":22,"title":{},"body":{"components/Alert.html":{}}}],["coverage",{"_index":373,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["create",{"_index":323,"title":{},"body":{"contributing.html":{}}}],["css",{"_index":522,"title":{},"body":{"additional-documentation/is-alert.html":{},"additional-documentation/is-badge.html":{}}}],["custom",{"_index":523,"title":{},"body":{"additional-documentation/is-alert.html":{},"additional-documentation/is-badge.html":{}}}],["customevent",{"_index":521,"title":{},"body":{"additional-documentation/is-alert.html":{},"additional-documentation/is-multiselect.html":{}}}],["customized",{"_index":58,"title":{},"body":{"components/Alert.html":{},"additional-documentation/is-alert.html":{}}}],["damages",{"_index":499,"title":{},"body":{"license.html":{}}}],["dark",{"_index":71,"title":{},"body":{"components/Alert.html":{},"components/Badge.html":{},"additional-documentation/is-alert.html":{},"additional-documentation/is-badge.html":{}}}],["data",{"_index":426,"title":{},"body":{"index.html":{}}}],["deal",{"_index":457,"title":{},"body":{"license.html":{}}}],["dealings",{"_index":509,"title":{},"body":{"license.html":{}}}],["decorators",{"_index":40,"title":{},"body":{"components/Alert.html":{},"components/Badge.html":{},"components/HomeAbout.html":{},"components/Multiselect.html":{}}}],["default",{"_index":38,"title":{},"body":{"components/Alert.html":{},"components/Badge.html":{},"components/HomeAbout.html":{},"components/Multiselect.html":{},"additional-documentation/is-alert.html":{},"additional-documentation/is-badge.html":{},"additional-documentation/is-multiselect.html":{},"additional-documentation/is-readmore.html":{}}}],["defined",{"_index":29,"title":{},"body":{"components/Alert.html":{},"components/Badge.html":{},"components/HomeAbout.html":{},"components/Multiselect.html":{},"additional-documentation/is-multiselect.html":{}}}],["demo",{"_index":402,"title":{},"body":{"index.html":{}}}],["dependencies",{"_index":535,"title":{},"body":{"additional-documentation/is-badge.html":{},"additional-documentation/is-multiselect.html":{}}}],["depends",{"_index":541,"title":{},"body":{"additional-documentation/is-multiselect.html":{}}}],["description",{"_index":516,"title":{},"body":{"additional-documentation/is-alert.html":{},"additional-documentation/is-badge.html":{},"additional-documentation/is-multiselect.html":{},"additional-documentation/is-readmore.html":{}}}],["develop",{"_index":330,"title":{},"body":{"contributing.html":{}}}],["directives",{"_index":110,"title":{},"body":{"components/Alert.html":{},"components/Badge.html":{},"components/HomeAbout.html":{},"components/Multiselect.html":{}}}],["disabled",{"_index":166,"title":{},"body":{"components/Multiselect.html":{},"additional-documentation/is-multiselect.html":{}}}],["display",{"_index":121,"title":{},"body":{"components/Badge.html":{},"components/Multiselect.html":{},"additional-documentation/is-badge.html":{},"additional-documentation/is-multiselect.html":{}}}],["dist",{"_index":363,"title":{},"body":{"contributing.html":{}}}],["distribute",{"_index":466,"title":{},"body":{"license.html":{}}}],["document",{"_index":194,"title":{},"body":{"components/Multiselect.html":{}}}],["document.getelementbyid(\"select",{"_index":425,"title":{},"body":{"index.html":{}}}],["documentation",{"_index":374,"title":{},"body":{"coverage.html":{},"index.html":{},"license.html":{}}}],["don't",{"_index":361,"title":{},"body":{"contributing.html":{}}}],["each",{"_index":371,"title":{},"body":{"contributing.html":{}}}],["edit",{"_index":362,"title":{},"body":{"contributing.html":{}}}],["el",{"_index":23,"title":{},"body":{"components/Alert.html":{},"components/Multiselect.html":{}}}],["element",{"_index":76,"title":{},"body":{"components/Alert.html":{},"components/Multiselect.html":{},"index.html":{}}}],["element.value",{"_index":291,"title":{},"body":{"components/Multiselect.html":{}}}],["elements",{"_index":228,"title":{},"body":{"components/Multiselect.html":{},"additional-documentation/is-multiselect.html":{}}}],["emitted",{"_index":50,"title":{},"body":{"components/Alert.html":{},"components/Multiselect.html":{},"additional-documentation/is-alert.html":{},"additional-documentation/is-multiselect.html":{}}}],["error",{"_index":67,"title":{},"body":{"components/Alert.html":{},"components/Badge.html":{},"additional-documentation/is-alert.html":{},"additional-documentation/is-badge.html":{}}}],["etc",{"_index":424,"title":{},"body":{"index.html":{}}}],["event",{"_index":48,"title":{},"body":{"components/Alert.html":{},"components/Multiselect.html":{},"license.html":{},"additional-documentation/is-alert.html":{},"additional-documentation/is-multiselect.html":{}}}],["eventemitter",{"_index":47,"title":{},"body":{"components/Alert.html":{},"components/Multiselect.html":{}}}],["events",{"_index":520,"title":{},"body":{"additional-documentation/is-alert.html":{},"additional-documentation/is-multiselect.html":{}}}],["export",{"_index":85,"title":{},"body":{"components/Alert.html":{},"components/Badge.html":{},"components/HomeAbout.html":{},"interfaces/IToggleOptions.html":{},"components/Multiselect.html":{}}}],["express",{"_index":486,"title":{},"body":{"license.html":{}}}],["false",{"_index":78,"title":{},"body":{"components/Alert.html":{},"components/Badge.html":{},"components/HomeAbout.html":{},"components/Multiselect.html":{},"additional-documentation/is-alert.html":{},"additional-documentation/is-badge.html":{},"additional-documentation/is-multiselect.html":{}}}],["family",{"_index":528,"title":{},"body":{"additional-documentation/is-alert.html":{},"additional-documentation/is-badge.html":{}}}],["feature",{"_index":324,"title":{},"body":{"contributing.html":{}}}],["file",{"_index":5,"title":{},"body":{"components/Alert.html":{},"components/Badge.html":{},"components/HomeAbout.html":{},"interfaces/ILabelTo.html":{},"interfaces/ISelectItem.html":{},"interfaces/IToggleOptions.html":{},"components/Multiselect.html":{},"coverage.html":{}}}],["files",{"_index":335,"title":{},"body":{"contributing.html":{},"license.html":{}}}],["fill:#f9f,stroke:#333,stroke",{"_index":539,"title":{},"body":{"additional-documentation/is-badge.html":{},"additional-documentation/is-multiselect.html":{}}}],["filtereditems",{"_index":259,"title":{},"body":{"components/Multiselect.html":{}}}],["first",{"_index":398,"title":{},"body":{"miscellaneous/functions.html":{}}}],["fitness",{"_index":491,"title":{},"body":{"license.html":{}}}],["following",{"_index":475,"title":{},"body":{"license.html":{}}}],["font",{"_index":527,"title":{},"body":{"additional-documentation/is-alert.html":{},"additional-documentation/is-badge.html":{}}}],["fork",{"_index":318,"title":{},"body":{"contributing.html":{}}}],["forked",{"_index":320,"title":{},"body":{"contributing.html":{}}}],["format",{"_index":388,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["format(first",{"_index":395,"title":{},"body":{"miscellaneous/functions.html":{}}}],["found",{"_index":312,"title":{},"body":{"components/Multiselect.html":{}}}],["free",{"_index":450,"title":{},"body":{"license.html":{}}}],["function",{"_index":223,"title":{},"body":{"components/Multiselect.html":{},"coverage.html":{},"additional-documentation/is-multiselect.html":{}}}],["functions",{"_index":393,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["furnished",{"_index":473,"title":{},"body":{"license.html":{}}}],["generated",{"_index":365,"title":{},"body":{"contributing.html":{}}}],["getselected",{"_index":182,"title":{},"body":{"components/Multiselect.html":{},"additional-documentation/is-multiselect.html":{}}}],["getting",{"_index":313,"title":{"contributing.html":{},"index.html":{},"license.html":{}},"body":{}}],["git",{"_index":326,"title":{},"body":{"contributing.html":{}}}],["granted",{"_index":449,"title":{},"body":{"license.html":{}}}],["graph",{"_index":537,"title":{},"body":{"additional-documentation/is-badge.html":{},"additional-documentation/is-multiselect.html":{}}}],["h",{"_index":83,"title":{},"body":{"components/Alert.html":{},"components/Badge.html":{},"components/HomeAbout.html":{},"components/Multiselect.html":{}}}],["handleclick",{"_index":183,"title":{},"body":{"components/Multiselect.html":{}}}],["handleclick(event",{"_index":190,"title":{},"body":{"components/Multiselect.html":{}}}],["head",{"_index":417,"title":{},"body":{"index.html":{}}}],["height",{"_index":534,"title":{},"body":{"additional-documentation/is-badge.html":{}}}],["help",{"_index":317,"title":{},"body":{"contributing.html":{}}}],["hereby",{"_index":448,"title":{},"body":{"license.html":{}}}],["hidden",{"_index":221,"title":{},"body":{"components/Multiselect.html":{},"additional-documentation/is-multiselect.html":{}}}],["holders",{"_index":496,"title":{},"body":{"license.html":{}}}],["home",{"_index":542,"title":{},"body":{"additional-documentation/is-readmore.html":{}}}],["homeabout",{"_index":108,"title":{"components/HomeAbout.html":{}},"body":{"components/Alert.html":{},"components/Badge.html":{},"components/HomeAbout.html":{},"components/Multiselect.html":{},"coverage.html":{}}}],["host",{"_index":82,"title":{},"body":{"components/Alert.html":{},"components/Badge.html":{},"components/HomeAbout.html":{},"components/Multiselect.html":{}}}],["html",{"_index":423,"title":{},"body":{"index.html":{}}}],["htmlelement",{"_index":75,"title":{},"body":{"components/Alert.html":{}}}],["htmlinputelement",{"_index":258,"title":{},"body":{"components/Multiselect.html":{}}}],["https://github.com/isnur/is",{"_index":357,"title":{},"body":{"contributing.html":{}}}],["https://is",{"_index":403,"title":{},"body":{"index.html":{}}}],["https://unpkg.com/is",{"_index":412,"title":{},"body":{"index.html":{}}}],["id",{"_index":160,"title":{},"body":{"interfaces/ILabelTo.html":{},"interfaces/ISelectItem.html":{},"index.html":{}}}],["identifier",{"_index":375,"title":{},"body":{"coverage.html":{}}}],["ilabelto",{"_index":154,"title":{"interfaces/ILabelTo.html":{}},"body":{"interfaces/ILabelTo.html":{},"interfaces/ISelectItem.html":{},"components/Multiselect.html":{},"coverage.html":{},"additional-documentation/is-multiselect.html":{}}}],["implements",{"_index":163,"title":{},"body":{"components/Multiselect.html":{}}}],["implied",{"_index":487,"title":{},"body":{"license.html":{}}}],["import",{"_index":81,"title":{},"body":{"components/Alert.html":{},"components/Badge.html":{},"components/HomeAbout.html":{},"components/Multiselect.html":{}}}],["included",{"_index":480,"title":{},"body":{"license.html":{}}}],["including",{"_index":460,"title":{},"body":{"license.html":{}}}],["index",{"_index":13,"title":{"index.html":{}},"body":{"components/Alert.html":{},"components/Badge.html":{},"components/HomeAbout.html":{},"interfaces/ILabelTo.html":{},"interfaces/ISelectItem.html":{},"interfaces/IToggleOptions.html":{},"components/Multiselect.html":{},"miscellaneous/functions.html":{}}}],["index.html",{"_index":418,"title":{},"body":{"index.html":{}}}],["info",{"_index":3,"title":{},"body":{"components/Alert.html":{},"components/Badge.html":{},"components/HomeAbout.html":{},"interfaces/ILabelTo.html":{},"interfaces/ISelectItem.html":{},"interfaces/IToggleOptions.html":{},"components/Multiselect.html":{},"index.html":{},"additional-documentation/is-alert.html":{},"additional-documentation/is-badge.html":{}}}],["install",{"_index":407,"title":{},"body":{"index.html":{}}}],["installation",{"_index":406,"title":{},"body":{"index.html":{}}}],["interact",{"_index":208,"title":{},"body":{"components/Multiselect.html":{},"additional-documentation/is-multiselect.html":{}}}],["interface",{"_index":153,"title":{"interfaces/ILabelTo.html":{},"interfaces/ISelectItem.html":{},"interfaces/IToggleOptions.html":{}},"body":{"interfaces/ILabelTo.html":{},"interfaces/ISelectItem.html":{},"interfaces/IToggleOptions.html":{},"coverage.html":{}}}],["interfaces",{"_index":155,"title":{},"body":{"interfaces/ILabelTo.html":{},"interfaces/ISelectItem.html":{},"interfaces/IToggleOptions.html":{},"overview.html":{}}}],["isclickinside",{"_index":254,"title":{},"body":{"components/Multiselect.html":{}}}],["iselectitem",{"_index":159,"title":{"interfaces/ISelectItem.html":{}},"body":{"interfaces/ILabelTo.html":{},"interfaces/ISelectItem.html":{},"components/Multiselect.html":{},"coverage.html":{},"additional-documentation/is-multiselect.html":{}}}],["isexpanded",{"_index":167,"title":{},"body":{"components/Multiselect.html":{}}}],["isselected",{"_index":278,"title":{},"body":{"components/Multiselect.html":{}}}],["issue",{"_index":356,"title":{},"body":{"contributing.html":{}}}],["item",{"_index":279,"title":{},"body":{"components/Multiselect.html":{}}}],["item.id",{"_index":282,"title":{},"body":{"components/Multiselect.html":{}}}],["item.name",{"_index":311,"title":{},"body":{"components/Multiselect.html":{}}}],["items",{"_index":168,"title":{},"body":{"components/Multiselect.html":{},"additional-documentation/is-multiselect.html":{}}}],["itoggleoptions",{"_index":139,"title":{"interfaces/IToggleOptions.html":{}},"body":{"components/HomeAbout.html":{},"interfaces/IToggleOptions.html":{},"coverage.html":{},"additional-documentation/is-readmore.html":{}}}],["jsx",{"_index":422,"title":{},"body":{"index.html":{}}}],["keyword",{"_index":169,"title":{},"body":{"components/Multiselect.html":{}}}],["kind",{"_index":485,"title":{},"body":{"license.html":{}}}],["label",{"_index":215,"title":{},"body":{"components/Multiselect.html":{},"additional-documentation/is-multiselect.html":{}}}],["labelselected",{"_index":170,"title":{},"body":{"components/Multiselect.html":{},"additional-documentation/is-multiselect.html":{}}}],["labelto",{"_index":171,"title":{},"body":{"components/Multiselect.html":{},"additional-documentation/is-multiselect.html":{}}}],["last",{"_index":397,"title":{},"body":{"miscellaneous/functions.html":{}}}],["left",{"_index":136,"title":{},"body":{"components/HomeAbout.html":{},"additional-documentation/is-alert.html":{},"additional-documentation/is-badge.html":{},"additional-documentation/is-readmore.html":{}}}],["liability",{"_index":500,"title":{},"body":{"license.html":{}}}],["liable",{"_index":497,"title":{},"body":{"license.html":{}}}],["license",{"_index":442,"title":{"license.html":{}},"body":{"license.html":{}}}],["light",{"_index":68,"title":{},"body":{"components/Alert.html":{},"components/Badge.html":{},"additional-documentation/is-alert.html":{},"additional-documentation/is-badge.html":{}}}],["limit",{"_index":172,"title":{},"body":{"components/Multiselect.html":{},"additional-documentation/is-multiselect.html":{}}}],["limitation",{"_index":461,"title":{},"body":{"license.html":{}}}],["limited",{"_index":488,"title":{},"body":{"license.html":{}}}],["limittext",{"_index":173,"title":{},"body":{"components/Multiselect.html":{},"additional-documentation/is-multiselect.html":{}}}],["list",{"_index":211,"title":{},"body":{"components/Multiselect.html":{},"additional-documentation/is-multiselect.html":{}}}],["listen",{"_index":244,"title":{},"body":{"components/Multiselect.html":{}}}],["listen('click",{"_index":192,"title":{},"body":{"components/Multiselect.html":{}}}],["local",{"_index":322,"title":{},"body":{"contributing.html":{}}}],["m",{"_index":343,"title":{},"body":{"contributing.html":{}}}],["make",{"_index":80,"title":{},"body":{"components/Alert.html":{},"components/Badge.html":{},"contributing.html":{},"additional-documentation/is-alert.html":{},"additional-documentation/is-badge.html":{}}}],["matching",{"_index":113,"title":{},"body":{"components/Alert.html":{},"components/Badge.html":{},"components/HomeAbout.html":{},"interfaces/ILabelTo.html":{},"interfaces/ISelectItem.html":{},"interfaces/IToggleOptions.html":{},"components/Multiselect.html":{},"contributing.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"additional-documentation/is-alert.html":{},"additional-documentation/is-badge.html":{},"additional-documentation/is-multiselect.html":{},"additional-documentation/is-readmore.html":{}}}],["max",{"_index":174,"title":{},"body":{"components/Multiselect.html":{},"additional-documentation/is-multiselect.html":{}}}],["maximum",{"_index":231,"title":{},"body":{"components/Multiselect.html":{},"additional-documentation/is-multiselect.html":{}}}],["merchantability",{"_index":490,"title":{},"body":{"license.html":{}}}],["merge",{"_index":464,"title":{},"body":{"license.html":{}}}],["message",{"_index":226,"title":{},"body":{"components/Multiselect.html":{},"additional-documentation/is-multiselect.html":{}}}],["metadata",{"_index":7,"title":{},"body":{"components/Alert.html":{},"components/Badge.html":{},"components/HomeAbout.html":{},"components/Multiselect.html":{}}}],["method",{"_index":187,"title":{},"body":{"components/Multiselect.html":{}}}],["methods",{"_index":25,"title":{},"body":{"components/Alert.html":{},"components/Badge.html":{},"components/HomeAbout.html":{},"components/Multiselect.html":{},"additional-documentation/is-multiselect.html":{}}}],["middle",{"_index":396,"title":{},"body":{"miscellaneous/functions.html":{}}}],["miscellaneous",{"_index":392,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["mit",{"_index":443,"title":{},"body":{"license.html":{}}}],["modal",{"_index":439,"title":{},"body":{"index.html":{}}}],["modify",{"_index":463,"title":{},"body":{"license.html":{}}}],["modules",{"_index":510,"title":{"modules.html":{}},"body":{"modules.html":{}}}],["more",{"_index":246,"title":{},"body":{"components/Multiselect.html":{},"additional-documentation/is-multiselect.html":{}}}],["mouseevent",{"_index":191,"title":{},"body":{"components/Multiselect.html":{}}}],["multiselect",{"_index":109,"title":{"components/Multiselect.html":{},"additional-documentation/is-multiselect.html":{}},"body":{"components/Alert.html":{},"components/Badge.html":{},"components/HomeAbout.html":{},"components/Multiselect.html":{},"coverage.html":{},"index.html":{},"additional-documentation/is-badge.html":{},"additional-documentation/is-multiselect.html":{}}}],["multiselect.scss",{"_index":165,"title":{},"body":{"components/Multiselect.html":{}}}],["name",{"_index":105,"title":{},"body":{"components/Alert.html":{},"components/Badge.html":{},"components/HomeAbout.html":{},"interfaces/ILabelTo.html":{},"interfaces/ISelectItem.html":{},"components/Multiselect.html":{},"miscellaneous/functions.html":{},"index.html":{},"additional-documentation/is-alert.html":{},"additional-documentation/is-badge.html":{}}}],["new",{"_index":329,"title":{},"body":{"contributing.html":{},"coverage.html":{}}}],["newvalue",{"_index":202,"title":{},"body":{"components/Multiselect.html":{}}}],["nice",{"_index":433,"title":{},"body":{"index.html":{}}}],["no_entry_sign",{"_index":360,"title":{},"body":{"contributing.html":{}}}],["noninfringement",{"_index":494,"title":{},"body":{"license.html":{}}}],["notice",{"_index":478,"title":{},"body":{"license.html":{}}}],["npm",{"_index":333,"title":{},"body":{"contributing.html":{},"index.html":{}}}],["null",{"_index":72,"title":{},"body":{"components/Alert.html":{},"components/Multiselect.html":{}}}],["number",{"_index":51,"title":{},"body":{"components/Alert.html":{},"interfaces/ILabelTo.html":{},"interfaces/ISelectItem.html":{},"components/Multiselect.html":{},"additional-documentation/is-alert.html":{},"additional-documentation/is-multiselect.html":{}}}],["obj.id",{"_index":281,"title":{},"body":{"components/Multiselect.html":{}}}],["obj['name'].tolowercase().includes(this.keyword.tolowercase",{"_index":294,"title":{},"body":{"components/Multiselect.html":{}}}],["obtaining",{"_index":453,"title":{},"body":{"license.html":{}}}],["ok",{"_index":338,"title":{},"body":{"contributing.html":{}}}],["oldvalue",{"_index":199,"title":{},"body":{"components/Multiselect.html":{}}}],["one",{"_index":434,"title":{},"body":{"index.html":{}}}],["onfiltereditems",{"_index":288,"title":{},"body":{"components/Multiselect.html":{}}}],["open",{"_index":141,"title":{},"body":{"components/HomeAbout.html":{},"index.html":{},"additional-documentation/is-readmore.html":{}}}],["option",{"_index":216,"title":{},"body":{"components/Multiselect.html":{},"additional-documentation/is-multiselect.html":{}}}],["optional",{"_index":19,"title":{},"body":{"components/Alert.html":{},"components/Badge.html":{},"components/Multiselect.html":{},"miscellaneous/functions.html":{}}}],["options",{"_index":62,"title":{},"body":{"components/Alert.html":{},"components/Badge.html":{},"components/HomeAbout.html":{},"components/Multiselect.html":{},"additional-documentation/is-alert.html":{},"additional-documentation/is-badge.html":{},"additional-documentation/is-multiselect.html":{},"additional-documentation/is-readmore.html":{}}}],["origin",{"_index":345,"title":{},"body":{"contributing.html":{}}}],["otherwise",{"_index":505,"title":{},"body":{"license.html":{}}}],["out",{"_index":507,"title":{},"body":{"license.html":{}}}],["outside",{"_index":268,"title":{},"body":{"components/Multiselect.html":{}}}],["overview",{"_index":511,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["padding",{"_index":531,"title":{},"body":{"additional-documentation/is-alert.html":{},"additional-documentation/is-badge.html":{}}}],["page",{"_index":514,"title":{"additional-documentation/is-alert.html":{},"additional-documentation/is-badge.html":{},"additional-documentation/is-multiselect.html":{},"additional-documentation/is-readmore.html":{}},"body":{}}],["pagination",{"_index":440,"title":{},"body":{"index.html":{}}}],["parameters",{"_index":196,"title":{},"body":{"components/Multiselect.html":{},"miscellaneous/functions.html":{}}}],["particular",{"_index":492,"title":{},"body":{"license.html":{}}}],["pass",{"_index":229,"title":{},"body":{"components/Multiselect.html":{},"additional-documentation/is-multiselect.html":{}}}],["permission",{"_index":447,"title":{},"body":{"license.html":{}}}],["permit",{"_index":471,"title":{},"body":{"license.html":{}}}],["person",{"_index":452,"title":{},"body":{"license.html":{}}}],["persons",{"_index":472,"title":{},"body":{"license.html":{}}}],["pick",{"_index":232,"title":{},"body":{"components/Multiselect.html":{},"additional-documentation/is-multiselect.html":{}}}],["placeholder",{"_index":175,"title":{},"body":{"components/Multiselect.html":{},"additional-documentation/is-multiselect.html":{}}}],["placeholder={this.placeholder",{"_index":300,"title":{},"body":{"components/Multiselect.html":{}}}],["portions",{"_index":482,"title":{},"body":{"license.html":{}}}],["primary",{"_index":63,"title":{},"body":{"components/Alert.html":{},"components/Badge.html":{},"additional-documentation/is-alert.html":{},"additional-documentation/is-badge.html":{}}}],["private",{"_index":87,"title":{},"body":{"components/Alert.html":{},"components/Multiselect.html":{}}}],["process",{"_index":225,"title":{},"body":{"components/Multiselect.html":{},"additional-documentation/is-multiselect.html":{}}}],["project",{"_index":368,"title":{},"body":{"contributing.html":{},"index.html":{}}}],["promise",{"_index":189,"title":{},"body":{"components/Multiselect.html":{},"additional-documentation/is-multiselect.html":{}}}],["promise.resolve(this.selected",{"_index":247,"title":{},"body":{"components/Multiselect.html":{}}}],["prop",{"_index":41,"title":{},"body":{"components/Alert.html":{},"components/Badge.html":{},"components/HomeAbout.html":{},"components/Multiselect.html":{}}}],["properties",{"_index":14,"title":{},"body":{"components/Alert.html":{},"components/Badge.html":{},"components/HomeAbout.html":{},"interfaces/ILabelTo.html":{},"interfaces/ISelectItem.html":{},"interfaces/IToggleOptions.html":{},"components/Multiselect.html":{},"additional-documentation/is-alert.html":{},"additional-documentation/is-badge.html":{},"additional-documentation/is-multiselect.html":{},"additional-documentation/is-readmore.html":{}}}],["property",{"_index":515,"title":{},"body":{"additional-documentation/is-alert.html":{},"additional-documentation/is-badge.html":{},"additional-documentation/is-multiselect.html":{},"additional-documentation/is-readmore.html":{}}}],["props,function",{"_index":369,"title":{},"body":{"contributing.html":{}}}],["provided",{"_index":483,"title":{},"body":{"license.html":{}}}],["publish",{"_index":465,"title":{},"body":{"license.html":{}}}],["pull",{"_index":347,"title":{},"body":{"contributing.html":{}}}],["purpose",{"_index":493,"title":{},"body":{"license.html":{}}}],["push",{"_index":344,"title":{},"body":{"contributing.html":{}}}],["put",{"_index":415,"title":{},"body":{"index.html":{}}}],["radius",{"_index":526,"title":{},"body":{"additional-documentation/is-alert.html":{},"additional-documentation/is-badge.html":{}}}],["raising_hand",{"_index":316,"title":{},"body":{"contributing.html":{}}}],["read",{"_index":429,"title":{},"body":{"index.html":{}}}],["readmore",{"_index":124,"title":{"additional-documentation/is-readmore.html":{}},"body":{"components/HomeAbout.html":{},"index.html":{}}}],["readmore.interface",{"_index":147,"title":{},"body":{"components/HomeAbout.html":{}}}],["readmore.scss",{"_index":125,"title":{},"body":{"components/HomeAbout.html":{}}}],["ref={el",{"_index":299,"title":{},"body":{"components/Multiselect.html":{}}}],["remember",{"_index":432,"title":{},"body":{"index.html":{}}}],["remove",{"_index":157,"title":{},"body":{"interfaces/ILabelTo.html":{},"interfaces/ISelectItem.html":{},"components/Multiselect.html":{},"additional-documentation/is-multiselect.html":{}}}],["remove={this.isselected(item",{"_index":307,"title":{},"body":{"components/Multiselect.html":{}}}],["render",{"_index":28,"title":{},"body":{"components/Alert.html":{},"components/Badge.html":{},"components/HomeAbout.html":{},"components/Multiselect.html":{}}}],["renderclosetext",{"_index":90,"title":{},"body":{"components/Alert.html":{}}}],["renderselecteditems",{"_index":260,"title":{},"body":{"components/Multiselect.html":{}}}],["repo",{"_index":321,"title":{},"body":{"contributing.html":{}}}],["request",{"_index":348,"title":{},"body":{"contributing.html":{}}}],["rest",{"_index":220,"title":{},"body":{"components/Multiselect.html":{},"additional-documentation/is-multiselect.html":{}}}],["restriction",{"_index":459,"title":{},"body":{"license.html":{}}}],["result",{"_index":112,"title":{},"body":{"components/Alert.html":{},"components/Badge.html":{},"components/HomeAbout.html":{},"interfaces/ILabelTo.html":{},"interfaces/ISelectItem.html":{},"interfaces/IToggleOptions.html":{},"components/Multiselect.html":{},"contributing.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"additional-documentation/is-alert.html":{},"additional-documentation/is-badge.html":{},"additional-documentation/is-multiselect.html":{},"additional-documentation/is-readmore.html":{}}}],["results",{"_index":114,"title":{},"body":{"components/Alert.html":{},"components/Badge.html":{},"components/HomeAbout.html":{},"interfaces/ILabelTo.html":{},"interfaces/ISelectItem.html":{},"interfaces/IToggleOptions.html":{},"components/Multiselect.html":{},"contributing.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"additional-documentation/is-alert.html":{},"additional-documentation/is-badge.html":{},"additional-documentation/is-multiselect.html":{},"additional-documentation/is-readmore.html":{}}}],["return",{"_index":92,"title":{},"body":{"components/Alert.html":{},"components/Badge.html":{},"components/HomeAbout.html":{},"components/Multiselect.html":{}}}],["returns",{"_index":31,"title":{},"body":{"components/Alert.html":{},"components/Badge.html":{},"components/HomeAbout.html":{},"components/Multiselect.html":{},"miscellaneous/functions.html":{},"additional-documentation/is-multiselect.html":{}}}],["right",{"_index":134,"title":{},"body":{"components/HomeAbout.html":{},"additional-documentation/is-alert.html":{},"additional-documentation/is-badge.html":{}}}],["rights",{"_index":462,"title":{},"body":{"license.html":{}}}],["rounded",{"_index":24,"title":{},"body":{"components/Alert.html":{},"components/Badge.html":{},"additional-documentation/is-alert.html":{},"additional-documentation/is-badge.html":{}}}],["run",{"_index":334,"title":{},"body":{"contributing.html":{}}}],["saveyou",{"_index":409,"title":{},"body":{"index.html":{}}}],["scoped",{"_index":11,"title":{},"body":{"components/Alert.html":{},"components/Badge.html":{},"components/Multiselect.html":{}}}],["script",{"_index":414,"title":{},"body":{"index.html":{}}}],["secondary",{"_index":64,"title":{},"body":{"components/Alert.html":{},"components/Badge.html":{},"additional-documentation/is-alert.html":{},"additional-documentation/is-badge.html":{}}}],["seconds",{"_index":54,"title":{},"body":{"components/Alert.html":{},"additional-documentation/is-alert.html":{}}}],["secs",{"_index":518,"title":{},"body":{"additional-documentation/is-alert.html":{}}}],["see",{"_index":436,"title":{},"body":{"index.html":{}}}],["select",{"_index":158,"title":{},"body":{"interfaces/ILabelTo.html":{},"interfaces/ISelectItem.html":{},"components/Multiselect.html":{},"index.html":{},"additional-documentation/is-multiselect.html":{}}}],["select.items",{"_index":428,"title":{},"body":{"index.html":{}}}],["select={!this.isselected(item",{"_index":309,"title":{},"body":{"components/Multiselect.html":{}}}],["selected",{"_index":176,"title":{},"body":{"components/Multiselect.html":{},"additional-documentation/is-multiselect.html":{}}}],["selected={this.isselected(item",{"_index":305,"title":{},"body":{"components/Multiselect.html":{}}}],["selected[this.limit",{"_index":265,"title":{},"body":{"components/Multiselect.html":{}}}],["selectedchanged",{"_index":177,"title":{},"body":{"components/Multiselect.html":{},"additional-documentation/is-multiselect.html":{}}}],["selector",{"_index":106,"title":{},"body":{"components/Alert.html":{},"components/Badge.html":{},"components/HomeAbout.html":{},"components/Multiselect.html":{}}}],["sell",{"_index":469,"title":{},"body":{"license.html":{}}}],["setitems",{"_index":184,"title":{},"body":{"components/Multiselect.html":{}}}],["setitems(newvalue",{"_index":198,"title":{},"body":{"components/Multiselect.html":{}}}],["setposition",{"_index":128,"title":{},"body":{"components/HomeAbout.html":{}}}],["setselected",{"_index":185,"title":{},"body":{"components/Multiselect.html":{}}}],["setselected(newvalue",{"_index":203,"title":{},"body":{"components/Multiselect.html":{}}}],["settimeout",{"_index":270,"title":{},"body":{"components/Multiselect.html":{}}}],["shall",{"_index":479,"title":{},"body":{"license.html":{}}}],["show",{"_index":239,"title":{},"body":{"components/Multiselect.html":{},"additional-documentation/is-multiselect.html":{}}}],["shown",{"_index":227,"title":{},"body":{"components/Multiselect.html":{},"additional-documentation/is-multiselect.html":{}}}],["showselectedbadge",{"_index":178,"title":{},"body":{"components/Multiselect.html":{},"additional-documentation/is-multiselect.html":{}}}],["similar",{"_index":416,"title":{},"body":{"index.html":{}}}],["size",{"_index":529,"title":{},"body":{"additional-documentation/is-alert.html":{},"additional-documentation/is-badge.html":{}}}],["software",{"_index":455,"title":{},"body":{"license.html":{}}}],["source",{"_index":4,"title":{},"body":{"components/Alert.html":{},"components/Badge.html":{},"components/HomeAbout.html":{},"interfaces/ILabelTo.html":{},"interfaces/ISelectItem.html":{},"interfaces/IToggleOptions.html":{},"components/Multiselect.html":{},"index.html":{}}}],["src/.../utils.ts",{"_index":394,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/components",{"_index":372,"title":{},"body":{"contributing.html":{}}}],["src/components/alert/alert.tsx",{"_index":6,"title":{},"body":{"components/Alert.html":{},"coverage.html":{}}}],["src/components/alert/alert.tsx:12",{"_index":61,"title":{},"body":{"components/Alert.html":{}}}],["src/components/alert/alert.tsx:17",{"_index":42,"title":{},"body":{"components/Alert.html":{}}}],["src/components/alert/alert.tsx:22",{"_index":53,"title":{},"body":{"components/Alert.html":{}}}],["src/components/alert/alert.tsx:27",{"_index":45,"title":{},"body":{"components/Alert.html":{}}}],["src/components/alert/alert.tsx:32",{"_index":57,"title":{},"body":{"components/Alert.html":{}}}],["src/components/alert/alert.tsx:37",{"_index":79,"title":{},"body":{"components/Alert.html":{}}}],["src/components/alert/alert.tsx:39",{"_index":74,"title":{},"body":{"components/Alert.html":{}}}],["src/components/alert/alert.tsx:41",{"_index":77,"title":{},"body":{"components/Alert.html":{}}}],["src/components/alert/alert.tsx:51",{"_index":49,"title":{},"body":{"components/Alert.html":{}}}],["src/components/alert/alert.tsx:60",{"_index":30,"title":{},"body":{"components/Alert.html":{}}}],["src/components/alert/alert.tsx:68",{"_index":34,"title":{},"body":{"components/Alert.html":{}}}],["src/components/alert/alert.tsx:74",{"_index":35,"title":{},"body":{"components/Alert.html":{}}}],["src/components/badge/badge.tsx",{"_index":115,"title":{},"body":{"components/Badge.html":{},"coverage.html":{}}}],["src/components/badge/badge.tsx:12",{"_index":118,"title":{},"body":{"components/Badge.html":{}}}],["src/components/badge/badge.tsx:17",{"_index":120,"title":{},"body":{"components/Badge.html":{}}}],["src/components/badge/badge.tsx:22",{"_index":119,"title":{},"body":{"components/Badge.html":{}}}],["src/components/badge/badge.tsx:24",{"_index":117,"title":{},"body":{"components/Badge.html":{}}}],["src/components/multiselect/multiselect.interface.tsx",{"_index":156,"title":{},"body":{"interfaces/ILabelTo.html":{},"interfaces/ISelectItem.html":{},"coverage.html":{}}}],["src/components/multiselect/multiselect.tsx",{"_index":162,"title":{},"body":{"components/Multiselect.html":{},"coverage.html":{}}}],["src/components/multiselect/multiselect.tsx:104",{"_index":205,"title":{},"body":{"components/Multiselect.html":{}}}],["src/components/multiselect/multiselect.tsx:111",{"_index":195,"title":{},"body":{"components/Multiselect.html":{}}}],["src/components/multiselect/multiselect.tsx:204",{"_index":186,"title":{},"body":{"components/Multiselect.html":{}}}],["src/components/multiselect/multiselect.tsx:214",{"_index":197,"title":{},"body":{"components/Multiselect.html":{}}}],["src/components/multiselect/multiselect.tsx:25",{"_index":206,"title":{},"body":{"components/Multiselect.html":{}}}],["src/components/multiselect/multiselect.tsx:30",{"_index":233,"title":{},"body":{"components/Multiselect.html":{}}}],["src/components/multiselect/multiselect.tsx:35",{"_index":210,"title":{},"body":{"components/Multiselect.html":{}}}],["src/components/multiselect/multiselect.tsx:40",{"_index":234,"title":{},"body":{"components/Multiselect.html":{}}}],["src/components/multiselect/multiselect.tsx:45",{"_index":218,"title":{},"body":{"components/Multiselect.html":{}}}],["src/components/multiselect/multiselect.tsx:53",{"_index":219,"title":{},"body":{"components/Multiselect.html":{}}}],["src/components/multiselect/multiselect.tsx:58",{"_index":224,"title":{},"body":{"components/Multiselect.html":{}}}],["src/components/multiselect/multiselect.tsx:63",{"_index":214,"title":{},"body":{"components/Multiselect.html":{}}}],["src/components/multiselect/multiselect.tsx:68",{"_index":237,"title":{},"body":{"components/Multiselect.html":{}}}],["src/components/multiselect/multiselect.tsx:73",{"_index":230,"title":{},"body":{"components/Multiselect.html":{}}}],["src/components/multiselect/multiselect.tsx:75",{"_index":209,"title":{},"body":{"components/Multiselect.html":{}}}],["src/components/multiselect/multiselect.tsx:76",{"_index":212,"title":{},"body":{"components/Multiselect.html":{}}}],["src/components/multiselect/multiselect.tsx:77",{"_index":242,"title":{},"body":{"components/Multiselect.html":{}}}],["src/components/multiselect/multiselect.tsx:78",{"_index":240,"title":{},"body":{"components/Multiselect.html":{}}}],["src/components/multiselect/multiselect.tsx:84",{"_index":188,"title":{},"body":{"components/Multiselect.html":{}}}],["src/components/multiselect/multiselect.tsx:91",{"_index":235,"title":{},"body":{"components/Multiselect.html":{}}}],["src/components/multiselect/multiselect.tsx:94",{"_index":201,"title":{},"body":{"components/Multiselect.html":{}}}],["src/components/readmore/readmore.interface.ts",{"_index":161,"title":{},"body":{"interfaces/IToggleOptions.html":{},"coverage.html":{}}}],["src/components/readmore/readmore.tsx",{"_index":123,"title":{},"body":{"components/HomeAbout.html":{},"coverage.html":{}}}],["src/components/readmore/readmore.tsx:12",{"_index":145,"title":{},"body":{"components/HomeAbout.html":{}}}],["src/components/readmore/readmore.tsx:18",{"_index":138,"title":{},"body":{"components/HomeAbout.html":{}}}],["src/components/readmore/readmore.tsx:20",{"_index":137,"title":{},"body":{"components/HomeAbout.html":{}}}],["src/components/readmore/readmore.tsx:24",{"_index":132,"title":{},"body":{"components/HomeAbout.html":{}}}],["src/components/readmore/readmore.tsx:34",{"_index":130,"title":{},"body":{"components/HomeAbout.html":{}}}],["src/components/readmore/readmore.tsx:38",{"_index":131,"title":{},"body":{"components/HomeAbout.html":{}}}],["src/utils/utils.ts",{"_index":387,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["stage",{"_index":339,"title":{},"body":{"contributing.html":{}}}],["start",{"_index":351,"title":{},"body":{"contributing.html":{}}}],["started",{"_index":314,"title":{"contributing.html":{},"index.html":{},"license.html":{}},"body":{}}],["state",{"_index":73,"title":{},"body":{"components/Alert.html":{},"components/HomeAbout.html":{},"components/Multiselect.html":{}}}],["statements",{"_index":376,"title":{},"body":{"coverage.html":{}}}],["stencil/core",{"_index":84,"title":{},"body":{"components/Alert.html":{},"components/Badge.html":{},"components/HomeAbout.html":{},"components/Multiselect.html":{}}}],["stenciljs",{"_index":401,"title":{},"body":{"index.html":{},"additional-documentation/is-alert.html":{},"additional-documentation/is-badge.html":{},"additional-documentation/is-multiselect.html":{},"additional-documentation/is-readmore.html":{}}}],["string",{"_index":55,"title":{},"body":{"components/Alert.html":{},"components/Badge.html":{},"interfaces/ILabelTo.html":{},"interfaces/ISelectItem.html":{},"interfaces/IToggleOptions.html":{},"components/Multiselect.html":{},"miscellaneous/functions.html":{},"additional-documentation/is-alert.html":{},"additional-documentation/is-badge.html":{},"additional-documentation/is-multiselect.html":{}}}],["style",{"_index":297,"title":{},"body":{"components/Multiselect.html":{},"additional-documentation/is-badge.html":{},"additional-documentation/is-multiselect.html":{}}}],["styleurl",{"_index":9,"title":{},"body":{"components/Alert.html":{},"components/Badge.html":{},"components/HomeAbout.html":{},"components/Multiselect.html":{}}}],["subject",{"_index":474,"title":{},"body":{"license.html":{}}}],["sublicense",{"_index":467,"title":{},"body":{"license.html":{}}}],["submit",{"_index":346,"title":{},"body":{"contributing.html":{}}}],["substantial",{"_index":481,"title":{},"body":{"license.html":{}}}],["success",{"_index":65,"title":{},"body":{"components/Alert.html":{},"components/Badge.html":{},"additional-documentation/is-alert.html":{},"additional-documentation/is-badge.html":{}}}],["table",{"_index":391,"title":{},"body":{"coverage.html":{},"index.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":390,"title":{},"body":{"coverage.html":{}}}],["tabs",{"_index":441,"title":{},"body":{"index.html":{}}}],["tag",{"_index":8,"title":{},"body":{"components/Alert.html":{},"components/Badge.html":{},"components/HomeAbout.html":{},"components/Multiselect.html":{},"index.html":{}}}],["tags",{"_index":179,"title":{},"body":{"components/Multiselect.html":{}}}],["target",{"_index":193,"title":{},"body":{"components/Multiselect.html":{}}}],["td",{"_index":538,"title":{},"body":{"additional-documentation/is-badge.html":{},"additional-documentation/is-multiselect.html":{}}}],["template",{"_index":421,"title":{},"body":{"index.html":{}}}],["text",{"_index":60,"title":{},"body":{"components/Alert.html":{},"components/Badge.html":{},"components/HomeAbout.html":{},"components/Multiselect.html":{},"additional-documentation/is-alert.html":{},"additional-documentation/is-badge.html":{},"additional-documentation/is-multiselect.html":{},"additional-documentation/is-readmore.html":{}}}],["textclass",{"_index":144,"title":{},"body":{"components/HomeAbout.html":{},"interfaces/IToggleOptions.html":{},"additional-documentation/is-readmore.html":{}}}],["textclose",{"_index":142,"title":{},"body":{"components/HomeAbout.html":{},"interfaces/IToggleOptions.html":{},"additional-documentation/is-readmore.html":{}}}],["textinput",{"_index":257,"title":{},"body":{"components/Multiselect.html":{}}}],["textopen",{"_index":140,"title":{},"body":{"components/HomeAbout.html":{},"interfaces/IToggleOptions.html":{},"additional-documentation/is-readmore.html":{}}}],["textposition",{"_index":143,"title":{},"body":{"components/HomeAbout.html":{},"interfaces/IToggleOptions.html":{},"additional-documentation/is-readmore.html":{}}}],["textselected",{"_index":180,"title":{},"body":{"components/Multiselect.html":{}}}],["this.autoclose",{"_index":100,"title":{},"body":{"components/Alert.html":{}}}],["this.close",{"_index":97,"title":{},"body":{"components/Alert.html":{}}}],["this.close()}>{this.closetext",{"_index":93,"title":{},"body":{"components/Alert.html":{}}}],["this.closeable",{"_index":91,"title":{},"body":{"components/Alert.html":{}}}],["this.closed.emit(true",{"_index":88,"title":{},"body":{"components/Alert.html":{}}}],["this.closesecs",{"_index":98,"title":{},"body":{"components/Alert.html":{}}}],["this.contentexpanded",{"_index":148,"title":{},"body":{"components/HomeAbout.html":{}}}],["this.countdowntimerid",{"_index":95,"title":{},"body":{"components/Alert.html":{}}}],["this.el.attributes['auto",{"_index":94,"title":{},"body":{"components/Alert.html":{}}}],["this.el.remove",{"_index":89,"title":{},"body":{"components/Alert.html":{}}}],["this.filtereditems",{"_index":292,"title":{},"body":{"components/Multiselect.html":{}}}],["this.filtereditems.length",{"_index":302,"title":{},"body":{"components/Multiselect.html":{}}}],["this.filtereditems.map((item",{"_index":303,"title":{},"body":{"components/Multiselect.html":{}}}],["this.isexpanded",{"_index":269,"title":{},"body":{"components/Multiselect.html":{}}}],["this.isselected(item",{"_index":284,"title":{},"body":{"components/Multiselect.html":{}}}],["this.items",{"_index":248,"title":{},"body":{"components/Multiselect.html":{}}}],["this.items.filter(obj",{"_index":293,"title":{},"body":{"components/Multiselect.html":{}}}],["this.keyword",{"_index":290,"title":{},"body":{"components/Multiselect.html":{}}}],["this.labelselected",{"_index":306,"title":{},"body":{"components/Multiselect.html":{}}}],["this.labelto.remove",{"_index":308,"title":{},"body":{"components/Multiselect.html":{}}}],["this.labelto.select",{"_index":310,"title":{},"body":{"components/Multiselect.html":{}}}],["this.limit",{"_index":264,"title":{},"body":{"components/Multiselect.html":{}}}],["this.limittext(count",{"_index":267,"title":{},"body":{"components/Multiselect.html":{}}}],["this.max",{"_index":286,"title":{},"body":{"components/Multiselect.html":{}}}],["this.multiselect",{"_index":295,"title":{},"body":{"components/Multiselect.html":{}}}],["this.multiselect.contains(event.target",{"_index":255,"title":{},"body":{"components/Multiselect.html":{}}}],["this.onfiltereditems",{"_index":251,"title":{},"body":{"components/Multiselect.html":{}}}],["this.placeholder",{"_index":241,"title":{},"body":{"components/Multiselect.html":{}}}],["this.renderclosetext",{"_index":102,"title":{},"body":{"components/Alert.html":{}}}],["this.renderselecteditems",{"_index":277,"title":{},"body":{"components/Multiselect.html":{}}}],["this.selected",{"_index":250,"title":{},"body":{"components/Multiselect.html":{}}}],["this.selected.filter(obj",{"_index":285,"title":{},"body":{"components/Multiselect.html":{}}}],["this.selected.length",{"_index":263,"title":{},"body":{"components/Multiselect.html":{}}}],["this.selected.map((item",{"_index":261,"title":{},"body":{"components/Multiselect.html":{}}}],["this.selected.some(obj",{"_index":280,"title":{},"body":{"components/Multiselect.html":{}}}],["this.selectedchanged.emit(this.selected",{"_index":287,"title":{},"body":{"components/Multiselect.html":{}}}],["this.showselectedbadge",{"_index":275,"title":{},"body":{"components/Multiselect.html":{}}}],["this.tags",{"_index":276,"title":{},"body":{"components/Multiselect.html":{}}}],["this.text",{"_index":122,"title":{},"body":{"components/Badge.html":{}}}],["this.textinput",{"_index":289,"title":{},"body":{"components/Multiselect.html":{}}}],["this.textinput.focus",{"_index":271,"title":{},"body":{"components/Multiselect.html":{}}}],["this.textselected",{"_index":249,"title":{},"body":{"components/Multiselect.html":{}}}],["this.toggle",{"_index":150,"title":{},"body":{"components/HomeAbout.html":{}}}],["this.toggle(!this.isexpanded)}>&nbsp",{"_index":301,"title":{},"body":{"components/Multiselect.html":{}}}],["this.toggle(false",{"_index":256,"title":{},"body":{"components/Multiselect.html":{}}}],["this.toggle(true",{"_index":296,"title":{},"body":{"components/Multiselect.html":{}}}],["this.toggleoptions.textclose",{"_index":151,"title":{},"body":{"components/HomeAbout.html":{}}}],["this.toggleoptions.textopen",{"_index":152,"title":{},"body":{"components/HomeAbout.html":{}}}],["this.toggleoptions.textposition",{"_index":149,"title":{},"body":{"components/HomeAbout.html":{}}}],["this.updateitems(item",{"_index":304,"title":{},"body":{"components/Multiselect.html":{}}}],["this.updateitems(item)}>x",{"_index":262,"title":{},"body":{"components/Multiselect.html":{}}}],["this.updateplaceholder",{"_index":252,"title":{},"body":{"components/Multiselect.html":{}}}],["tip",{"_index":349,"title":{},"body":{"contributing.html":{}}}],["toggle",{"_index":129,"title":{},"body":{"components/HomeAbout.html":{},"components/Multiselect.html":{},"additional-documentation/is-readmore.html":{}}}],["toggleoptions",{"_index":127,"title":{},"body":{"components/HomeAbout.html":{},"additional-documentation/is-readmore.html":{}}}],["top",{"_index":400,"title":{},"body":{"index.html":{},"additional-documentation/is-alert.html":{},"additional-documentation/is-badge.html":{}}}],["tort",{"_index":504,"title":{},"body":{"license.html":{}}}],["true",{"_index":12,"title":{},"body":{"components/Alert.html":{},"components/Badge.html":{},"components/Multiselect.html":{},"additional-documentation/is-alert.html":{},"additional-documentation/is-badge.html":{},"additional-documentation/is-multiselect.html":{}}}],["type",{"_index":36,"title":{},"body":{"components/Alert.html":{},"components/Badge.html":{},"components/HomeAbout.html":{},"interfaces/ILabelTo.html":{},"interfaces/ISelectItem.html":{},"interfaces/IToggleOptions.html":{},"components/Multiselect.html":{},"coverage.html":{},"additional-documentation/is-alert.html":{},"additional-documentation/is-badge.html":{},"additional-documentation/is-multiselect.html":{},"additional-documentation/is-readmore.html":{}}}],["u2573",{"_index":56,"title":{},"body":{"components/Alert.html":{},"additional-documentation/is-alert.html":{}}}],["u2713",{"_index":213,"title":{},"body":{"components/Multiselect.html":{},"additional-documentation/is-multiselect.html":{}}}],["undefined",{"_index":519,"title":{},"body":{"additional-documentation/is-alert.html":{},"additional-documentation/is-badge.html":{},"additional-documentation/is-multiselect.html":{}}}],["unpkg",{"_index":410,"title":{},"body":{"index.html":{}}}],["updateitems",{"_index":283,"title":{},"body":{"components/Multiselect.html":{}}}],["updateplaceholder",{"_index":273,"title":{},"body":{"components/Multiselect.html":{}}}],["use",{"_index":419,"title":{},"body":{"index.html":{},"license.html":{}}}],["used",{"_index":536,"title":{},"body":{"additional-documentation/is-badge.html":{}}}],["user",{"_index":207,"title":{},"body":{"components/Multiselect.html":{},"additional-documentation/is-multiselect.html":{}}}],["using",{"_index":408,"title":{},"body":{"index.html":{}}}],["value",{"_index":39,"title":{},"body":{"components/Alert.html":{},"components/Badge.html":{},"components/HomeAbout.html":{},"components/Multiselect.html":{}}}],["var",{"_index":103,"title":{},"body":{"components/Alert.html":{},"components/Badge.html":{},"components/HomeAbout.html":{},"components/Multiselect.html":{},"index.html":{}}}],["void",{"_index":33,"title":{},"body":{"components/Alert.html":{},"components/HomeAbout.html":{},"components/Multiselect.html":{}}}],["warning",{"_index":66,"title":{},"body":{"components/Alert.html":{},"components/Badge.html":{},"additional-documentation/is-alert.html":{},"additional-documentation/is-badge.html":{}}}],["warranties",{"_index":489,"title":{},"body":{"license.html":{}}}],["warranty",{"_index":484,"title":{},"body":{"license.html":{}}}],["watch",{"_index":243,"title":{},"body":{"components/Multiselect.html":{}}}],["watch('items",{"_index":200,"title":{},"body":{"components/Multiselect.html":{}}}],["watch('selected",{"_index":204,"title":{},"body":{"components/Multiselect.html":{}}}],["web",{"_index":358,"title":{},"body":{"contributing.html":{},"index.html":{}}}],["weight",{"_index":530,"title":{},"body":{"additional-documentation/is-alert.html":{},"additional-documentation/is-badge.html":{}}}],["whether",{"_index":501,"title":{},"body":{"license.html":{}}}],["white",{"_index":69,"title":{},"body":{"components/Alert.html":{},"components/Badge.html":{},"additional-documentation/is-alert.html":{},"additional-documentation/is-badge.html":{}}}],["width:4px",{"_index":540,"title":{},"body":{"additional-documentation/is-badge.html":{},"additional-documentation/is-multiselect.html":{}}}],["window.clearinterval(this.countdowntimerid",{"_index":101,"title":{},"body":{"components/Alert.html":{}}}],["window.settimeout",{"_index":96,"title":{},"body":{"components/Alert.html":{}}}],["within",{"_index":222,"title":{},"body":{"components/Multiselect.html":{},"additional-documentation/is-multiselect.html":{}}}],["without",{"_index":458,"title":{},"body":{"license.html":{}}}],["www",{"_index":364,"title":{},"body":{"contributing.html":{}}}],["yours",{"_index":337,"title":{},"body":{"contributing.html":{}}}],["zindex",{"_index":298,"title":{},"body":{"components/Multiselect.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"components/Alert.html":{"url":"components/Alert.html","title":"component - Alert","body":"\n                   \n\n\n\n\n\n  Components\n  Alert\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n    File\n\n\n    src/components/alert/alert.tsx\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n            \n                tag\n                is-alert\n            \n\n            \n                styleUrl\n                alert.scss\n            \n\n\n            \n                scoped\n                true\n            \n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                autoClose\n                            \n                            \n                                closeable\n                            \n                            \n                                closed\n                            \n                            \n                                closeSecs\n                            \n                            \n                                    Optional\n                                closeText\n                            \n                            \n                                    Optional\n                                color\n                            \n                            \n                                countDownTimerId\n                            \n                            \n                                el\n                            \n                            \n                                    Optional\n                                rounded\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                componentDidLoad\n                            \n                            \n                                componentDidUnload\n                            \n                            \n                                render\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            componentDidLoad\n                        \n                        \n                    \n                \n            \n            \n                \ncomponentDidLoad()\n                \n            \n\n\n            \n                \n                    Defined in src/components/alert/alert.tsx:60\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            componentDidUnload\n                        \n                        \n                    \n                \n            \n            \n                \ncomponentDidUnload()\n                \n            \n\n\n            \n                \n                    Defined in src/components/alert/alert.tsx:68\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            render\n                        \n                        \n                    \n                \n            \n            \n                \nrender()\n                \n            \n\n\n            \n                \n                    Defined in src/components/alert/alert.tsx:74\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            autoClose\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : true\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Prop()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/components/alert/alert.tsx:17\n                            \n                        \n\n                \n                    \n                        If true alert will close automatically.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            closeable\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : true\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Prop()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/components/alert/alert.tsx:27\n                            \n                        \n\n                \n                    \n                        If closable or not.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            closed\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         EventEmitter\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Event()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/components/alert/alert.tsx:51\n                            \n                        \n\n                \n                    \n                        Emitted when the alert is closed.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            closeSecs\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 3\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Prop()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/components/alert/alert.tsx:22\n                            \n                        \n\n                \n                    \n                        Number of seconds to close alert automatically if autoClose true.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            closeText\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : '\\u2573'\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Prop()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/components/alert/alert.tsx:32\n                            \n                        \n\n                \n                    \n                        Customized close button text.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            color\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Prop()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/components/alert/alert.tsx:12\n                            \n                        \n\n                \n                    \n                        The color options are: \"primary\", \"secondary\", \"success\", \"warning\", \"error\", \"light\", \"info\", \"white\", \"black\", and \"dark\".\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            countDownTimerId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     null\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @State()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/components/alert/alert.tsx:39\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            el\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     HTMLElement\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Element()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/components/alert/alert.tsx:41\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            rounded\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Prop()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/components/alert/alert.tsx:37\n                            \n                        \n\n                \n                    \n                        If true, make the alert rounded.\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, Host, Prop, State, Event, EventEmitter, Element, h } from '@stencil/core';\n\n@Component({\n  tag: 'is-alert',\n  styleUrl: 'alert.scss',\n  scoped: true\n})\nexport class Alert {\n  /**\n     * The color options are: `\"primary\"`, `\"secondary\"`, `\"success\"`, `\"warning\"`, `\"error\"`, `\"light\"`, `\"info\"`, `\"white\"`, `\"black\"`, and `\"dark\"`.\n     */\n  @Prop() color?: string;\n\n  /**\n   * If `true` alert will close automatically.\n   */\n  @Prop() autoClose: boolean = true;\n\n  /**\n   * Number of seconds to close alert automatically if autoClose `true`.\n   */\n  @Prop() closeSecs: number = 3;\n\n  /**\n   * If closable or not.\n   */\n  @Prop() closeable: boolean = true;\n\n  /**\n   * Customized close button text.\n   */\n  @Prop() closeText?: string = '\\u2573';\n\n  /**\n   * If `true`, make the alert rounded.\n   */\n  @Prop() rounded?: boolean = false;\n\n  @State() countDownTimerId = null;\n\n  @Element() el: HTMLElement;\n\n  private close = () => {\n    this.closed.emit(true);\n    this.el.remove()\n  }\n\n  /**\n   * Emitted when the alert is closed.\n   */\n  @Event() closed: EventEmitter;\n\n  private renderCloseText = () => {\n    if (this.closeable) {\n      return  this.close()}>{this.closeText}\n    }\n    return null;\n  };\n\n  componentDidLoad() {\n    if (this.el.attributes['auto-close']) {\n      this.countDownTimerId = window.setTimeout(() => {\n        this.close()\n      }, this.closeSecs * 1000)\n    }\n  }\n\n  componentDidUnload() {\n    if (this.autoClose) {\n      window.clearInterval(this.countDownTimerId);\n    }\n  }\n\n  render() {\n    return (\n      \n        \n          \n        \n        {this.renderCloseText()}\n      \n    );\n  }\n}\n\n    \n\n\n\n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'Alert', 'selector': ''},{'name': 'Badge', 'selector': ''},{'name': 'HomeAbout', 'selector': ''},{'name': 'Multiselect', 'selector': ''}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'Alert'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/Badge.html":{"url":"components/Badge.html","title":"component - Badge","body":"\n                   \n\n\n\n\n\n  Components\n  Badge\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n    File\n\n\n    src/components/badge/badge.tsx\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n            \n                tag\n                is-badge\n            \n\n            \n                styleUrl\n                badge.scss\n            \n\n\n            \n                scoped\n                true\n            \n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                color\n                            \n                            \n                                    Optional\n                                rounded\n                            \n                            \n                                text\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                render\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            render\n                        \n                        \n                    \n                \n            \n            \n                \nrender()\n                \n            \n\n\n            \n                \n                    Defined in src/components/badge/badge.tsx:24\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            color\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Prop()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/components/badge/badge.tsx:12\n                            \n                        \n\n                \n                    \n                        The color options are: \"primary\", \"secondary\", \"success\", \"warning\", \"error\", \"light\", \"info\", \"white\", \"black\", and \"dark\".\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            rounded\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Prop()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/components/badge/badge.tsx:22\n                            \n                        \n\n                \n                    \n                        If true, make the badge rounded.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            text\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Prop()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/components/badge/badge.tsx:17\n                            \n                        \n\n                \n                    \n                        The text to display in the badge.\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, Host, Prop, h } from '@stencil/core';\n\n@Component({\n  tag: 'is-badge',\n  styleUrl: 'badge.scss',\n  scoped: true\n})\nexport class Badge {\n  /**\n     * The color options are: `\"primary\"`, `\"secondary\"`, `\"success\"`, `\"warning\"`, `\"error\"`, `\"light\"`, `\"info\"`, `\"white\"`, `\"black\"`, and `\"dark\"`.\n     */\n  @Prop() color?: string;\n\n  /**\n   * The text to display in the badge.\n   */\n  @Prop() text: string;\n\n  /**\n   * If `true`, make the badge rounded.\n   */\n  @Prop() rounded?: boolean = false;\n\n  render() {\n    return (\n      \n        {this.text}\n      \n    );\n  }\n}\n\n    \n\n\n\n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'Alert', 'selector': ''},{'name': 'Badge', 'selector': ''},{'name': 'HomeAbout', 'selector': ''},{'name': 'Multiselect', 'selector': ''}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'Badge'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/HomeAbout.html":{"url":"components/HomeAbout.html","title":"component - HomeAbout","body":"\n                   \n\n\n\n\n\n  Components\n  HomeAbout\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n    File\n\n\n    src/components/readmore/readmore.tsx\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n            \n                tag\n                is-readmore\n            \n\n            \n                styleUrl\n                readmore.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                contentExpanded\n                            \n                            \n                                toggleOptions\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                componentDidLoad\n                            \n                            \n                                render\n                            \n                            \n                                setPosition\n                            \n                            \n                                toggle\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            componentDidLoad\n                        \n                        \n                    \n                \n            \n            \n                \ncomponentDidLoad()\n                \n            \n\n\n            \n                \n                    Defined in src/components/readmore/readmore.tsx:34\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            render\n                        \n                        \n                    \n                \n            \n            \n                \nrender()\n                \n            \n\n\n            \n                \n                    Defined in src/components/readmore/readmore.tsx:38\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setPosition\n                        \n                        \n                    \n                \n            \n            \n                \nsetPosition()\n                \n            \n\n\n            \n                \n                    Defined in src/components/readmore/readmore.tsx:24\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     \"align-right\" | \"align-center\" | \"align-left\"\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            toggle\n                        \n                        \n                    \n                \n            \n            \n                \ntoggle()\n                \n            \n\n\n            \n                \n                    Defined in src/components/readmore/readmore.tsx:20\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            contentExpanded\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @State()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/components/readmore/readmore.tsx:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            toggleOptions\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         IToggleOptions\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    textOpen: 'Open',\n    textClose: 'Close',\n    textPosition: 'left',\n    textClass: ''\n  }\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Prop()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/components/readmore/readmore.tsx:12\n                            \n                        \n\n                \n                    \n                        The options to config toggle text.\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, Host, Prop, State, h } from '@stencil/core';\nimport { IToggleOptions } from './readmore.interface';\n\n@Component({\n  tag: 'is-readmore',\n  styleUrl: 'readmore.scss'\n})\nexport class HomeAbout {\n  /**\n   * The options to config toggle text.\n   */\n  @Prop() toggleOptions: IToggleOptions = {\n    textOpen: 'Open',\n    textClose: 'Close',\n    textPosition: 'left',\n    textClass: ''\n  };\n  @State() contentExpanded: boolean;\n\n  toggle() {\n    this.contentExpanded = !this.contentExpanded;\n  }\n\n  setPosition() {\n    if (this.toggleOptions.textPosition === 'right') {\n      return 'align-right';\n    } else if (this.toggleOptions.textPosition === 'center') {\n      return 'align-center';\n    } else {\n      return 'align-left';\n    }\n  }\n\n  componentDidLoad() {\n    this.contentExpanded = false;\n  }\n\n  render() {\n    return (\n      \n        \n          \n        \n         this.toggle()}>\n          {this.contentExpanded ? this.toggleOptions.textClose : this.toggleOptions.textOpen}\n        \n      \n    );\n  }\n}\n\n    \n\n\n\n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'Alert', 'selector': ''},{'name': 'Badge', 'selector': ''},{'name': 'HomeAbout', 'selector': ''},{'name': 'Multiselect', 'selector': ''}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'HomeAbout'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ILabelTo.html":{"url":"interfaces/ILabelTo.html","title":"interface - ILabelTo","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ILabelTo\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/components/multiselect/multiselect.interface.tsx\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        remove\n                                \n                                \n                                        select\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        remove\n                                    \n                                \n                                \n                                    \n                                        remove:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        select\n                                    \n                                \n                                \n                                    \n                                        select:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        interface ISelectItem {\n  id: number;\n  name: string;\n}\n\ninterface ILabelTo {\n  remove: string;\n  select: string;\n}\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ISelectItem.html":{"url":"interfaces/ISelectItem.html","title":"interface - ISelectItem","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ISelectItem\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/components/multiselect/multiselect.interface.tsx\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        id\n                                \n                                \n                                        name\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        interface ISelectItem {\n  id: number;\n  name: string;\n}\n\ninterface ILabelTo {\n  remove: string;\n  select: string;\n}\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IToggleOptions.html":{"url":"interfaces/IToggleOptions.html","title":"interface - IToggleOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  IToggleOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/components/readmore/readmore.interface.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        textClass\n                                \n                                \n                                        textClose\n                                \n                                \n                                        textOpen\n                                \n                                \n                                        textPosition\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        textClass\n                                    \n                                \n                                \n                                    \n                                        textClass:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        textClose\n                                    \n                                \n                                \n                                    \n                                        textClose:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        textOpen\n                                    \n                                \n                                \n                                    \n                                        textOpen:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        textPosition\n                                    \n                                \n                                \n                                    \n                                        textPosition:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface IToggleOptions {\n    textOpen: string;\n    textClose: string;\n    textPosition: string;\n    textClass: string;\n}\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/Multiselect.html":{"url":"components/Multiselect.html","title":"component - Multiselect","body":"\n                   \n\n\n\n\n\n  Components\n  Multiselect\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n    File\n\n\n    src/components/multiselect/multiselect.tsx\n\n\n\n\n    \n        Implements\n    \n    \n                ComponentInterface\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n            \n                tag\n                is-multiselect\n            \n\n            \n                styleUrl\n                multiselect.scss\n            \n\n\n            \n                scoped\n                true\n            \n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                disabled\n                            \n                            \n                                isExpanded\n                            \n                            \n                                items\n                            \n                            \n                                keyword\n                            \n                            \n                                labelSelected\n                            \n                            \n                                labelTo\n                            \n                            \n                                limit\n                            \n                            \n                                limitText\n                            \n                            \n                                max\n                            \n                            \n                                placeholder\n                            \n                            \n                                selected\n                            \n                            \n                                selectedChanged\n                            \n                            \n                                showSelectedBadge\n                            \n                            \n                                tags\n                            \n                            \n                                textSelected\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                componentWillLoad\n                            \n                            \n                                getSelected\n                            \n                            \n                                handleClick\n                            \n                            \n                                render\n                            \n                            \n                                setItems\n                            \n                            \n                                setSelected\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            componentWillLoad\n                        \n                        \n                    \n                \n            \n            \n                \ncomponentWillLoad()\n                \n            \n\n\n            \n                \n                    Defined in src/components/multiselect/multiselect.tsx:204\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getSelected\n                        \n                        \n                    \n                \n            \n            \n                \ngetSelected()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Method()\n                \n            \n\n            \n                \n                    Defined in src/components/multiselect/multiselect.tsx:84\n                \n            \n\n\n            \n                \n                    Get the selected items.\n\n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            handleClick\n                        \n                        \n                    \n                \n            \n            \n                \nhandleClick(event: MouseEvent)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Listen('click', {target: 'document'})\n                \n            \n\n            \n                \n                    Defined in src/components/multiselect/multiselect.tsx:111\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                            MouseEvent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            render\n                        \n                        \n                    \n                \n            \n            \n                \nrender()\n                \n            \n\n\n            \n                \n                    Defined in src/components/multiselect/multiselect.tsx:214\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setItems\n                        \n                        \n                    \n                \n            \n            \n                \nsetItems(newValue: ISelectItem[], oldValue: ISelectItem[])\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Watch('items')\n                \n            \n\n            \n                \n                    Defined in src/components/multiselect/multiselect.tsx:94\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    newValue\n                                    \n                                                ISelectItem[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    oldValue\n                                    \n                                                ISelectItem[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setSelected\n                        \n                        \n                    \n                \n            \n            \n                \nsetSelected(newValue: ISelectItem[], oldValue: ISelectItem[])\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Watch('selected')\n                \n            \n\n            \n                \n                    Defined in src/components/multiselect/multiselect.tsx:104\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    newValue\n                                    \n                                                ISelectItem[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    oldValue\n                                    \n                                                ISelectItem[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            disabled\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Prop()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/components/multiselect/multiselect.tsx:25\n                            \n                        \n\n                \n                    \n                        If true, the user cannot interact with the select.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isExpanded\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @State()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/components/multiselect/multiselect.tsx:75\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            items\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ISelectItem[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Prop()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/components/multiselect/multiselect.tsx:35\n                            \n                        \n\n                \n                    \n                        The options list items.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            keyword\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : ''\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @State()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/components/multiselect/multiselect.tsx:76\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            labelSelected\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : '\\u2713'\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Prop()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/components/multiselect/multiselect.tsx:63\n                            \n                        \n\n                \n                    \n                        The label when option is selected.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            labelTo\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ILabelTo\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    remove: 'Click to Remove',\n    select: 'Click to Select'\n  }\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Prop()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/components/multiselect/multiselect.tsx:45\n                            \n                        \n\n                \n                    \n                        The label to remove or select.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            limit\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 3\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Prop()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/components/multiselect/multiselect.tsx:53\n                            \n                        \n\n                \n                    \n                        Limit the display of selected options. The rest will be hidden within the limitText string.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            limitText\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Function\n\n                        \n                    \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Prop()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/components/multiselect/multiselect.tsx:58\n                            \n                        \n\n                \n                    \n                        Function that process the message shown when selected elements pass the defined limit.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            max\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Prop()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/components/multiselect/multiselect.tsx:73\n                            \n                        \n\n                \n                    \n                        Maximum selected items can be selected.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            placeholder\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : \"Pick some\"\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Prop()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/components/multiselect/multiselect.tsx:30\n                            \n                        \n\n                \n                    \n                        The text to display when not selected items.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            selected\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ISelectItem[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Prop()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/components/multiselect/multiselect.tsx:40\n                            \n                        \n\n                \n                    \n                        The selected items.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            selectedChanged\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         EventEmitter\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Event()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/components/multiselect/multiselect.tsx:91\n                            \n                        \n\n                \n                    \n                        Emitted when the selected items has changed.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            showSelectedBadge\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Prop()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/components/multiselect/multiselect.tsx:68\n                            \n                        \n\n                \n                    \n                        If true, The badges will show selected items.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            tags\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     null\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @State()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/components/multiselect/multiselect.tsx:78\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            textSelected\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : this.placeholder\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @State()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/components/multiselect/multiselect.tsx:77\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import {\n  Component,\n  ComponentInterface,\n  Host,\n  Prop,\n  State,\n  Method,\n  Watch,\n  Listen,\n  Event,\n  EventEmitter,\n  h\n} from '@stencil/core';\n\n@Component({\n  tag: 'is-multiselect',\n  styleUrl: 'multiselect.scss',\n  scoped: true\n})\nexport class Multiselect implements ComponentInterface {\n\n  /**\n   * If `true`, the user cannot interact with the select.\n   */\n  @Prop() disabled = false;\n\n  /**\n   * The text to display when not selected items.\n   */\n  @Prop() placeholder: string = \"Pick some\";\n\n  /**\n   * The options list items.\n   */\n  @Prop() items: ISelectItem[] = [];\n\n  /**\n   * The selected items.\n   */\n  @Prop() selected: ISelectItem[] = [];\n\n  /**\n   * The label to remove or select.\n   */\n  @Prop() labelTo: ILabelTo = {\n    remove: 'Click to Remove',\n    select: 'Click to Select'\n  };\n\n  /**\n   * Limit the display of selected options. The rest will be hidden within the limitText string.\n   */\n  @Prop() limit: number = 3;\n\n  /**\n   * Function that process the message shown when selected elements pass the defined limit.\n   */\n  @Prop() limitText: Function = (count: number) => 'and ' + count + ' more';\n\n  /**\n   * The label when option is selected.\n   */\n  @Prop() labelSelected: string = '\\u2713';\n\n  /**\n   * If `true`, The badges will show selected items.\n   */\n  @Prop() showSelectedBadge: boolean = false;\n\n  /**\n   * Maximum selected items can be selected.\n   */\n  @Prop() max: number;\n\n  @State() isExpanded: boolean = false;\n  @State() keyword: string = '';\n  @State() textSelected: string = this.placeholder;\n  @State() tags = null;\n\n  /**\n   * Get the selected items.\n   */\n  @Method()\n  getSelected(): Promise {\n    return Promise.resolve(this.selected);\n  }\n\n  /**\n   * Emitted when the selected items has changed.\n   */\n  @Event() selectedChanged: EventEmitter;\n\n  @Watch('items')\n  setItems(newValue: ISelectItem[], oldValue: ISelectItem[]) {\n    if (newValue !== oldValue) {\n      this.items = newValue;\n      this.textSelected = this.placeholder;\n      this.selected = [];\n      this.onFilteredItems();\n    }\n  }\n\n  @Watch('selected')\n  setSelected(newValue: ISelectItem[], oldValue: ISelectItem[]) {\n    if (newValue !== oldValue) {\n      this.updatePlaceholder();\n    }\n  }\n\n  @Listen('click', {target: 'document'})\n  handleClick(event: MouseEvent) {\n    const isClickInside = this.multiselect.contains(event.target);\n\n    if (!isClickInside) {\n      this.toggle(false, true);\n    }\n  }\n\n  private textInput?: HTMLInputElement;\n  private multiselect?: any;\n  private filteredItems: ISelectItem[] = this.items;\n\n  private renderSelectedItems = () => {\n    let selected = [];\n    if (this.selected) {\n      this.selected.map((item, i) => {\n        if (i \n              \n               this.updateItems(item)}>x\n            \n          );\n        } else {\n          const count = this.selected.length - this.limit;\n          selected[this.limit + 1] = {this.limitText(count)}\n        }\n      });\n    }\n    return selected;\n  };\n\n  private toggle = (state: boolean, outside?: boolean) => {\n    this.isExpanded = state;\n    this.updatePlaceholder();\n    if (!outside) {\n      if (this.isExpanded) {\n        setTimeout(() => {\n          this.textInput.focus();\n        }, 200);\n      }\n    }\n  };\n\n  private updatePlaceholder() {\n    this.textSelected = this.placeholder;\n    if (this.selected && this.selected.length > 0 && !this.isExpanded) {\n      this.textSelected = this.selected.length + ' options selected';\n    }\n    if (this.showSelectedBadge) {\n      this.tags = this.renderSelectedItems();\n    }\n    if (this.isExpanded) {\n      this.textSelected = '';\n    }\n  }\n\n  private isSelected = (item: ISelectItem) => {\n    if (this.selected) {\n      return this.selected.some(obj => obj.id === item.id)\n    }\n    return false;\n  };\n\n  private updateItems = (item: ISelectItem) => {\n    if (this.isSelected(item)) {\n      this.selected = this.selected.filter(obj => {\n        return obj.id !== item.id;\n      });\n    } else {\n      if (this.selected.length !== this.max) {\n        if (this.selected && this.selected.length > 0) {\n          this.selected = [...this.selected, item];\n        } else {\n          this.selected = [item];\n        }\n      }\n    }\n    this.selectedChanged.emit(this.selected);\n  };\n\n  private onFilteredItems = () => {\n    const element = this.textInput;\n    if (element) {\n      this.keyword = element.value;\n      this.filteredItems = this.items.filter(obj => {\n        return obj['name'].toLowerCase().includes(this.keyword.toLowerCase());\n      });\n    } else {\n      this.filteredItems = this.items;\n    }\n  };\n\n  componentWillLoad() {\n    this.textSelected = this.placeholder;\n    if (this.selected.length > 0 && !this.isExpanded) {\n      this.textSelected = this.selected.length + ' options selected';\n    }\n    if (this.showSelectedBadge) {\n      this.tags = this.renderSelectedItems();\n    }\n  }\n\n  render() {\n    return (\n       this.multiselect = el}>\n        \n\n           this.toggle(true)} style={{\n            zIndex: this.isExpanded ? '-1' : '0'\n          }}>\n          \n\n          \n            {this.showSelectedBadge && this.selected && this.selected.length > 0 ? this.tags : this.textSelected}\n          \n\n          {this.isExpanded &&\n          \n               this.onFilteredItems()}\n                  ref={el => this.textInput = el}\n                  placeholder={this.placeholder}\n              />\n          \n          }\n           this.toggle(!this.isExpanded)}>&nbsp;\n        \n        {\n          this.isExpanded &&\n          \n              \n                {\n                  this.filteredItems.length > 0 ? this.filteredItems.map((item: ISelectItem, i) => {\n                    return (\n                       this.updateItems(item)}\n                          label-selected={this.isSelected(item) ? this.labelSelected : null}\n                          label-to-remove={this.isSelected(item) ? this.labelTo.remove : null}\n                          label-to-select={!this.isSelected(item) ? this.labelTo.select : null}\n                      >{item.name}\n                    )\n                  }) : Not found\n                }\n              \n          \n        }\n      \n    );\n  }\n}\n\n    \n\n\n\n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'Alert', 'selector': ''},{'name': 'Badge', 'selector': ''},{'name': 'HomeAbout', 'selector': ''},{'name': 'Multiselect', 'selector': ''}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'Multiselect'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"contributing.html":{"url":"contributing.html","title":"getting-started - contributing","body":"\n                   \n\nContributing\n:raising_hand:   How to help:\n\nFork it!\nClone your forked repo to your local\nCreate your feature branch: git checkout -b my-new-feature\nDevelop your new awesome feature\nBuild it npm run build (it will make a new files beside yours but its ok)\nStage your changes: git add .\nCommit your changes: git commit -m 'Add some feature'\nPush to the branch: git push origin my-new-feature\nSubmit a pull request!\n\nTip: \n\nif you accidentally run npm start before committing your changes, run npm run build again then commit.\nYou can browse any issue you can help at\nhttps://github.com/isnur/is-web-component/issues\n\n:no_entry_sign:   Don't edit the files in dist/, www/ - they are generated:\nWhat you can do\n:building_construction:   Building the project\n\nyou can add some new awesome components\nyou can edit or add some props,function and attribute for each components in src/components/\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/components/alert/alert.tsx\n            \n            component\n            Alert\n            \n                53 %\n                (7/13)\n            \n        \n        \n            \n                \n                src/components/badge/badge.tsx\n            \n            component\n            Badge\n            \n                60 %\n                (3/5)\n            \n        \n        \n            \n                \n                src/components/multiselect/multiselect.interface.tsx\n            \n            interface\n            ILabelTo\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/components/multiselect/multiselect.interface.tsx\n            \n            interface\n            ISelectItem\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/components/multiselect/multiselect.tsx\n            \n            component\n            Multiselect\n            \n                54 %\n                (12/22)\n            \n        \n        \n            \n                \n                src/components/readmore/readmore.interface.ts\n            \n            interface\n            IToggleOptions\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/components/readmore/readmore.tsx\n            \n            component\n            HomeAbout\n            \n                14 %\n                (1/7)\n            \n        \n        \n            \n                \n                src/utils/utils.ts\n            \n            function\n            format\n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            format   (src/.../utils.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/utils/utils.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            format\n                        \n                        \n                    \n                \n            \n            \n                \nformat(first, middle, last)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    first\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    middle\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    last\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nIs-Web-Component\n  \n    \nOpen source web components for building web applications. Build on top StencilJS.\nDemo\nhttps://is-web-component.isnur.com/\nDocumentation\nhttps://is-web-component.isnur.com/docs/\nInstallation\nYou can install using NPM:\nnpm i is-web-component --saveYou can install using unpkg cdn:\nhttps://unpkg.com/is-web-componentUsage\nScript tag\n\nPut a script tag similar to this\n  \n  in the head of your index.html\n\nThen you can use the element anywhere in your template, JSX, html etc.\n  is-badge\n  \n\n  is-multiselect\n  \n\n  \n    var select = document.getElementById(\"select\");\n    var data = [{\n      id: 1,\n      name: 'Data 1'\n    }, {\n      id: 2,\n      name: 'Data 2'\n    }, {\n      id: 3,\n      name: 'Data 3'\n    }];\n    select.items = data;\n  \n\nContributing\n\nRead the project Code of Conduct and remember to be nice to one another.\nSee CONTRIBUTING.md for info about how to contribute to this project.\n\nComponents\n\n is-alert\n is-badge\n is-modal\n is-multiselect\n is-pagination\n is-readmore\n is-table\n is-tabs\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"license.html":{"url":"license.html","title":"getting-started - license","body":"\n                   \n\nMIT License\nCopyright (c) 2018\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n\n\n    \n        \n            \n                \n                    \n                    4 Components\n                \n            \n        \n        \n            \n                \n                    \n                    3 Interfaces\n                \n            \n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/is-alert.html":{"url":"additional-documentation/is-alert.html","title":"additional-page - is-alert","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\nis-alert\n\n\n\nProperties\n\n\n\nProperty\nAttribute\nDescription\nType\nDefault\n\n\n\n\nautoClose\nauto-close\nIf true alert will close automatically.\nboolean\ntrue\n\n\ncloseSecs\nclose-secs\nNumber of seconds to close alert automatically if autoClose true.\nnumber\n3\n\n\ncloseText\nclose-text\nCustomized close button text.\nstring\n'\\u2573'\n\n\ncloseable\ncloseable\nIf closable or not.\nboolean\ntrue\n\n\ncolor\ncolor\nThe color options are: \"primary\", \"secondary\", \"success\", \"warning\", \"error\", \"light\", \"info\", \"white\", \"black\", and \"dark\".\nstring\nundefined\n\n\nrounded\nrounded\nIf true, make the alert rounded.\nboolean\nfalse\n\n\n\nEvents\n\n\n\nEvent\nDescription\nType\n\n\n\n\nclosed\nEmitted when the alert is closed.\nCustomEvent\n\n\n\nCSS Custom Properties\n\n\n\nName\nDescription\n\n\n\n\n--background-color\nBackground color of the alert\n\n\n--border-radius\nBorder radius of the badge if is rounded\n\n\n--color\nText color of the alert\n\n\n--font-family\nFont family of the alert text\n\n\n--font-size\nFont size of the alert text\n\n\n--font-weight\nFont weight of the alert text\n\n\n--padding-bottom\nPadding bottom of the alert\n\n\n--padding-left\nPadding left of the alert\n\n\n--padding-right\nPadding right of the alert\n\n\n--padding-top\nPadding top of the alert\n\n\n\n\nBuilt with StencilJS\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/is-badge.html":{"url":"additional-documentation/is-badge.html","title":"additional-page - is-badge","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\nis-badge\n\n\n\nProperties\n\n\n\nProperty\nAttribute\nDescription\nType\nDefault\n\n\n\n\ncolor\ncolor\nThe color options are: \"primary\", \"secondary\", \"success\", \"warning\", \"error\", \"light\", \"info\", \"white\", \"black\", and \"dark\".\nstring\nundefined\n\n\nrounded\nrounded\nIf true, make the badge rounded.\nboolean\nfalse\n\n\ntext\ntext\nThe text to display in the badge.\nstring\nundefined\n\n\n\nCSS Custom Properties\n\n\n\nName\nDescription\n\n\n\n\n--background-color\nBackground color of the badge\n\n\n--border-radius\nBorder radius of the badge if is rounded\n\n\n--color\nText color of the badge\n\n\n--font-family\nFont family of the badge text\n\n\n--font-size\nFont size of the badge text\n\n\n--font-weight\nFont weight of the badge text\n\n\n--height\nHeight of the badge\n\n\n--padding-bottom\nPadding bottom of the badge\n\n\n--padding-left\nPadding left of the badge\n\n\n--padding-right\nPadding right of the badge\n\n\n--padding-top\nPadding top of the badge\n\n\n\nDependencies\nUsed by\n\nis-multiselect\n\nGraph\ngraph TD;\n  is-multiselect --> is-badge\n  style is-badge fill:#f9f,stroke:#333,stroke-width:4px\nBuilt with StencilJS\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/is-multiselect.html":{"url":"additional-documentation/is-multiselect.html","title":"additional-page - is-multiselect","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\nis-multiselect\n\n\n\nProperties\n\n\n\nProperty\nAttribute\nDescription\nType\nDefault\n\n\n\n\ndisabled\ndisabled\nIf true, the user cannot interact with the select.\nboolean\nfalse\n\n\nitems\n--\nThe options list items.\nISelectItem[]\n[]\n\n\nlabelSelected\nlabel-selected\nThe label when option is selected.\nstring\n'\\u2713'\n\n\nlabelTo\n--\nThe label to remove or select.\nILabelTo\n{     remove: 'Click to Remove',     select: 'Click to Select'   }\n\n\nlimit\nlimit\nLimit the display of selected options. The rest will be hidden within the limitText string.\nnumber\n3\n\n\nlimitText\n--\nFunction that process the message shown when selected elements pass the defined limit.\nFunction\n(count: number) => 'and ' + count + ' more'\n\n\nmax\nmax\nMaximum selected items can be selected.\nnumber\nundefined\n\n\nplaceholder\nplaceholder\nThe text to display when not selected items.\nstring\n\"Pick some\"\n\n\nselected\n--\nThe selected items.\nISelectItem[]\n[]\n\n\nshowSelectedBadge\nshow-selected-badge\nIf true, The badges will show selected items.\nboolean\nfalse\n\n\n\nEvents\n\n\n\nEvent\nDescription\nType\n\n\n\n\nselectedChanged\nEmitted when the selected items has changed.\nCustomEvent\n\n\n\nMethods\ngetSelected() => Promise\nGet the selected items.\nReturns\nType: Promise\nDependencies\nDepends on\n\nis-badge\n\nGraph\ngraph TD;\n  is-multiselect --> is-badge\n  style is-multiselect fill:#f9f,stroke:#333,stroke-width:4px\nBuilt with StencilJS\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/is-readmore.html":{"url":"additional-documentation/is-readmore.html","title":"additional-page - is-readmore","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\nhome-about\n\n\n\nProperties\n\n\n\nProperty\nAttribute\nDescription\nType\nDefault\n\n\n\n\ntoggleOptions\n--\nThe options to config toggle text.\nIToggleOptions\n{     textOpen: 'Open',     textClose: 'Close',     textPosition: 'left',     textClass: ''   }\n\n\n\n\nBuilt with StencilJS\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
